#Plugins Required To Run This Skript

#Skript, Skbee, Sk-Rayfall, skript-particles, Lusk

#Original By SoulPheoniXYT
#Fixed and Edited by Spork3r
#Revamped, Optimized, and Updated by rar

on load:
	if script "Bliss Script Base.sk" is loaded:
		broadcast "&c&lrar's &6&lBliss Plugin &bhas been loaded successfully!"
	if script "Bliss Script Flux.sk" is loaded:
		broadcast "&c&lrar's &6&lBliss Plugin&b: &8&lFlux Addon &bhas been loaded successfully!"

	set {Bliss.Fragment} to nautilus shell named "<##FFD773>ɢᴇᴍ &r&7ꜰʀᴀɢᴍᴇɴᴛ" with custom model data 240
	set {Bliss.Energy} to nautilus shell named "<##96FFD9>&lᴇɴᴇʀɢʏ <##FFE4AB>ɪɴ ᴀ ʙᴏᴛᴛʟᴇ" with custom model data 300
	set {Bliss.Revive} to nautilus shell named "&dRestoration &fItem" with custom model data 210
	set {Bliss.Repair} to nautilus shell named "&7&lʀᴇᴘᴀɪʀ ᴋɪᴛ" with custom model data 200
	set {Astra.Dagger} to nautilus shell named "Dagger" with custom model data 230

	set {Bliss.Upgrader} to player head named "<##85ffa5>§lᴜᴘɢʀᴀᴅᴇʀ" with lore "§fʀɪɢʜᴛ-ᴄʟɪᴄᴋ ᴛᴏ ᴜᴘɢʀᴀᴅᴇ ʏᴏᴜʀ ɢᴇᴍ" and "" and "§cᴡᴀʀɴɪɴɢ: ᴜᴘɢʀᴀᴅᴇʀ ᴡɪʟʟ ᴅʀᴏᴘ ᴏɴ ᴅᴇᴀᴛʜ"
	set {_bliss.upgrader.nbt} to "{""minecraft:profile"":{id:[I;-1211027,5318,141349,-10636],properties:[{name:""textures"",""value"":""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZDk5MmU0YThmNDNjNzdhYzJlMmQ3OTJkOTYwNGY2MWYzNDM4N2M4NzdhYmEzNzEyZTQwNDdiNzQwYzU3OCJ9fX0=""}]}}"
	set {Bliss.Upgrader} to {Bliss.Upgrader} with nbt compound of {_bliss.upgrader.nbt}

	set {Bliss.Trader} to player head named "<##f7b2f7>§lᴛʀᴀᴅᴇʀ" with lore "§7ʀɪɢʜᴛ-ᴄʟɪᴄᴋ ᴛᴏ ᴄʜᴀɴɢᴇ ʏᴏᴜʀ ɢᴇᴍ ᴛʏᴘᴇ" and "§7ʏᴏᴜ ᴡɪʟʟ ʀᴇᴄᴇɪᴠᴇ ᴀ ʀᴀɴᴅᴏᴍ ᴛɪᴇʀ ᴏɴᴇ ɢᴇᴍ" and "" and "§cᴡᴀʀɴɪɴɢ: ᴜꜱɪɴɢ ᴛʜɪꜱ ᴡɪʟʟ ʟᴏꜱᴇ ʏᴏᴜʀ ᴄᴜʀʀᴇɴᴛ ɢᴇᴍ"
	set {_bliss.trader.nbt} to "{""minecraft:profile"":{id:[I;1,1,1,1],properties:[{name:""textures"",""value"":""eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvYmY2MjRhNDRlNzdiOTVkYmUxY2M3MzU1MzY5NTNlODQwYmE2YzE5YjAxNTdjNTQ5ZDliODI1MzQ2NDhjOGNlNCJ9fX0=""}]}}"
	set {Bliss.Trader} to {Bliss.Trader} with nbt compound of {_bliss.trader.nbt}

	#register new shaped recipe for {Bliss.Energy} named "&b&lᴇɴᴇʀɢʏ <##FFE4AB>ɪɴ ᴀ ʙᴏᴛᴛʟᴇ" using diamond block, golden apple, diamond block, redstone block, wither skeleton skull, redstone block, netherite ingot, golden apple and netherite ingot with id "energy"
	register new shaped recipe for {Bliss.Revive} named "&dRestoration &fItem" using enchanted golden apple, {Bliss.Fragment}, enchanted golden apple, {Bliss.Fragment}, respawn anchor, {Bliss.Fragment}, sculk catalyst, {Bliss.Fragment} and sculk catalyst with id "revive"
	register new shaped recipe for {Bliss.Fragment} named "<##FFD773>ɢᴇᴍ &r&7ꜰʀᴀɢᴍᴇɴᴛ" using diamond, echo shard, diamond, amethyst shard, totem of undying, amethyst shard, diamond, echo shard and diamond with id "fragment"
	register new shaped recipe for {Bliss.Repair} named "&7&lʀᴇᴘᴀɪʀ ᴋɪᴛ" using enchanted golden apple, {Bliss.Fragment}, enchanted golden apple, {Bliss.Fragment}, skeleton skull, {Bliss.Fragment}, crying obsidian, {Bliss.Fragment} and crying obsidian with id "repair"

	#give @p player_head[minecraft:item_name=ᴜᴘɢʀᴀᴅᴇʀ,profile={id:[I;-1211027,5318,141349,-10636],properties:[{name:"textures",value:"eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZDk5MmU0YThmNDNjNzdhYzJlMmQ3OTJkOTYwNGY2MWYzNDM4N2M4NzdhYmEzNzEyZTQwNDdiNzQwYzU3OCJ9fX0="}]}]

	set {Bliss.UpgraderGUI} to player head named "<##85ffa5>§lᴜᴘɢʀᴀᴅᴇʀ"
	set {Bliss.UpgraderGUI} to {Bliss.UpgraderGUI} with nbt compound of {_bliss.upgrader.nbt}
	set {Bliss.UpgraderGUI.T2} to player head named "<##85ffa5>§lᴜᴘɢʀᴀᴅᴇʀ"
	set {Bliss.UpgraderGUI.T2} to {Bliss.UpgraderGUI.T2} with nbt compound of {_bliss.upgrader.nbt}
	enchant {Bliss.UpgraderGUI.T2} with mending

	set {ObsidianTeam} to team named "EnchObi"
	set team color of {ObsidianTeam} to yellow

	set {StrengthTeam} to team named "Strength"
	set team color of {StrengthTeam} to red

	set {FireTeam} to team named "Fire"
	set team color of {FireTeam} to orange

	set {WealthTeam} to team named "Wealth"
	set team color of {WealthTeam} to green

	set {SpeedTeam} to team named "Speed"
	set team color of {SpeedTeam} to yellow

	set {PuffTeam} to team named "Puff"
	set team color of {PuffTeam} to white

	set {AstraTeam} to team named "Astra"
	set team color of {AstraTeam} to purple

	set {LifeTeam} to team named "Life"
	set team color of {LifeTeam} to pink

	set {FluxTeam} to team named "Flux"
	set team color of {FluxTeam} to light blue

	create an advancement tab named "Bliss":
		create an advancement named "shattered":
			set background of advancement to diamond ore
			set title of advancement to "&cShattered"
			set description of advancement to "Break your gem completely"
			set row of advancement to 1
			set column of advancement to 1
			set max progression of advancement to 1
			set frame of advancement to challenge
			set toast of advancement to true
			set announcement of advancement to true
			#set root of advancement to true
			set icon of advancement to diamond of mending
			build advancement
		create an advancement named "next_level":
			set title of advancement to "&aThe Next Level"
			set description of advancement to "Upgrade your gem to Tier 2"
			set row of advancement to 2
			set column of advancement to 1
			set max progression of advancement to 1
			set frame of advancement to goal
			set toast of advancement to true
			set announcement of advancement to true
			#set root of advancement to true
			set icon of advancement to diamond of mending
			build advancement
		build tab

command /testadv:
	permission: op
	trigger:
		create an advancement tab named "Bliss":
			create an advancement named "shattered":
				set background of advancement to diamond ore
				set title of advancement to "&cShattered"
				set description of advancement to "Break your gem completely"
				set row of advancement to 1
				set column of advancement to 1
				set max progression of advancement to 1
				set frame of advancement to challenge
				set toast of advancement to true
				set announcement of advancement to true
				#set root of advancement to true
				set icon of advancement to diamond of mending
				build advancement
			create an advancement named "next_level":
				set title of advancement to "&aThe Next Level"
				set description of advancement to "Upgrade your gem to Tier 2"
				set row of advancement to 2
				set column of advancement to 1
				set max progression of advancement to 1
				set frame of advancement to goal
				set toast of advancement to true
				set announcement of advancement to true
				#set root of advancement to true
				set icon of advancement to diamond of mending
				build advancement
			build tab
		add the custom advancement "Bliss/shattered" to custom advancements of player

on join:
   add the custom advancement "Bliss/shattered" to custom advancements of player

every 2 seconds:
	loop all players:
		if loop-player has obsidian named "&d&lᴇɴᴄʜᴀɴᴛᴇᴅ ᴏʙꜱɪᴅɪᴀɴ":
			add loop-player to team named "EnchObi"
			set team color of team of loop-player to yellow
			apply glowing without particles to loop-player for 3 seconds replacing the existing effect
		else:
			remove loop-player from team entries of team named "EnchObi"


# Giving gems out and restoring stats on join

on join:
	set {Shootdagger..%player%} to false
	if player is not an operator:
		disallow flight to player
	set the player's walk speed to 0.2
	set player's max health to 10
	delete {tradeSlot.%player%}
	execute console command "attribute %player% minecraft:generic.attack_speed base set 4"

	#loop all players:
	if {Prog1Started} is true:
		if {Bliss.Joined.%player%} is not true:
			set {Bliss.Tier2.%player%} to false
			set {Bliss.Energy.%player%} to 6
			set {Bliss.Gem.%player%} to a random integer between 1 and 8
			set {Bliss.Joined.%player%} to true
			set {Rolling} to true
			execute console command "bliss:cooldown %player%"
			clearGems(player)
			set {Bliss.get.r.gem%player%} to 2
			play sound "entity.player.levelup" for player
			wait 1 tick
			set {Rolling} to false
	#if {Bliss.Joined.%player%} is not true:
		#set {Bliss.Energy.%player%} to 6
		#set {Bliss.Gem.%player%} to a random integer between 1 and 8
		#set {Bliss.Joined.%player%} to true
		#execute console command "bliss:cooldown %player%"
		#wait 3 seconds
		#execute console command "clear %player%"
		#execute console command "bliss:gemgem %player%"
	wait 1 seconds
	set {Trusted.%player%.%player%} to true
		
every 1 tick:
	#set {Bliss.Energy} to nautilus shell named "&b&lᴇɴᴇʀɢʏ <##FFE4AB>ɪɴ ᴀ ʙᴏᴛᴛʟᴇ" with custom model data 300 # Bliss Items
	#set {Bliss.Revive} to nautilus shell named "&6&lʀᴇᴠɪᴠᴀʟ ᴛᴏᴍᴇ" with custom model data 210
	#set {Bliss.Upgrader} to player head named "<##85ffa5>§lᴜᴘɢʀᴀᴅᴇʀ" with lore "§fʀɪɢʜᴛ-ᴄʟɪᴄᴋ ᴛᴏ ᴜᴘɢʀᴀᴅᴇ ʏᴏᴜʀ ɢᴇᴍ" and "" and "§cᴡᴀʀɴɪɴɢ: ᴜᴘɢʀᴀᴅᴇʀ ᴡɪʟʟ ᴅʀᴏᴘ ᴏɴ ᴅᴇᴀᴛʜ"
	#set {Bliss.Trader} to player head named "<##f7b2f7>§lᴛʀᴀᴅᴇʀ" with lore "§7ʀɪɢʜᴛ-ᴄʟɪᴄᴋ ᴛᴏ ᴄʜᴀɴɢᴇ ʏᴏᴜʀ ɢᴇᴍ ᴛʏᴘᴇ" and "§7ʏᴏᴜ ᴡɪʟʟ ʀᴇᴄᴇɪᴠᴇ ᴀ ʀᴀɴᴅᴏᴍ ɢᴇᴍ" and "" and "§cᴡᴀʀɴɪɴɢ: ᴜꜱɪɴɢ ᴛʜɪꜱ ᴡɪʟʟ ʟᴏꜱᴇ ʏᴏᴜʀ ᴄᴜʀʀᴇɴᴛ ɢᴇᴍ"
	set {_bliss.gem.pristine.max.nbt} to "{Enchantments:[{id:vanishing_curse,lvl:1}],HideFlags:1}"
	loop all players: # Trading & Initial Gems
		if {Bliss.get.r.gem%loop-player%} is not 1:
			set {Bliss.Gem.Old.%loop-player%} to {Bliss.Gem.%loop-player%}
			set {Bliss.Gem.%loop-player%} to a random integer between 1 and 8
			loop 5 times:
				if {Bliss.Gem.%loop-player%} is {Bliss.Gem.Old.%loop-player%}:
					set {Bliss.Gem.%loop-player%} to a random integer between 1 and 8
			set {Bliss.get.r.gem%loop-player%} to 1
			if {Bliss.Gem.%loop-player%} is 1:
				add loop-player to team entries of team named "Strength"
				if {Rolling} is not true:
					if loop-player is not {Reviving}:
						send "🔮 &bYou have traded your current gem to &4&lꜱᴛʀᴇɴɢᴛʜ" to loop-player
				execute console command "bliss:gemgem %loop-player%"
			if {Bliss.Gem.%loop-player%} is 2:
				add loop-player to team entries of team named "Fire"
				if {Rolling} is not true:
					if loop-player is not {Reviving}:
						send "🔮 &bYou have traded your current gem to §6§lꜰɪʀᴇ" to loop-player
				execute console command "bliss:gemgem %loop-player%"
			if {Bliss.Gem.%loop-player%} is 3:
				add loop-player to team entries of team named "Wealth"
				if {Rolling} is not true:
					if loop-player is not {Reviving}:
						send "🔮 &bYou have traded your current gem to §2§lᴡᴇᴀʟᴛʜ" to loop-player
				execute console command "bliss:gemgem %loop-player%"
			if {Bliss.Gem.%loop-player%} is 4:
				add loop-player to team entries of team named "Speed"
				if {Rolling} is not true:
					if loop-player is not {Reviving}: 
						send "🔮 &bYou have traded your current gem to &e&lsᴘᴇᴇᴅ" to loop-player
				execute console command "bliss:gemgem %loop-player%"
			if {Bliss.Gem.%loop-player%} is 5:
				add loop-player to team entries of team named "Puff"
				if {Rolling} is not true:
					if loop-player is not {Reviving}:
						send "🔮 &bYou have traded your current gem to &f§lᴘᴜꜰꜰ" to loop-player
				execute console command "bliss:gemgem %loop-player%"
			if {Bliss.Gem.%loop-player%} is 6:
				add loop-player to team entries of team named "Astra"
				if {Rolling} is not true:
					if loop-player is not {Reviving}:
						send "🔮 &bYou have traded your current gem to &5&lᴀsᴛʀᴀ" to loop-player
				execute console command "bliss:gemgem %loop-player%"
			if {Bliss.Gem.%loop-player%} is 7:
				add loop-player to team entries of team named "Life"
				if {Rolling} is not true:
					if loop-player is not {Reviving}:
						send "🔮 &bYou have traded your current gem to §d§lʟɪꜰᴇ" to loop-player
				execute console command "bliss:gemgem %loop-player%"	
			if {Bliss.Gem.%loop-player%} is 8:
				add loop-player to team entries of team named "Flux"
				if {Rolling} is not true:
					if loop-player is not {Reviving}:
						send "🔮 &bYou have traded your current gem to §9§lꜰʟᴜx" to loop-player
				execute console command "bliss:gemgem %loop-player%"	
		if {Bliss.Energy.%loop-player%} > 11: # No excessive energy
			set {Bliss.Energy.%loop-player%} to 11


every 5 ticks:
	loop all players:
		if {Bliss.Energy.%loop-player%} < 2:
			send action bar "&cBROKEN" to loop-player

every 2 ticks:
	loop all players:
		if {Shootdagger..%loop-player%} is 5: # Astra Daggers Particles
			teleport {dag.%loop-player%} to location -0.8 metres infront and -1 metres left loop-player
			teleport {dag2.%loop-player%} to location -0.8 metres infront and 1 metres left loop-player
			teleport {dag3.%loop-player%} to location -1.2 metres left loop-player
			teleport {dag4.%loop-player%} to location 1.2 metres left loop-player
			teleport {dag5.%loop-player%} to location -1.2 metres infront loop-player
		if {Shootdagger..%loop-player%} is 4:
			teleport {dag5.%loop-player%} to location 0.9 metres infront {dag5.%loop-player%}

			set {_daggerparticle} to location 1 metres above {dag5.%loop-player%}
			draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_daggerparticle} with extra 0 with force

			teleport {dag.%loop-player%} to location -0.8 metres infront and -1 metres left loop-player
			teleport {dag2.%loop-player%} to location -0.8 metres infront and 1 metres left loop-player
			teleport {dag3.%loop-player%} to location -1.2 metres left loop-player
			teleport {dag4.%loop-player%} to location 1.2 metres left loop-player
		if {Shootdagger..%loop-player%} is 3:
			teleport {dag4.%loop-player%} to location 0.9 metres infront {dag4.%loop-player%}
			teleport {dag5.%loop-player%} to location 0.9 metres infront {dag5.%loop-player%}

			set {_daggerparticle} to location 1 metres above {dag5.%loop-player%}
			draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_daggerparticle} with extra 0 with force
			set {_daggerparticle} to location 1 metres above {dag4.%loop-player%}
			draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_daggerparticle} with extra 0 with force

			teleport {dag.%loop-player%} to location -0.8 metres infront and -1 metres left loop-player
			teleport {dag2.%loop-player%} to location -0.8 metres infront and 1 metres left loop-player
			teleport {dag3.%loop-player%} to location -1.2 metres left loop-player
		if {Shootdagger..%loop-player%} is 2:
			teleport {dag3.%loop-player%} to location 0.9 metres infront {dag3.%loop-player%}
			teleport {dag4.%loop-player%} to location 0.9 metres infront {dag4.%loop-player%}
			teleport {dag5.%loop-player%} to location 0.9 metres infront {dag5.%loop-player%}
			set {_daggerparticle} to location 1 metres above {dag5.%loop-player%}
			draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_daggerparticle} with extra 0 with force
			set {_daggerparticle} to location 1 metres above {dag4.%loop-player%}
			draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_daggerparticle} with extra 0 with force
			set {_daggerparticle} to location 1 metres above {dag3.%loop-player%}
			draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_daggerparticle} with extra 0 with force

			teleport {dag.%loop-player%} to location -0.8 metres infront and -1 metres left loop-player
			teleport {dag2.%loop-player%} to location -0.8 metres infront and 1 metres left loop-player
		if {Shootdagger..%loop-player%} is 1:
			teleport {dag2.%loop-player%} to location 0.9 metres infront {dag2.%loop-player%}
			teleport {dag3.%loop-player%} to location 0.9 metres infront {dag3.%loop-player%}
			teleport {dag4.%loop-player%} to location 0.9 metres infront {dag4.%loop-player%}
			teleport {dag5.%loop-player%} to location 0.9 metres infront {dag5.%loop-player%}
			set {_daggerparticle} to location 1 metres above {dag5.%loop-player%}
			draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_daggerparticle} with extra 0 with force
			set {_daggerparticle} to location 1 metres above {dag4.%loop-player%}
			draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_daggerparticle} with extra 0 with force
			set {_daggerparticle} to location 1 metres above {dag3.%loop-player%}
			draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_daggerparticle} with extra 0 with force
			set {_daggerparticle} to location 1 metres above {dag2.%loop-player%}
			draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_daggerparticle} with extra 0 with force

			teleport {dag.%loop-player%} to location -0.8 metres infront and -1 metres left loop-player
		if {Shootdagger..%loop-player%} is 0:
			teleport {dag.%loop-player%} to location 0.9 metres infront {dag.%loop-player%}
			teleport {dag2.%loop-player%} to location 0.9 metres infront {dag2.%loop-player%}
			teleport {dag3.%loop-player%} to location 0.9 metres infront {dag3.%loop-player%}
			teleport {dag4.%loop-player%} to location 0.9 metres infront {dag4.%loop-player%}
			teleport {dag5.%loop-player%} to location 0.9 metres infront {dag5.%loop-player%}
			set {_daggerparticle} to location 1 metres above {dag5.%loop-player%}
			draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_daggerparticle} with extra 0 with force
			set {_daggerparticle} to location 1 metres above {dag4.%loop-player%}
			draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_daggerparticle} with extra 0 with force
			set {_daggerparticle} to location 1 metres above {dag3.%loop-player%}
			draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_daggerparticle} with extra 0 with force
			set {_daggerparticle} to location 1 metres above {dag2.%loop-player%}
			draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_daggerparticle} with extra 0 with force
			set {_daggerparticle} to location 1 metres above {dag.%loop-player%}
			draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_daggerparticle} with extra 0 with force
		if {Shootdagger..%loop-player%} is false:
			teleport {dag.%loop-player%} to location 0.9 metres infront {dag.%loop-player%}
			teleport {dag2.%loop-player%} to location 0.9 metres infront {dag2.%loop-player%}
			teleport {dag3.%loop-player%} to location 0.9 metres infront {dag3.%loop-player%}
			teleport {dag4.%loop-player%} to location 0.9 metres infront {dag4.%loop-player%}
			teleport {dag5.%loop-player%} to location 0.9 metres infront {dag5.%loop-player%}

			set {_daggerparticle} to location 1 metres above {dag5.%loop-player%}
			draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_daggerparticle} with extra 0 with force
			set {_daggerparticle} to location 1 metres above {dag4.%loop-player%}
			draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_daggerparticle} with extra 0 with force
			set {_daggerparticle} to location 1 metres above {dag3.%loop-player%}
			draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_daggerparticle} with extra 0 with force
			set {_daggerparticle} to location 1 metres above {dag2.%loop-player%}
			draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_daggerparticle} with extra 0 with force
			set {_daggerparticle} to location 1 metres above {dag.%loop-player%}
			draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_daggerparticle} with extra 0 with force


#every 1 tick:
	#loop all players:
		#if {fireball.%loop-player%} > 0: # Fireball Entity Above Player
			#teleport {fireball.armorstand.%loop-player%} to location -0.6 metres infront and 0.6 metres above loop-player
			
# Dragon Egg

on pick up of dragon egg:
	loop all players:
		set {dragonegg.%loop-player%} to false
	set {dragonegg.%player%} to true
	set {dragonegg.owner} to uuid of player

every 10 seconds:
	loop all players:
		if {dragonegg.%loop-player%} is true:
			if {dragonegg.owner} is not uuid of loop-player:
				set {dragonegg.%loop-player%} to false


on place of dragon egg:
	loop all players:
		set {dragonegg.%loop-player%} to false

on drop of dragon egg:
	loop all players:
		set {dragonegg.%loop-player%} to false


# Enchanted Obsidian

every 1 seconds:
	loop all players:
		if {EnchObsidian..%loop-player%} is true:
			apply glowing 1 without particles whilst hiding the potion icon to loop-player for 2 seconds replacing the existing effect

on right click:
	if player is holding obsidian:
		if {Prog1} is true:
			if the clicked block is a reinforced deepslate:
				stop
			else:
				cancel event
	else if player's off hand item is obsidian:
		if {Prog1} is true:
			if the clicked block is a reinforced deepslate:
				stop
			else:
				cancel event


command /enchobs:
	permission: op
	trigger:
		set {EnchObsidian} to obsidian named "&d&lᴇɴᴄʜᴀɴᴛᴇᴅ ᴏʙꜱɪᴅɪᴀɴ"
		enchant {EnchObsidian} with mending
		give {EnchObsidian} to player

on pick up of obsidian:
	if {Prog1} is true:
		if event-item is not enchanted:
			set event-dropped item to stone

on break of obsidian:
	if {Prog1} is true:
		cancel event

on drop of obsidian:
	if event-item is enchanted:
		set {EnchObsidian..%player%} to false
		wait 5 ticks
		if player is not an operator:
			op player
			make player execute command "execute as @e[type=minecraft:item,nbt={OnGround:1b},distance=..2] run data merge entity @s {Glowing:1}"
			deop player
		else:
			make player execute command "execute as @e[type=minecraft:item,nbt={OnGround:1b},distance=..2] run data merge entity @s {Glowing:1}"
		#add event-item to team entries of team named "EnchObi"
		

on form of obsidian:
	if {Prog1} is true:
		set event-block to stone

#[<-----------------Anti-Drop System----------------->]

on drop prismarine shard:
	if event-item is {Bliss.Strength.T2.%player%}:
		cancel event
on drop amethyst shard:
	if event-item is {Bliss.Strength.T1.%player%}:
		cancel event
on drop prismarine shard:
	if event-item is {Bliss.Puff.T2.%player%}:
		cancel event
on drop amethyst shard:
	if event-item is {Bliss.Puff.T1.%player%}:
		cancel event
on drop prismarine shard:
	if event-item is {Bliss.Flux.T2.%player%}:
		cancel event
on drop amethyst shard:
	if event-item is {Bliss.Flux.T1.%player%}:
		cancel event
on drop prismarine shard:
	if event-item is {Bliss.Speed.T2.%player%}:
		cancel event
on drop amethyst shard:
	if event-item is {Bliss.Speed.T1.%player%}:
		cancel event
on drop prismarine shard:
	if event-item is {Bliss.Fire.T2.%player%}:
		cancel event
on drop amethyst shard:
	if event-item is {Bliss.Fire.T1.%player%}:
		cancel event
on drop prismarine shard:
	if event-item is {Bliss.Wealth.T2.%player%}:
		cancel event
on drop amethyst shard:
	if event-item is {Bliss.Wealth.T1.%player%}:
		cancel event
on drop prismarine shard:
	if event-item is {Bliss.Astra.T2.%player%}:
		cancel event
on drop amethyst shard:
	if event-item is {Bliss.Astra.T1.%player%}:
		cancel event
on drop prismarine shard:
	if event-item is {Bliss.Life.T2.%player%}:
		cancel event
on drop amethyst shard:
	if event-item is {Bliss.Life.T1.%player%}:
		cancel event

#[<-----------------Life System----------------->]


on death of player:
	remove {Bliss.Strength.T2.%victim%} and {Bliss.Strength.T1.%victim%} and {Bliss.Flux.T2.%victim%} and {Bliss.Flux.T1.%victim%} and {Bliss.Fire.T2.%victim%} and {Bliss.Fire.T1.%victim%} and {Bliss.Wealth.T2.%victim%} and {Bliss.Wealth.T1.%victim%} and {Bliss.Speed.T2.%victim%} and {Bliss.Speed.T1.%victim%} and {Bliss.Puff.T2.%victim%} and {Bliss.Puff.T1.%victim%} and {Bliss.Astra.T2.%victim%} and {Bliss.Astra.T1.%victim%} and {Bliss.Life.T2.%victim%} and {Bliss.Life.T1.%victim%} from the drops

	if {Bliss.Tier2.%victim%} is true:
		drop {Bliss.Upgrader}
	set {EnchObsidian..%victim%} to false
	set {Bliss.Tier2.%victim%} to false
	wait 1 tick
	execute console command "bliss:cooldown %victim%"
	if {Bliss.Gem.%victim%} is 1:
		if {Bliss.Energy.%victim%} is 0:
			send "&bYou lost &cenergy. &byour &4&lsᴛʀᴇɴɢᴛʜ &bgem is now at &fN/A" to victim
		if {Bliss.Energy.%victim%} is 1:
			send "&bYou lost &cenergy. &byour &4&lsᴛʀᴇɴɢᴛʜ &bgem is now at &7Broken" to victim
			loop all players:
				if {Shattered.%victim%} is not true:
					set {Shattered.%victim%} to true
					send "&f%victim% has made the advancement &a[Shattered]" to loop-player
		if {Bliss.Energy.%victim%} is 2:
			send "&bYou lost &cenergy. &byour &4&lsᴛʀᴇɴɢᴛʜ &bgem is now at &4Ruined" to victim
		if {Bliss.Energy.%victim%} is 3:
			send "&bYou lost &cenergy. &byour &4&lsᴛʀᴇɴɢᴛʜ &bgem is now at &eDamaged" to victim
		if {Bliss.Energy.%victim%} is 4:
			send "&bYou lost &cenergy. &byour &4&lsᴛʀᴇɴɢᴛʜ &bgem is now at &aCracked" to victim
		if {Bliss.Energy.%victim%} is 5:
			send "&bYou lost &cenergy. &byour &4&lsᴛʀᴇɴɢᴛʜ &bgem is now at &aScratched" to victim
		if {Bliss.Energy.%victim%} is 6:
			send "&bYou lost &cenergy. &byour &4&lsᴛʀᴇɴɢᴛʜ &bgem is now at &bPristine" to victim
		if {Bliss.Energy.%victim%} is 7:
			send "&bYou lost &cenergy. &byour &4&lsᴛʀᴇɴɢᴛʜ &bgem is now at &bPristine + 1" to victim
		if {Bliss.Energy.%victim%} is 8:
			send "&bYou lost &cenergy. &byour &4&lsᴛʀᴇɴɢᴛʜ &bgem is now at &bPristine + 2" to victim
		if {Bliss.Energy.%victim%} is 9:
			send "&bYou lost &cenergy. &byour &4&lsᴛʀᴇɴɢᴛʜ &bgem is now at &bPristine + 3" to victim
		if {Bliss.Energy.%victim%} is 10:
			send "&bYou lost &cenergy. &byour &4&lsᴛʀᴇɴɢᴛʜ &bgem is now at &bPristine + 4" to victim
		if {Bliss.Energy.%victim%} > 10:
			send "&bYou lost &cenergy. &byour &4&lsᴛʀᴇɴɢᴛʜ &bgem is now at &bPristine + 5" to victim

	if {Bliss.Gem.%attacker%} is 1:
		if {Bliss.Energy.%attacker%} is 1:
			send "&bYou &agained &benergy. &byour &4&lsᴛʀᴇɴɢᴛʜ &bgem is now &7Broken" to attacker
		if {Bliss.Energy.%attacker%} is 2:
			send "&bYou &agained &benergy. &byour &4&lsᴛʀᴇɴɢᴛʜ &bgem is now &4Ruined" to attacker
		if {Bliss.Energy.%attacker%} is 3:
			send "&bYou &agained &benergy. &byour &4&lsᴛʀᴇɴɢᴛʜ &bgem is now &eDamaged" to attacker
		if {Bliss.Energy.%attacker%} is 4:
			send "&bYou &agained &benergy. &byour &4&lsᴛʀᴇɴɢᴛʜ &bgem is now &aCracked" to attacker
		if {Bliss.Energy.%attacker%} is 5:
			send "&bYou &agained &benergy. &byour &4&lsᴛʀᴇɴɢᴛʜ &bgem is now &aScratched" to attacker
		if {Bliss.Energy.%attacker%} is 6:
			send "&bYou &agained &benergy. &byour &4&lsᴛʀᴇɴɢᴛʜ &bgem is now &bPristine" to attacker
		if {Bliss.Energy.%attacker%} is 7:
			send "&bYou &agained &benergy. &byour &4&lsᴛʀᴇɴɢᴛʜ &bgem is now &bPristine + 1" to attacker
		if {Bliss.Energy.%attacker%} is 8:
			send "&bYou &agained &benergy. &byour &4&lsᴛʀᴇɴɢᴛʜ &bgem is now &bPristine + 2" to attacker
		if {Bliss.Energy.%attacker%} is 9:
			send "&bYou &agained &benergy. &byour &4&lsᴛʀᴇɴɢᴛʜ &bgem is now &bPristine + 3" to attacker
		if {Bliss.Energy.%attacker%} is 10:
			send "&bYou &agained &benergy. &byour &4&lsᴛʀᴇɴɢᴛʜ &bgem is now &bPristine + 4" to attacker
		if {Bliss.Energy.%attacker%} > 10:
			send "&bYou &agained &benergy. &byour &4&lsᴛʀᴇɴɢᴛʜ &bgem is now &bPristine + 5" to attacker

	if {Bliss.Gem.%victim%} is 2:
		if {Bliss.Energy.%victim%} is 0:
			send "&bYou lost &cenergy. &byour §6§lꜰɪʀᴇ &bgem is now at &fN/A" to victim
		if {Bliss.Energy.%victim%} is 1:
			send "&bYou lost &cenergy. &byour §6§lꜰɪʀᴇ &bgem is now at &7Broken" to victim
			loop all players:
				if {Shattered.%victim%} is not true:
					set {Shattered.%victim%} to true
					send "&f%victim% has made the advancement &a[Shattered]" to loop-player
		if {Bliss.Energy.%victim%} is 2:
			send "&bYou lost &cenergy. &byour §6§lꜰɪʀᴇ &bgem is now at &4Ruined" to victim
		if {Bliss.Energy.%victim%} is 3:
			send "&bYou lost &cenergy. &byour §6§lꜰɪʀᴇ &bgem is now at &eDamaged" to victim
		if {Bliss.Energy.%victim%} is 4:
			send "&bYou lost &cenergy. &byour §6§lꜰɪʀᴇ &bgem is now at &aCracked" to victim
		if {Bliss.Energy.%victim%} is 5:
			send "&bYou lost &cenergy. &byour §6§lꜰɪʀᴇ &bgem is now at &aScratched" to victim
		if {Bliss.Energy.%victim%} is 6:
			send "&bYou lost &cenergy. &byour §6§lꜰɪʀᴇ &bgem is now at &bPristine" to victim
		if {Bliss.Energy.%victim%} is 7:
			send "&bYou lost &cenergy. &byour §6§lꜰɪʀᴇ &bgem is now at &bPristine + 1" to victim
		if {Bliss.Energy.%victim%} is 8:
			send "&bYou lost &cenergy. &byour §6§lꜰɪʀᴇ &bgem is now at &bPristine + 2" to victim
		if {Bliss.Energy.%victim%} is 9:
			send "&bYou lost &cenergy. &byour §6§lꜰɪʀᴇ &bgem is now at &bPristine + 3" to victim
		if {Bliss.Energy.%victim%} is 10:
			send "&bYou lost &cenergy. &byour §6§lꜰɪʀᴇ &bgem is now at &bPristine + 4" to victim
		if {Bliss.Energy.%victim%} > 10:
			send "&bYou lost &cenergy. &byour §6§lꜰɪʀᴇ &bgem is now at &bPristine + 5" to victim

	if {Bliss.Gem.%attacker%} is 2:
		if {Bliss.Energy.%attacker%} is 1:
			send "&bYou &agained &benergy. &byour §6§lꜰɪʀᴇ &bgem is now &7Broken" to attacker
		if {Bliss.Energy.%attacker%} is 2:
			send "&bYou &agained &benergy. &byour §6§lꜰɪʀᴇ &bgem is now &4Ruined" to attacker
		if {Bliss.Energy.%attacker%} is 3:
			send "&bYou &agained &benergy. &byour §6§lꜰɪʀᴇ &bgem is now &eDamaged" to attacker
		if {Bliss.Energy.%attacker%} is 4:
			send "&bYou &agained &benergy. &byour §6§lꜰɪʀᴇ &bgem is now &aCracked" to attacker
		if {Bliss.Energy.%attacker%} is 5:
			send "&bYou &agained &benergy. &byour §6§lꜰɪʀᴇ &bgem is now &aScratched" to attacker
		if {Bliss.Energy.%attacker%} is 6:
			send "&bYou &agained &benergy. &byour §6§lꜰɪʀᴇ &bgem is now &bPristine" to attacker
		if {Bliss.Energy.%attacker%} is 7:
			send "&bYou &agained &benergy. &byour §6§lꜰɪʀᴇ &bgem is now &bPristine + 1" to attacker
		if {Bliss.Energy.%attacker%} is 8:
			send "&bYou &agained &benergy. &byour §6§lꜰɪʀᴇ &bgem is now &bPristine + 2" to attacker
		if {Bliss.Energy.%attacker%} is 9:
			send "&bYou &agained &benergy. &byour §6§lꜰɪʀᴇ &bgem is now &bPristine + 3" to attacker
		if {Bliss.Energy.%attacker%} is 10:
			send "&bYou &agained &benergy. &byour §6§lꜰɪʀᴇ &bgem is now &bPristine + 4" to attacker
		if {Bliss.Energy.%attacker%} > 10:
			send "&bYou &agained &benergy. &byour §6§lꜰɪʀᴇ &bgem is now &bPristine + 5" to attacker

	if {Bliss.Gem.%victim%} is 3:
		if {Bliss.Energy.%victim%} is 0:
			send "&bYou lost &cenergy. &byour &2&lᴡᴇᴀʟᴛʜ &bgem is now at &fN/A" to victim
		if {Bliss.Energy.%victim%} is 1:
			send "&bYou lost &cenergy. &byour &2&lᴡᴇᴀʟᴛʜ &bgem is now at &7Broken" to victim
			loop all players:
				if {Shattered.%victim%} is not true:
					set {Shattered.%victim%} to true
					send "&f%victim% has made the advancement &a[Shattered]" to loop-player
		if {Bliss.Energy.%victim%} is 2:
			send "&bYou lost &cenergy. &byour &2&lᴡᴇᴀʟᴛʜ &bgem is now at &4Ruined" to victim
		if {Bliss.Energy.%victim%} is 3:
			send "&bYou lost &cenergy. &byour &2&lᴡᴇᴀʟᴛʜ &bgem is now at &eDamaged" to victim
		if {Bliss.Energy.%victim%} is 4:
			send "&bYou lost &cenergy. &byour &2&lᴡᴇᴀʟᴛʜ &bgem is now at &aCracked" to victim
		if {Bliss.Energy.%victim%} is 5:
			send "&bYou lost &cenergy. &byour &2&lᴡᴇᴀʟᴛʜ &bgem is now at &aScratched" to victim
		if {Bliss.Energy.%victim%} is 6:
			send "&bYou lost &cenergy. &byour &2&lᴡᴇᴀʟᴛʜ &bgem is now at &bPristine" to victim
		if {Bliss.Energy.%victim%} is 7:
			send "&bYou lost &cenergy. &byour &2&lᴡᴇᴀʟᴛʜ &bgem is now at &bPristine + 1" to victim
		if {Bliss.Energy.%victim%} is 8:
			send "&bYou lost &cenergy. &byour &2&lᴡᴇᴀʟᴛʜ &bgem is now at &bPristine + 2" to victim
		if {Bliss.Energy.%victim%} is 9:
			send "&bYou lost &cenergy. &byour &2&lᴡᴇᴀʟᴛʜ &bgem is now at &bPristine + 3" to victim
		if {Bliss.Energy.%victim%} is 10:
			send "&bYou lost &cenergy. &byour &2&lᴡᴇᴀʟᴛʜ &bgem is now at &bPristine + 4" to victim
		if {Bliss.Energy.%victim%} > 10:
			send "&bYou lost &cenergy. &byour §2§lᴡᴇᴀʟᴛʜ &bgem is now at &bPristine + 5" to victim

	if {Bliss.Gem.%attacker%} is 3:
		if {Bliss.Energy.%attacker%} is 1:
			send "&bYou &agained &benergy. &byour §2§lᴡᴇᴀʟᴛʜ &bgem is now &7Broken" to attacker
		if {Bliss.Energy.%attacker%} is 2:
			send "&bYou &agained &benergy. &byour §2§lᴡᴇᴀʟᴛʜ &bgem is now &4Ruined" to attacker
		if {Bliss.Energy.%attacker%} is 3:
			send "&bYou &agained &benergy. &byour §2§lᴡᴇᴀʟᴛʜ &bgem is now &eDamaged" to attacker
		if {Bliss.Energy.%attacker%} is 4:
			send "&bYou &agained &benergy. &byour §2§lᴡᴇᴀʟᴛʜ &bgem is now &aCracked" to attacker
		if {Bliss.Energy.%attacker%} is 5:
			send "&bYou &agained &benergy. &byour §2§lᴡᴇᴀʟᴛʜ &bgem is now &aScratched" to attacker
		if {Bliss.Energy.%attacker%} is 6:
			send "&bYou &agained &benergy. &byour §2§lᴡᴇᴀʟᴛʜ &bgem is now &bPristine" to attacker
		if {Bliss.Energy.%attacker%} is 7:
			send "&bYou &agained &benergy. &byour §2§lᴡᴇᴀʟᴛʜ &bgem is now &bPristine + 1" to attacker
		if {Bliss.Energy.%attacker%} is 8:
			send "&bYou &agained &benergy. &byour §2§lᴡᴇᴀʟᴛʜ &bgem is now &bPristine + 2" to attacker
		if {Bliss.Energy.%attacker%} is 9:
			send "&bYou &agained &benergy. &byour §2§lᴡᴇᴀʟᴛʜ &bgem is now &bPristine + 3" to attacker
		if {Bliss.Energy.%attacker%} is 10:
			send "&bYou &agained &benergy. &byour §2§lᴡᴇᴀʟᴛʜ &bgem is now &bPristine + 4" to attacker
		if {Bliss.Energy.%attacker%} > 10:
			send "&bYou &agained &benergy. &byour §2§lᴡᴇᴀʟᴛʜ &bgem is now &bPristine + 5" to attacker

	if {Bliss.Gem.%victim%} is 4:
		if {Bliss.Energy.%victim%} is 0:
			send "&bYou lost &cenergy. &byour &e&lsᴘᴇᴇᴅ &bgem is now at &fN/A" to victim
		if {Bliss.Energy.%victim%} is 1:
			send "&bYou lost &cenergy. &byour &e&lsᴘᴇᴇᴅ &bgem is now at &7Broken" to victim
			loop all players:
				if {Shattered.%victim%} is not true:
					set {Shattered.%victim%} to true
					send "&f%victim% has made the advancement &a[Shattered]" to loop-player
		if {Bliss.Energy.%victim%} is 2:
			send "&bYou lost &cenergy. &byour &e&lsᴘᴇᴇᴅ &bgem is now at &4Ruined" to victim
		if {Bliss.Energy.%victim%} is 3:
			send "&bYou lost &cenergy. &byour &e&lsᴘᴇᴇᴅ &bgem is now at &eDamaged" to victim
		if {Bliss.Energy.%victim%} is 4:
			send "&bYou lost &cenergy. &byour &e&lsᴘᴇᴇᴅ &bgem is now at &aCracked" to victim
		if {Bliss.Energy.%victim%} is 5:
			send "&bYou lost &cenergy. &byour &e&lsᴘᴇᴇᴅ &bgem is now at &aScratched" to victim
		if {Bliss.Energy.%victim%} is 6:
			send "&bYou lost &cenergy. &byour &e&lsᴘᴇᴇᴅ &bgem is now at &bPristine" to victim
		if {Bliss.Energy.%victim%} is 7:
			send "&bYou lost &cenergy. &byour &e&lsᴘᴇᴇᴅ &bgem is now at &bPristine + 1" to victim
		if {Bliss.Energy.%victim%} is 8:
			send "&bYou lost &cenergy. &byour &e&lsᴘᴇᴇᴅ &bgem is now at &bPristine + 2" to victim
		if {Bliss.Energy.%victim%} is 9:
			send "&bYou lost &cenergy. &byour &e&lsᴘᴇᴇᴅ &bgem is now at &bPristine + 3" to victim
		if {Bliss.Energy.%victim%} is 10:
			send "&bYou lost &cenergy. &byour &e&lsᴘᴇᴇᴅ &bgem is now at &bPristine + 4" to victim
		if {Bliss.Energy.%victim%} > 10:
			send "&bYou lost &cenergy. &byour &e&lsᴘᴇᴇᴅ &bgem is now at &bPristine + 5" to victim

	if {Bliss.Gem.%attacker%} is 4:
		if {Bliss.Energy.%attacker%} is 1:
			send "&bYou &agained &benergy. &byour &e&lsᴘᴇᴇᴅ &bgem is now &7Broken" to attacker
		if {Bliss.Energy.%attacker%} is 2:
			send "&bYou &agained &benergy. &byour &e&lsᴘᴇᴇᴅ &bgem is now &4Ruined" to attacker
		if {Bliss.Energy.%attacker%} is 3:
			send "&bYou &agained &benergy. &byour &e&lsᴘᴇᴇᴅ &bgem is now &eDamaged" to attacker
		if {Bliss.Energy.%attacker%} is 4:
			send "&bYou &agained &benergy. &byour &e&lsᴘᴇᴇᴅ &bgem is now &aCracked" to attacker
		if {Bliss.Energy.%attacker%} is 5:
			send "&bYou &agained &benergy. &byour &e&lsᴘᴇᴇᴅ &bgem is now &aScratched" to attacker
		if {Bliss.Energy.%attacker%} is 6:
			send "&bYou &agained &benergy. &byour &e&lsᴘᴇᴇᴅ &bgem is now &bPristine" to attacker
		if {Bliss.Energy.%attacker%} is 7:
			send "&bYou &agained &benergy. &byour &e&lsᴘᴇᴇᴅ &bgem is now &bPristine + 1" to attacker
		if {Bliss.Energy.%attacker%} is 8:
			send "&bYou &agained &benergy. &byour &e&lsᴘᴇᴇᴅ &bgem is now &bPristine + 2" to attacker
		if {Bliss.Energy.%attacker%} is 9:
			send "&bYou &agained &benergy. &byour &e&lsᴘᴇᴇᴅ &bgem is now &bPristine + 3" to attacker
		if {Bliss.Energy.%attacker%} is 10:
			send "&bYou &agained &benergy. &byour &e&lsᴘᴇᴇᴅ &bgem is now &bPristine + 4" to attacker
		if {Bliss.Energy.%attacker%} > 10:
			send "&bYou &agained &benergy. &byour &e&lsᴘᴇᴇᴅ &bgem is now &bPristine + 5" to attacker

	if {Bliss.Gem.%victim%} is 5:
		if {Bliss.Energy.%victim%} is 0:
			send "&bYou lost &cenergy. &byour &f&lᴘᴜꜰꜰ &bgem is now &fN/A" to victim
		if {Bliss.Energy.%victim%} is 1:
			send "&bYou lost &cenergy. &byour &f&lᴘᴜꜰꜰ &bgem is now &7Broken" to victim
			loop all players:
				if {Shattered.%victim%} is not true:
					set {Shattered.%victim%} to true
					send "&f%victim% has made the advancement &a[Shattered]" to loop-player
		if {Bliss.Energy.%victim%} is 2:
			send "&bYou lost &cenergy. &byour &f&lᴘᴜꜰꜰ &bgem is now &4Ruined" to victim
		if {Bliss.Energy.%victim%} is 3:
			send "&bYou lost &cenergy. &byour &f&lᴘᴜꜰꜰ &bgem is now &eDamaged" to victim
		if {Bliss.Energy.%victim%} is 4:
			send "&byou lost &cenergy. &byour &f&lᴘᴜꜰꜰ &bgem is now &aCracked" to victim
		if {Bliss.Energy.%victim%} is 5:
			send "&bYou lost &cenergy. &byour &f&lᴘᴜꜰꜰ &bgem is now &aScratched" to victim
		if {Bliss.Energy.%victim%} is 6:
			send "&bYou lost &cenergy. &byour &f&lᴘᴜꜰꜰ &bgem is now &bPristine" to victim
		if {Bliss.Energy.%victim%} is 7:
			send "&bYou lost &cenergy. &byour &f&lᴘᴜꜰꜰ &bgem is now &bPristine + 1" to victim
		if {Bliss.Energy.%victim%} is 8:
			send "&bYou lost &cenergy. &byour &f&lᴘᴜꜰꜰ &bgem is now &bPristine + 2" to victim
		if {Bliss.Energy.%victim%} is 9:
			send "&bYou lost &cenergy. &byour &f&lᴘᴜꜰꜰ &bgem is now &bPristine + 3" to victim
		if {Bliss.Energy.%victim%} is 10:
			send "&bYou lost &cenergy. &byour &f&lᴘᴜꜰꜰ &bgem is now &bPristine + 4" to victim
		if {Bliss.Energy.%victim%} > 10:
			send "&bYou lost &cenergy. &byour &f&lᴘᴜꜰꜰ &bgem is now &bPristine + 5" to victim

	if {Bliss.Gem.%attacker%} is 5:
		if {Bliss.Energy.%attacker%} is 1:
			send "&bYou &agained &benergy. &byour §f§lᴘᴜꜰꜰ &bgem is now &7Broken" to attacker
		if {Bliss.Energy.%attacker%} is 2:
			send "&bYou &agained &benergy. &byour §f§lᴘᴜꜰꜰ &bgem is now &4Ruined" to attacker
		if {Bliss.Energy.%attacker%} is 3:
			send "&bYou &agained &benergy. &byour §f§lᴘᴜꜰꜰ &bgem is now &eDamaged" to attacker
		if {Bliss.Energy.%attacker%} is 4:
			send "&bYou &agained &benergy. &byour §f§lᴘᴜꜰꜰ &bgem is now &aCracked" to attacker
		if {Bliss.Energy.%attacker%} is 5:
			send "&bYou &agained &benergy. &byour §f§lᴘᴜꜰꜰ &bgem is now &aScratched" to attacker
		if {Bliss.Energy.%attacker%} is 6:
			send "&bYou &agained &benergy. &byour §f§lᴘᴜꜰꜰ &bgem is now &bPristine" to attacker
		if {Bliss.Energy.%attacker%} is 7:
			send "&bYou &agained &benergy. &byour §f§lᴘᴜꜰꜰ &bgem is now &bPristine + 1" to attacker
		if {Bliss.Energy.%attacker%} is 8:
			send "&bYou &agained &benergy. &byour §f§lᴘᴜꜰꜰ &bgem is now &bPristine + 2" to attacker
		if {Bliss.Energy.%attacker%} is 9:
			send "&bYou &agained &benergy. &byour §f§lᴘᴜꜰꜰ &bgem is now &bPristine + 3" to attacker
		if {Bliss.Energy.%attacker%} is 10:
			send "&bYou &agained &benergy. &byour §f§lᴘᴜꜰꜰ &bgem is now &bPristine + 4" to attacker
		if {Bliss.Energy.%attacker%} > 10:
			send "&bYou &agained &benergy. &byour §f§lᴘᴜꜰꜰ &bgem is now &bPristine + 5" to attacker

	if {Bliss.Gem.%victim%} is 6:
		if {Bliss.Energy.%victim%} is 0:
			send "&bYou lost &cenergy. &byour &5&lᴀsᴛʀᴀ &bgem is now &fN/A" to victim
		if {Bliss.Energy.%victim%} is 1:
			send "&bYou lost &cenergy. &byour &5&lᴀsᴛʀᴀ &bgem is now &7Broken" to victim
			loop all players:
				if {Shattered.%victim%} is not true:
					set {Shattered.%victim%} to true
					send "&f%victim% has made the advancement &a[Shattered]" to loop-player
		if {Bliss.Energy.%victim%} is 2:
			send "&bYou lost &cenergy. &byour &5&lᴀsᴛʀᴀ &bgem is now &4Ruined" to victim
		if {Bliss.Energy.%victim%} is 3:
			send "&bYou lost &cenergy. &byour &5&lᴀsᴛʀᴀ &bgem is now &eDamaged" to victim
		if {Bliss.Energy.%victim%} is 4:
			send "&byou lost &cenergy. &byour &5&lᴀsᴛʀᴀ &bgem is now &aCracked" to victim
		if {Bliss.Energy.%victim%} is 5:
			send "&bYou lost &cenergy. &byour &5&lᴀsᴛʀᴀ &bgem is now &aScratched" to victim
		if {Bliss.Energy.%victim%} is 6:
			send "&bYou lost &cenergy. &byour &5&lᴀsᴛʀᴀ &bgem is now &bPristine" to victim
		if {Bliss.Energy.%victim%} is 7:
			send "&bYou lost &cenergy. &byour &5&lᴀsᴛʀᴀ &bgem is now &bPristine + 1" to victim
		if {Bliss.Energy.%victim%} is 8:
			send "&bYou lost &cenergy. &byour &5&lᴀsᴛʀᴀ &bgem is now &bPristine + 2" to victim
		if {Bliss.Energy.%victim%} is 9:
			send "&bYou lost &cenergy. &byour &5&lᴀsᴛʀᴀ &bgem is now &bPristine + 3" to victim
		if {Bliss.Energy.%victim%} is 10:
			send "&bYou lost &cenergy. &byour &5&lᴀsᴛʀᴀ &bgem is now &bPristine + 4" to victim
		if {Bliss.Energy.%victim%} > 10:
			send "&bYou lost &cenergy. &byour &5&lᴀsᴛʀᴀ &bgem is now &bPristine + 5" to victim

	if {Bliss.Gem.%attacker%} is 6:
		if {Bliss.Energy.%attacker%} is 1:
			send "&bYou &agained &benergy. &byour &5&lᴀsᴛʀᴀ &bgem is now &7Broken" to attacker
		if {Bliss.Energy.%attacker%} is 2:
			send "&bYou &agained &benergy. &byour &5&lᴀsᴛʀᴀ &bgem is now &4Ruined" to attacker
		if {Bliss.Energy.%attacker%} is 3:
			send "&bYou &agained &benergy. &byour &5&lᴀsᴛʀᴀ &bgem is now &eDamaged" to attacker
		if {Bliss.Energy.%attacker%} is 4:
			send "&bYou &agained &benergy. &byour &5&lᴀsᴛʀᴀ &bgem is now &aCracked" to attacker
		if {Bliss.Energy.%attacker%} is 5:
			send "&bYou &agained &benergy. &byour &5&lᴀsᴛʀᴀ &bgem is now &aScratched" to attacker
		if {Bliss.Energy.%attacker%} is 6:
			send "&bYou &agained &benergy. &byour &5&lᴀsᴛʀᴀ &bgem is now &bPristine" to attacker
		if {Bliss.Energy.%attacker%} is 7:
			send "&bYou &agained &benergy. &byour &5&lᴀsᴛʀᴀ &bgem is now &bPristine + 1" to attacker
		if {Bliss.Energy.%attacker%} is 8:
			send "&bYou &agained &benergy. &byour &5&lᴀsᴛʀᴀ &bgem is now &bPristine + 2" to attacker
		if {Bliss.Energy.%attacker%} is 9:
			send "&bYou &agained &benergy. &byour &5&lᴀsᴛʀᴀ &bgem is now &bPristine + 3" to attacker
		if {Bliss.Energy.%attacker%} is 10:
			send "&bYou &agained &benergy. &byour &5&lᴀsᴛʀᴀ &bgem is now &bPristine + 4" to attacker
		if {Bliss.Energy.%attacker%} > 10:
			send "&bYou &agained &benergy. &byour &5&lᴀsᴛʀᴀ &bgem is now &bPristine + 5" to attacker

	if {Bliss.Gem.%victim%} is 7:
		if {Bliss.Energy.%victim%} is 0:
			send "&bYou lost &cenergy. &byour §d§lʟɪꜰᴇ &bgem is now &fN/A" to victim
		if {Bliss.Energy.%victim%} is 1:
			send "&bYou lost &cenergy. &byour §d§lʟɪꜰᴇ &bgem is now &7Broken" to victim
			loop all players:
				if {Shattered.%victim%} is not true:
					set {Shattered.%victim%} to true
					send "&f%victim% has made the advancement &a[Shattered]" to loop-player
		if {Bliss.Energy.%victim%} is 2:
			send "&bYou lost &cenergy. &byour §d§lʟɪꜰᴇ &bgem is now &4Ruined" to victim
		if {Bliss.Energy.%victim%} is 3:
			send "&bYou lost &cenergy. &byour §d§lʟɪꜰᴇ &bgem is now &eDamaged" to victim
		if {Bliss.Energy.%victim%} is 4:
			send "&byou lost &cenergy. &byour §d§lʟɪꜰᴇ &bgem is now &aCracked" to victim
		if {Bliss.Energy.%victim%} is 5:
			send "&bYou lost &cenergy. &byour §d§lʟɪꜰᴇ &bgem is now &aScratched" to victim
		if {Bliss.Energy.%victim%} is 6:
			send "&bYou lost &cenergy. &byour §d§lʟɪꜰᴇ &bgem is now &bPristine" to victim
		if {Bliss.Energy.%victim%} is 7:
			send "&bYou lost &cenergy. &byour §d§lʟɪꜰᴇ &bgem is now &bPristine + 1" to victim
		if {Bliss.Energy.%victim%} is 8:
			send "&bYou lost &cenergy. &byour §d§lʟɪꜰᴇ &bgem is now &bPristine + 2" to victim
		if {Bliss.Energy.%victim%} is 9:
			send "&bYou lost &cenergy. &byour §d§lʟɪꜰᴇ &bgem is now &bPristine + 3" to victim
		if {Bliss.Energy.%victim%} is 10:
			send "&bYou lost &cenergy. &byour §d§lʟɪꜰᴇ &bgem is now &bPristine + 4" to victim
		if {Bliss.Energy.%victim%} > 10:
			send "&bYou lost &cenergy. &byour §d§lʟɪꜰᴇ &bgem is now &bPristine + 5" to victim

	if {Bliss.Gem.%attacker%} is 7:
		if {Bliss.Energy.%attacker%} is 1:
			send "&bYou &agained &benergy. &byour §d§lʟɪꜰᴇ &bgem is now &7Broken" to attacker
		if {Bliss.Energy.%attacker%} is 2:
			send "&bYou &agained &benergy. &byour §d§lʟɪꜰᴇ &bgem is now &4Ruined" to attacker
		if {Bliss.Energy.%attacker%} is 3:
			send "&bYou &agained &benergy. &byour §d§lʟɪꜰᴇ &bgem is now &eDamaged" to attacker
		if {Bliss.Energy.%attacker%} is 4:
			send "&bYou &agained &benergy. &byour §d§lʟɪꜰᴇ &bgem is now &aCracked" to attacker
		if {Bliss.Energy.%attacker%} is 5:
			send "&bYou &agained &benergy. &byour §d§lʟɪꜰᴇ &bgem is now &aScratched" to attacker
		if {Bliss.Energy.%attacker%} is 6:
			send "&bYou &agained &benergy. &byour §d§lʟɪꜰᴇ &bgem is now &bPristine" to attacker
		if {Bliss.Energy.%attacker%} is 7:
			send "&bYou &agained &benergy. &byour §d§lʟɪꜰᴇ &bgem is now &bPristine + 1" to attacker
		if {Bliss.Energy.%attacker%} is 8:
			send "&bYou &agained &benergy. &byour §d§lʟɪꜰᴇ &bgem is now &bPristine + 2" to attacker
		if {Bliss.Energy.%attacker%} is 9:
			send "&bYou &agained &benergy. &byour §d§lʟɪꜰᴇ &bgem is now &bPristine + 3" to attacker
		if {Bliss.Energy.%attacker%} is 10:
			send "&bYou &agained &benergy. &byour §d§lʟɪꜰᴇ &bgem is now &bPristine + 4" to attacker
		if {Bliss.Energy.%attacker%} > 10:
			send "&bYou &agained &benergy. &byour §d§lʟɪꜰᴇ &bgem is now &bPristine + 5" to attacker

	if {Bliss.Gem.%victim%} is 8:
		if {Bliss.Energy.%victim%} is 0:
			send "&bYou lost &cenergy. &byour §3§lꜰʟᴜx &bgem is now &fN/A" to victim
		if {Bliss.Energy.%victim%} is 1:
			send "&bYou lost &cenergy. &byour §3§lꜰʟᴜx &bgem is now &7Broken" to victim
			loop all players:
				if {Shattered.%victim%} is not true:
					set {Shattered.%victim%} to true
					send "&f%victim% has made the advancement &a[Shattered]" to loop-player
		if {Bliss.Energy.%victim%} is 2:
			send "&bYou lost &cenergy. &byour §3§lꜰʟᴜx &bgem is now &4Ruined" to victim
		if {Bliss.Energy.%victim%} is 3:
			send "&bYou lost &cenergy. &byour §3§lꜰʟᴜx &bgem is now &eDamaged" to victim
		if {Bliss.Energy.%victim%} is 4:
			send "&byou lost &cenergy. &byour §3§lꜰʟᴜx &bgem is now &aCracked" to victim
		if {Bliss.Energy.%victim%} is 5:
			send "&bYou lost &cenergy. &byour §3§lꜰʟᴜx &bgem is now &aScratched" to victim
		if {Bliss.Energy.%victim%} is 6:
			send "&bYou lost &cenergy. &byour §3§lꜰʟᴜx &bgem is now &bPristine" to victim
		if {Bliss.Energy.%victim%} is 7:
			send "&bYou lost &cenergy. &byour §3§lꜰʟᴜx &bgem is now &bPristine + 1" to victim
		if {Bliss.Energy.%victim%} is 8:
			send "&bYou lost &cenergy. &byour §3§lꜰʟᴜx &bgem is now &bPristine + 2" to victim
		if {Bliss.Energy.%victim%} is 9:
			send "&bYou lost &cenergy. &byour §3§lꜰʟᴜx &bgem is now &bPristine + 3" to victim
		if {Bliss.Energy.%victim%} is 10:
			send "&bYou lost &cenergy. &byour §3§lꜰʟᴜx &bgem is now &bPristine + 4" to victim
		if {Bliss.Energy.%victim%} > 10:
			send "&bYou lost &cenergy. &byour §3§lꜰʟᴜx &bgem is now &bPristine + 5" to victim

	if {Bliss.Gem.%attacker%} is 8:
		if {Bliss.Energy.%attacker%} is 1:
			send "&bYou &agained &benergy. &byour §3§lꜰʟᴜx &bgem is now &7Broken" to attacker
		if {Bliss.Energy.%attacker%} is 2:
			send "&bYou &agained &benergy. &byour §3§lꜰʟᴜx &bgem is now &4Ruined" to attacker
		if {Bliss.Energy.%attacker%} is 3:
			send "&bYou &agained &benergy. &byour §3§lꜰʟᴜx &bgem is now &eDamaged" to attacker
		if {Bliss.Energy.%attacker%} is 4:
			send "&bYou &agained &benergy. &byour §3§lꜰʟᴜx &bgem is now &aCracked" to attacker
		if {Bliss.Energy.%attacker%} is 5:
			send "&bYou &agained &benergy. &byour §3§lꜰʟᴜx &bgem is now &aScratched" to attacker
		if {Bliss.Energy.%attacker%} is 6:
			send "&bYou &agained &benergy. &byour §3§lꜰʟᴜx &bgem is now &bPristine" to attacker
		if {Bliss.Energy.%attacker%} is 7:
			send "&bYou &agained &benergy. &byour §3§lꜰʟᴜx &bgem is now &bPristine + 1" to attacker
		if {Bliss.Energy.%attacker%} is 8:
			send "&bYou &agained &benergy. &byour §3§lꜰʟᴜx &bgem is now &bPristine + 2" to attacker
		if {Bliss.Energy.%attacker%} is 9:
			send "&bYou &agained &benergy. &byour §3§lꜰʟᴜx &bgem is now &bPristine + 3" to attacker
		if {Bliss.Energy.%attacker%} is 10:
			send "&bYou &agained &benergy. &byour §3§lꜰʟᴜx &bgem is now &bPristine + 4" to attacker
		if {Bliss.Energy.%attacker%} > 10:
			send "&bYou &agained &benergy. &byour §3§lꜰʟᴜx &bgem is now &bPristine + 5" to attacker

	if {Bliss.Energy.%victim%} > 1:
		remove 1 from {Bliss.Energy.%victim%}
		if attacker is a player:
			if {Bliss.Energy.%victim%} > 2:
				if {Bliss.Energy.%attacker%} > 10:
					drop {Bliss.Energy}
				if {Bliss.Energy.%attacker%} < 11:
					if {Bliss.Energy.%attacker%} > 1:
						add 1 to {Bliss.Energy.%attacker%}
					
			else:
				if {Bliss.Energy.%attacker%} > 10:
					drop {Bliss.Energy}
				if {Bliss.Energy.%attacker%} < 11:
					if {Bliss.Energy.%attacker%} > 1:
						add 1 to {Bliss.Energy.%attacker%}
						drop {Bliss.Energy}
		else:
			drop {Bliss.Energy}

on respawn:
	wait 1 tick
	clearGems(player)
	#if {Bliss.Energy.%player%} < 0:
		#ban player due to "Out of energy!"
		#kick player due to "Out of energy!"
	execute console command "bliss:gemgem %player%"
	set {damage::%player's uuid%} to 0





#[<-----------------Functions----------------->]
	
	
	
function clearGems(p: player):
	remove {Bliss.Strength.T2.%{_p}%} and {Bliss.Strength.T1.%{_p}%} and {Bliss.Flux.T2.%{_p}%} and {Bliss.Flux.T1.%{_p}%} and {Bliss.Fire.T2.%{_p}%} and {Bliss.Fire.T1.%{_p}%} and {Bliss.Wealth.T2.%{_p}%} and {Bliss.Wealth.T1.%{_p}%} and {Bliss.Speed.T2.%{_p}%} and {Bliss.Speed.T1.%{_p}%} and {Bliss.Puff.T2.%{_p}%} and {Bliss.Puff.T1.%{_p}%} and {Bliss.Astra.T2.%{_p}%} and {Bliss.Astra.T1.%{_p}%} and {Bliss.Life.T2.%{_p}%} and {Bliss.Life.T1.%{_p}%} from {_p}



#[<-----------------Bliss Gems Dupe Defend System----------------->]

on right click on a decorated pot:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event


on itemframe place:
	if lore of player's held item contains "&bEnergy:":	
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event

#on drop:
	#if event-item is a prismarine shard:
		#if lore of event-item contains "&bEnergy:":
			#cancel event
	#if event-item is a amethyst shard:
		#if lore of event-item contains "&bEnergy:":
			#cancel event

on right click on a chest:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event
on right click on a barrel:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event
on right click on a ender chest:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event
on right click on a loom:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event
on right click on a loom:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event
on right click on a hopper:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event
on right click on a smithing table:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event
on right click on a beacon:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event
on right click on a shulker box:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event
on right click on a smoker:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event
on right click on a brewing stand:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event
on right click on a grindstone:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event
on right click on a furnace:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event
on right click on a blast furnace:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event
on right click on a enchanting table:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event
on right click on a dropper:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event
on right click on a dispenser:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event
on right click on a stonecutter:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event
on right click on a anvil:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event
on right click on a chipped anvil:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event
on right click on a damaged anvil:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event
on right click on a cartography table:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event
on right click on a workbench:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event

on inventory click:
	if {ghoost...%player%} is true:
		cancel event
	if type of player's current inventory is chest inventory:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is barrel inventory:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is workbench inventory:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is ender chest inventory:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is loom inventory:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is hopper inventory:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is merchant inventory:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is chiseled bookshelf:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is new smithing table:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is bookshelf:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is a jukebox:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is beacon inventory:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is shulker box inventory:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is lectern inventory:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is villager inventory:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is a smoker inventory:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is a brewing stand inventory:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is grindstone inventory:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is furnace inventory:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is blast furnace inventory:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is upgrade gear:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is composter inventory:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is an enchanting table inventory:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is dropper inventory:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is cartography table inventory:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is upgrade gear table:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is dispenser inventory:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is stonecutter inventory:
		if lore of event-player's tool contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
	if type of player's current inventory is anvil inventory:
		if lore of event-item contains "&bEnergy:":
			cancel event
		if lore of slot hotbar button of player's inventory contains "&bEnergy:":
			cancel event
on right click on entity:
	if lore of player's held item contains "&bEnergy:":
		cancel event
	if lore of player's off hand item contains "&bEnergy:":
		cancel event



#[<-----------------Bliss Items Use----------------->]



on right click:
	1 of item is {Bliss.Energy}:
		cancel event
		if {Bliss.Energy.%player%} < 11:
			if {Bliss.Energy.%player%} > 1:
				remove {Bliss.Energy} from player
				clearGems(player)
				add 1 to {Bliss.Energy.%player%}
				execute console command "bliss:gemgem %player%"
				play sound "entity.player.levelup" for player
			else:
				send "&cYour gem is shattered!" to player
	1 of item is {Bliss.Trader}:
		cancel event
		#if {Bliss.Trader.cd.%player%} is not true:
			#set {Bliss.Trader.cd.%player%} to true
		if player's gamemode is not creative:
			remove {Bliss.Trader} from player
		play sound "entity.player.levelup" to player
		execute console command "bliss:cooldown %player%"
		set {Rolling} to true
		#set {_slot} to 0
		#loop all items in player's inventory:
			#if loop-item's lore contains "&bEnergy:":
				#set {tradeSlot.%player%} to index of loop-slot
				#stop loop
				#send "&bCurrent trading slot: &a%{tradeSlot.%player%}%" to player
		#wait 5 ticks
		set {Bliss.get.r.gem%player%} to 2
		#wait 2 seconds
		#send "Trading slot reset" to player
		#delete {tradeSlot.%player%}
		#set {Bliss.Trader.cd.%player%} to false
	1 of item is {Bliss.Upgrader}:
		cancel event
		if {Bliss.Tier2.%player%} is true:
			send "🔮 &bYour gem is already upgraded" to player
		if {Bliss.Tier2.%player%} is not true:
			send "🔮 &bYou have upgraded your gem to tier 2" to player
			remove {Bliss.Upgrader} from player
			clearGems(player)
			set {Bliss.Tier2.%player%} to true
			execute console command "bliss:gemgem %player%"
			play sound "entity.player.levelup" to player
	1 of item is {Bliss.Fragment}:
		cancel event

command /pedestal:set:
	permission: op
	trigger:
		set {PedestalLoc} to location 1 block below player
		set {PedestalLoc1} to location 1 block above {PedestalLoc}
		set {PedestalLoc2} to location 1 block below {PedestalLoc}
		set {PedestalGilded1} to location 1 block north of {PedestalLoc}
		set {PedestalGilded2} to location 1 block south of {PedestalLoc}
		set {PedestalGilded3} to location 1 block east of {PedestalLoc}
		set {PedestalGilded4} to location 1 block west of {PedestalLoc}
		set {PedestalGold1} to location 1 block north and 1 block east of {PedestalLoc}
		set {PedestalGold2} to location 1 block south and 1 block east of {PedestalLoc}
		set {PedestalGold3} to location 1 block north and 1 block west of {PedestalLoc}
		set {PedestalGold4} to location 1 block south and 1 block west of {PedestalLoc}


command /pedestal:activate:
	permission: op
	trigger:
		set {PedestalBreakTimer} to 0
		set {PedestalDura} to 3
		set {PedestalActive} to true
		play sound "block.beacon.ambient" with volume 40 and pitch 1.6 at {PedestalLoc}
		set block at location at {PedestalLoc} to beacon
		set block at location at {PedestalLoc2} to ancient debris
		set block at location at {PedestalGilded1} to gilded blackstone
		set block at location at {PedestalGilded2} to gilded blackstone
		set block at location at {PedestalGilded3} to gilded blackstone
		set block at location at {PedestalGilded4} to gilded blackstone
		set block at location at {PedestalGold1} to gold block
		set block at location at {PedestalGold2} to gold block
		set block at location at {PedestalGold3} to gold block
		set block at location at {PedestalGold4} to gold block
		set {PedestalRepair} to false
		set {PedestalCount} to 0
		set {PedestalTimer} to 0
		set {PedestalRevive} to false
		set {RevivalProgress} to false
		set {Reviving} to false
		loop all players:
			set {RevivalLocked.%loop-player%} to false

command /pedestal:deactivate:
	permission: op
	trigger:
		set {PedestalActive} to false
		set block at location at {PedestalLoc} to bedrock
		set block at location at {PedestalLoc2} to ancient debris
		set block at location at {PedestalGilded1} to blackstone
		set block at location at {PedestalGilded2} to blackstone
		set block at location at {PedestalGilded3} to blackstone
		set block at location at {PedestalGilded4} to blackstone
		set block at location at {PedestalGold1} to netherite block
		set block at location at {PedestalGold2} to netherite block
		set block at location at {PedestalGold3} to netherite block
		set block at location at {PedestalGold4} to netherite block
		play sound "block.beacon.deactivate" with volume 20 and pitch 2 at {PedestalLoc}
		set {PedestalRepair} to false
		set {PedestalCount} to 0
		set {PedestalTimer} to 0
		set {PedestalRevive} to false
		set {Reviving} to false

on drop:
	if player is within 2 blocks around {PedestalLoc}:
		if event-item is {Bliss.Repair}:
			if {PedestalRepair} is false:
				if {PedestalRevive} is false:
					if {PedestalActive} is true:
						set {PedestalActive} to true
						set {PedestalRepair} to true
						set {PedestalCount} to 0
						set {PedestalTimer} to 0
						wait 1 tick
						delete event-dropped item
						play sound "block.beacon.activate" with volume 30 at {PedestalLoc}
						set {_pedestalTrail} to a line from location 1 block below {PedestalLoc} to location 100 blocks above {PedestalLoc}
						set particle of {_pedestalTrail} to dust particle using dustOption(rgb(255, 255, 255), 1) with force
						set {_pedestalTrail1} to a line from location 1 block below {PedestalLoc} to location 100 blocks above {PedestalLoc}
						set particle of {_pedestalTrail1} to dust particle using dustOption(rgb(0, 0, 0), 1) with force
						loop all players:
							send "&d%player% has started a repair ritual!" to loop-player
						loop 60 times: # 1 hour
							loop 60 times: # 1 minute
								loop 4 times: # 1 second
									draw shapes {_pedestalTrail} at {PedestalLoc}
									draw shapes {_pedestalTrail1} at {PedestalLoc}
									wait 5 ticks # 0.25 seconds
									if {PedestalRepair} is false:
										stop
		else if event-item is {Bliss.Revive}:
			if {PedestalRepair} is false:
				if {PedestalRevive} is false:
					if {PedestalActive} is true:
						if {Bliss.Energy.%player%} is 1:
							set {PedestalActive} to true
							set {Reviving} to player
							set {PedestalRevive} to true
							wait 1 tick
							delete event-dropped item
							play sound "block.beacon.activate" with volume 30 at {PedestalLoc}
							loop all players:
								send "&d%player% has started a restoration ritual!" to loop-player


on break:
	if event-location is within 0.8 blocks around {PedestalLoc} or {PedestalLoc1} or {PedestalGilded1} or {PedestalGilded2} or {PedestalGilded3} or {PedestalGilded4} or {PedestalGold1} or {PedestalGold2} or {PedestalGold3} or {PedestalGold4}:
		if event-block is gold block or gilded blackstone or netherite block or blackstone:
			#if player's gamemode is not creative:
			cancel event
	if event-location is within 0.8 blocks around {PedestalLoc2}:
		if event-block is beacon:
			if {PedestalActive} is true:
				if player's gamemode is not creative:
					if {PedestalDura} > 1:
						cancel event
						remove 1 from {PedestalDura}
						loop all players within 8 blocks around {PedestalLoc}:
							send "&cPedestal break attempt, durability is %{PedestalDura}%" to loop-player
					else:
						cancel event
						loop all players within 8 blocks around {PedestalLoc}:
							send "&4Pedestal broken, repair process terminated." to loop-player
						set {PedestalActive} to false
						set {PedestalRevive} to false
						set {PedestalRepair} to false 
						set {PedestalCount} to 0
						set {PedestalTimer} to 0
						set {PedestalBreakTimer} to 0
						set {PedestalDura} to 3
			else:
				cancel event

on place of piston or sticky piston or tnt or rails:
	if event-location is within 10 blocks around {PedestalLoc}:
		cancel event



every 1 second:
	if {PedestalTimer} > 1:
		remove 1 from {PedestalTimer}
	if {PedestalTimer} is 1:
		remove 1 from {PedestalTimer}
		loop all players within 8 blocks around {PedestalLoc}:
			send "&6Pedestal cooldown is over. <##96FFD9>Please deposit 1 &lᴇɴᴇʀɢʏ!" to loop-player
	if {PedestalBreakTimer} > 0:
		remove 1 from {PedestalBreakTimer}

on drop:
	if player is within 2 blocks around {PedestalLoc}:
		event-item is {Bliss.Energy}:
			if {PedestalTimer} is 0:
				play sound "block.beacon.ambient" with volume 40 and pitch 1.6 at {PedestalLoc}
				if {PedestalCount} is 4:
					if {PedestalRepair} is true:
						delete event-dropped item
						play sound "item.axe.scrape" with volume 10 and pitch 0.5 at {PedestalLoc}
						play sound "block.amethyst_block.break" with volume 20 and pitch 1.2 at {PedestalLoc}
						wait 1 tick
						add 1 to {PedestalCount}
						loop all players within 8 blocks around {PedestalLoc}:
							send "<##FFD773>Energy deposit requirement has been fulfilled!" to loop-player
						loop 5 times:
							wait 10 seconds
							play sound "block.beacon.ambient" with volume 40 and pitch 1.6 at {PedestalLoc}
							set {_repcircles::circle} to a circle of radius 0.75
							set {_repcircles::smallcircle} to a circle of radius 1
							set {_repcircles::smallcircle1} to a circle of radius 1.25
							set {_repcircles::smallcircle2} to a circle of radius 1.5
							set {_repcircles::smallcircle3} to a circle of radius 1.75
							set {_repcircles::mediumcircle} to a circle of radius 2
							set {_repcircles::mediumcircle1} to a circle of radius 2.5
							set {_repcircles::mediumcircle2} to a circle of radius 3
							set {_repcircles::mediumcircle3} to a circle of radius 3.5
							set {_repcircles::largecircle} to a circle of radius 4
							set particle of {_repcircles::*} to happy_villager
							draw shapes {_repcircles::circle} at {PedestalLoc1}
							draw shapes {_repcircles::smallcircle} at {PedestalLoc1}
							wait 1 tick
							draw shapes {_repcircles::smallcircle1} at {PedestalLoc1}
							draw shapes {_repcircles::smallcircle2} at {PedestalLoc1}
							wait 1 tick
							draw shapes {_repcircles::smallcircle3} at {PedestalLoc1}
							draw shapes {_repcircles::mediumcircle} at {PedestalLoc1}
							wait 1 tick
							draw shapes {_repcircles::mediumcircle1} at {PedestalLoc1}
							draw shapes {_repcircles::mediumcircle2} at {PedestalLoc1}
							wait 1 tick
							draw shapes {_repcircles::mediumcircle3} at {PedestalLoc1}
							draw shapes {_repcircles::largecircle} at {PedestalLoc1}
							loop all players within 4 blocks around {PedestalLoc1}:
								if {Bliss.Energy.%loop-player%} > 1: 
									if {Bliss.Energy.%loop-player%} < 6: 
										add 1 to {Bliss.Energy.%loop-player%}
										execute console command "bliss:gemgem %loop-player%"

						wait 2 seconds
						play sound "block.beacon.deactivate" with volume 20 and pitch 2 at {PedestalLoc}
						set {PedestalDura} to 3
						set {PedestalRepair} to false
						set {PedestalCount} to 0
						set {PedestalTimer} to 0
						set {PedestalRevive} to false
						set {Reviving} to false
						set {PedestalActive} to false

					else if {PedestalRevive} is true:
						delete event-dropped item
						play sound "item.axe.scrape" with volume 10 and pitch 0.5 at {PedestalLoc}
						play sound "block.amethyst_block.break" with volume 20 and pitch 1.2 at {PedestalLoc}
						wait 1 tick
						add 1 to {PedestalCount}
						loop all players within 8 blocks around {PedestalLoc}:
							send "<##FFD773>Energy deposit requirement has been fulfilled!" to loop-player
							send "<##96FFD9>Please stand on the pedestal center!" to loop-player

				else if {PedestalCount} is 3:
					delete event-dropped item
					play sound "item.axe.scrape" with volume 10 and pitch 0.5 at {PedestalLoc}
					play sound "block.amethyst_block.break" with volume 20 and pitch 1.2 at {PedestalLoc}
					wait 1 tick
					add 1 to {PedestalCount}
					set {PedestalTimer} to 60
					loop all players within 8 blocks around {PedestalLoc}:
						send "<##96FFD9>%{PedestalCount}%/5 energy deposited!" to loop-player
						send "&cPlease wait for pedestal cooldown..." to loop-player
				else if {PedestalCount} is 2:
					delete event-dropped item
					play sound "item.axe.scrape" with volume 10 and pitch 0.5 at {PedestalLoc}
					play sound "block.amethyst_block.break" with volume 20 and pitch 1.2 at {PedestalLoc}
					wait 1 tick
					add 1 to {PedestalCount}
					set {PedestalTimer} to 60
					loop all players within 8 blocks around {PedestalLoc}:
						send "<##96FFD9>%{PedestalCount}%/5 energy deposited!" to loop-player
						send "&cPlease wait for pedestal cooldown..." to loop-player
				else if {PedestalCount} is 1:
					delete event-dropped item
					play sound "item.axe.scrape" with volume 10 and pitch 0.5 at {PedestalLoc}
					play sound "block.amethyst_block.break" with volume 20 and pitch 1.2 at {PedestalLoc}
					wait 1 tick
					add 1 to {PedestalCount}
					set {PedestalTimer} to 60
					loop all players within 8 blocks around {PedestalLoc}:
						send "<##96FFD9>%{PedestalCount}%/5 energy deposited!" to loop-player
						send "&cPlease wait for pedestal cooldown..." to loop-player
				else if {PedestalCount} is 0:
					delete event-dropped item
					play sound "item.axe.scrape" with volume 10 and pitch 0.5 at {PedestalLoc}
					play sound "block.amethyst_block.break" with volume 20 and pitch 1.2 at {PedestalLoc}
					wait 1 tick
					add 1 to {PedestalCount}
					set {PedestalTimer} to 60
					loop all players within 8 blocks around {PedestalLoc}:
						send "<##96FFD9>%{PedestalCount}%/5 energy deposited!" to loop-player
						send "&cPlease wait for pedestal cooldown..." to loop-player

on player turn around:
	if {RevivalLocked.%player%} is true:
		cancel event

on player walk:
	if {RevivalLocked.%player%} is true:
		#if teleport cause is not command:
		cancel event

on player move:
	if player is {Reviving}:
		if {PedestalCount} is 5:
			if {PedestalBusy} is not true:
				if player is within 0.25 blocks around {PedestalLoc1}:
					set {PedestalBusy} to true
					set {RevivalLocked.%player%} to true
					wait 1 seconds
					apply glowing 1 without particles whilst hiding the potion icon to player for 30 seconds replacing the existing effect
					force the player to look towards location 0.5 blocks above and 1 blocks infront of {PedestalLoc1}
					set {Rolling} to false

					loop 238 times:
						teleport player to location 0.03 block above player
						#execute console command "bliss:cooldown %player%"
						wait 1 ticks
						if loop-iteration-2 is 100:
							clearGems(player)
							set {Bliss.get.r.gem%player%} to 2
							set {Bliss.Energy.%player%} to 2
						if loop-iteration-2 is 118:
							clearGems(player)
							set {Bliss.get.r.gem%player%} to 2
							set {Bliss.Energy.%player%} to 2
						if loop-iteration-2 is 134:
							clearGems(player)
							set {Bliss.get.r.gem%player%} to 2
						if loop-iteration-2 is 148:
							clearGems(player)
							set {Bliss.get.r.gem%player%} to 2
							set {Bliss.Energy.%player%} to 3
						if loop-iteration-2 is 160:
							clearGems(player)
							set {Bliss.get.r.gem%player%} to 2
						if loop-iteration-2 is 170:
							clearGems(player)
							set {Bliss.get.r.gem%player%} to 2
							set {Bliss.Energy.%player%} to 4
						if loop-iteration-2 is 178:
							clearGems(player)
							set {Bliss.get.r.gem%player%} to 2
						if loop-iteration-2 is 184:
							clearGems(player)
							set {Bliss.get.r.gem%player%} to 2
							set {Bliss.Energy.%player%} to 5
						if loop-iteration-2 is 189:
							clearGems(player)
							set {Bliss.get.r.gem%player%} to 2
						if loop-iteration-2 is 194:
							clearGems(player)
							set {Bliss.get.r.gem%player%} to 2
							set {Bliss.Energy.%player%} to 6
						if loop-iteration-2 is 198:
							clearGems(player)
							set {Bliss.get.r.gem%player%} to 2
						if loop-iteration-2 is 204:
							clearGems(player)
							set {Bliss.get.r.gem%player%} to 2
						if loop-iteration-2 is 210:
							clearGems(player)
							set {Bliss.get.r.gem%player%} to 2
						if loop-iteration-2 is 216:
							clearGems(player)
							play sound "entity.player.levelup" for player
							set {Bliss.get.r.gem%player%} to 2
						if loop-iteration-2 is 220:
							clearGems(player)
							play sound "entity.player.levelup" for player
							set {Bliss.get.r.gem%player%} to 2
						if loop-iteration-2 is 226:
							clearGems(player)
							play sound "entity.player.levelup" for player
							set {Bliss.get.r.gem%player%} to 2
						if loop-iteration-2 is 232:
							clearGems(player)
							play sound "entity.player.levelup" for player
							set {Bliss.get.r.gem%player%} to 2
							set {Rolling} to true
						if loop-iteration-2 is 238:
							clearGems(player)
							play sound "entity.player.levelup" for player
							set {Bliss.get.r.gem%player%} to 2
							wait 1 tick
							set {Rolling} to false
					if {Bliss.Gem.%player%} is 1:
						#set player's tab name to "&4%player%"
						set {_visual::sphere} to a sphere of radius 3.5
						set particle of {_visual::sphere} to dust particle using dustOption(rgb(199, 0, 10), 3) with force
						draw shapes {_visual::sphere} at player

					else if {Bliss.Gem.%player%} is 2:
						#set player's tab name to "&6%player%"
						set {_visual::sphere} to a sphere of radius 3.5
						set particle of {_visual::sphere} to dust particle using dustOption(rgb(255, 119, 0), 3) with force
						draw shapes {_visual::sphere} at player

					else if {Bliss.Gem.%player%} is 3:
						#set player's tab name to "&2%player%"
						set {_visual::sphere} to a sphere of radius 3.5
						set particle of {_visual::sphere} to dust particle using dustOption(rgb(0, 166, 44), 3) with force
						draw shapes {_visual::sphere} at player

					else if {Bliss.Gem.%player%} is 4:
						#set player's tab name to "&e%player%"
						set {_visual::sphere} to a sphere of radius 3.5
						set particle of {_visual::sphere} to dust particle using dustOption(rgb(244, 255, 28), 3) with force
						draw shapes {_visual::sphere} at player

					else if {Bliss.Gem.%player%} is 5:
						#set player's tab name to "&f%player%"
						set {_visual::sphere} to a sphere of radius 3.5
						set particle of {_visual::sphere} to dust particle using dustOption(rgb(255, 255, 255), 3) with force
						draw shapes {_visual::sphere} at player

					else if {Bliss.Gem.%player%} is 6:
						#set player's tab name to "&5%player%"
						set {_visual::sphere} to a sphere of radius 3.5
						set particle of {_visual::sphere} to dust particle using dustOption(rgb(106, 11, 184), 3) with force
						draw shapes {_visual::sphere} at player

					else if {Bliss.Gem.%player%} is 7:
						#set player's tab name to "&d%player%"
						set {_visual::sphere} to a sphere of radius 3.5
						set particle of {_visual::sphere} to dust particle using dustOption(rgb(255, 0, 180), 3) with force
						draw shapes {_visual::sphere} at player

					else if {Bliss.Gem.%player%} is 8:
						#set player's tab name to "&3%player%"
						set {_visual::sphere} to a sphere of radius 3.5
						set particle of {_visual::sphere} to dust particle using dustOption(rgb(16, 131, 173), 3) with force
						draw shapes {_visual::sphere} at player
					teleport {gem.%player%} to location 100 meters above player
					kill {gem.%player%}

					set {RevivalLocked.%player%} to false
					set {PedestalRevive} to false
					set {PedestalCount} to 0
					set {Reviving} to false
					set {PedestalBusy} to false
					loop all entities within 5 blocks of {PedestalLoc1}:
						if loop-entity is not player:
							set {_v} to vector between {PedestalLoc1} and loop-entity
							push loop-entity up at speed 1.5
							push loop-entity {_v} at speed 2
					loop all players:
						send "&a%player% has succesfully completed their Restoration ritual!" to loop-player
						send "&f%player% has made the advancement &a[Reawakening]" to loop-player
					wait 10 seconds
					set player's tab name to "%player%"
					

#[<-----------------Progressions----------------->]

on right click:
	if player's held item is ender pearl:
		if {enderpearls} is not true:
			cancel event
		
on teleport:
	if teleport cause is ender pearl:
		if {enderpearls} is not true:
			cancel event 

command /enderpearls [<text>]:
	permission: op
	trigger:
		if arg-1 is "enable":
			set {enderpearls} to true
			send "&bEnder pearls are now &l&aenabled" to player
		if arg-1 is "disable":
			set {enderpearls} to false
			send "&bEnder pearls are now &l&cdisabled" to player

on tab complete for "/enderpearls":
	set tab completions for position 1 to "enable" and "disable"


command /bliss:recipes [<text>] [<text>]:
	permission: op
	trigger:
		if arg-1 is "upgrader":
			if arg-2 is "enable":
				register new shaped recipe for {Bliss.Upgrader} named "<##85ffa5>§lᴜᴘɢʀᴀᴅᴇʀ" using netherite ingot, {Bliss.Fragment}, netherite ingot, skeleton skull, nether star, skeleton skull, enchanted golden apple, {Bliss.Energy} and enchanted golden apple with id "upgrader"
				send "&bUpgrader recipe is now &l&aenabled" to player
			if arg-2 is "disable":
				remove custom recipe "upgrader"
				send "&bUpgrader recipe is now &l&cdisabled" to player
		if arg-1 is "trader":
			if arg-2 is "enable":
				register new shaped recipe for {Bliss.Trader} named "<##f7b2f7>§lᴛʀᴀᴅᴇʀ" using diamond block, dragon breath, diamond block, dragon breath, sculk catalyst, dragon breath, diamond block, dragon breath and diamond block with id "trader"
				send "&bTrader recipe is now &l&aenabled" to player
			if arg-2 is "disable":
				remove custom recipe "trader"
				send "&bTrader recipe is now &l&cdisabled" to player
		if arg-1 is "expbottle":
			if arg-2 is "enable":
				register new shaped recipe for experience bottle using lapis lazuli, lapis lazuli, lapis lazuli, lapis lazuli, glass bottle, lapis lazuli, lapis lazuli, lapis lazuli and lapis lazuli with id "exp"
				send "&bExperience bottle recipe is now &l&aenabled" to player
			if arg-2 is "disable":
				remove custom recipe "exp"
				send "&bExperience bottle recipe is now &l&cdisabled" to player
		if arg-1 is "shulker":
			if arg-2 is "enable":
				register new shaped recipe for shulker shell using diamond, nautilus shell, diamond, golden apple, ender pearl, golden apple, raw iron, air and raw iron with id "shulker"
				send "&bShulker recipe is now &l&aenabled" to player
			if arg-2 is "disable":
				remove custom recipe "shulker"
				send "&bShulker recipe is now &l&cdisabled" to player

on tab complete for "/bliss:recipes":
	set tab completions for position 1 to "upgrader" and "trader" and "expbottle" and "shulker"
	set tab completions for position 2 to "enable" and "disable"

command /prog1:fix:
	permission: op
	trigger:
		set {Prog1Started} to true

command /prog1:
	permission: op
	trigger:
		send title "<##cafca4>&lPhase 1" with subtitle "<##f9f4d3>The Creation of Everything" to all players
		set {Prog1Started} to true
		set {Prog2} to false
		set {Prog1} to true
		set {Prog3} to false
		set {Villagers} to false
		set {enderpearls} to false
		play sound "minecraft:ui.toast.challenge_complete" at volume 1 at pitch 1 to all players
		execute console command "worldborder set 2000"
		wait 3.5 seconds
		loop all players:
			if {Bliss.Joined.%loop-player%} is not true:
				set {Bliss.Tier2.%loop-player%} to false
				set {Bliss.Energy.%loop-player%} to 6
				set {Bliss.Gem.%loop-player%} to a random integer between 1 and 8
				set {Bliss.Joined.%loop-player%} to true
				#set   to true
				loop 15 times:
					execute console command "bliss:cooldown %loop-player-1%"
					clearGems(loop-player-1)
					set {Bliss.get.r.gem%loop-player-1%} to 2
					if loop-iteration-2 is 1:
						wait 18 ticks
					if loop-iteration-2 is 2:
						wait 16 ticks
					if loop-iteration-2 is 3:
						wait 14 ticks
					if loop-iteration-2 is 4:
						wait 12 ticks
					if loop-iteration-2 is 5:
						wait 10 ticks
					if loop-iteration-2 is 6:
						wait 8 ticks
					if loop-iteration-2 is 7:
						wait 6 ticks
					if loop-iteration-2 is 8:
						wait 5 ticks
					if loop-iteration-2 is 9:
						wait 5 ticks
					if loop-iteration-2 is 10:
						wait 4 ticks
					if loop-iteration-2 is 11:
						wait 4 ticks
					if loop-iteration-2 is 12:
						wait 3 ticks
					if loop-iteration-2 is 13:
						wait 3 ticks
					if loop-iteration-2 is 14:
						wait 1 ticks
						set {Rolling} to true
						wait 1 ticks
					if loop-iteration-2 is 15:
						play sound "entity.player.levelup" for loop-player-1
						wait 1 tick
						set {Rolling} to false
					#wait 12 ticks

on death of a wither: # Upgrader Distribution
	if {Prog1} is true:
		execute console command "prog2"
		loop 5 times:
			set {_var1} to random number from -5 to 5
			set {_var2} to random number from -5 to 5
			set {Prog2offset} to location {_var1} to the left and {_var2} infront of the victim
			drop {Bliss.Upgrader} at {Prog2offset}
			wait 2 ticks
		loop 8 times:
			set {_var1} to random number from -5 to 5 
			set {_var2} to random number from -5 to 5 
			set {Prog2offset} to location {_var1} to the left and {_var2} infront of the victim
			drop {Bliss.Trader} at {Prog2offset}
			wait 2 ticks

on death of a ender dragon:
	if {Prog2} is true:
		execute console command "prog3"

command /prog2:
	permission: op
	trigger:
		set {Prog2} to true
		set {Prog1} to false
		set {Prog3} to false
		play sound "minecraft:ui.toast.challenge_complete" at volume 1 at pitch 1 to all players
		send title "&c&lPhase 2" with subtitle "<##FC8888>Into the Fire" to all players

#[ <----- Disenchants -----> ]

every 10 seconds:
	loop all players:
		loop all items in loop-player's inventory:
			if loop-item is enchanted:
				if {Prog1} is true:
					if loop-item is not prismarine shard:
						if loop-item is not amethyst shard:
							if loop-item is not obsidian:
								disenchant loop-item
				else if {Prog2} is true:
					if {Wealth.Amplif} is not true:
						if loop-item is any helmet:
							if loop-item is enchanted with protection 4:
								enchant loop-item with protection 3
						if loop-item is any chestplate:
							if loop-item is enchanted with protection 4:
								enchant loop-item with protection 3
						if loop-item is any leggings:
							if loop-item is enchanted with protection 4:
								enchant loop-item with protection 3
						if loop-item is any boots:
							if loop-item is enchanted with protection 4:
								enchant loop-item with protection 3
						if loop-item is a bow:
							if loop-item is enchanted with power 5 or power 4:
								enchant loop-item with power 3 
						if loop-item is a sword:
							if loop-item is enchanted with sharpness 5:
								enchant loop-item with sharpness 4
						if loop-item is a axe:
							if loop-item is enchanted with sharpness 5:
								enchant loop-item with sharpness 4
							if loop-item is enchanted with efficiency 5:
								enchant loop-item with efficiency 4
						if loop-item is a pickaxe:
							if loop-item is enchanted with efficiency 5:
								enchant loop-item with efficiency 4
						if loop-item is a hoe:
							if loop-item is enchanted with efficiency 5:
								enchant loop-item with efficiency 4
						if loop-item is a shovel:
							if loop-item is enchanted with efficiency 5:
								enchant loop-item with efficiency 4
				else if {Prog3} is true:
					if {Wealth.Amplif} is not true:
						if loop-item is any helmet:
							if loop-item is enchanted with protection 4:
								enchant loop-item with protection 3
						if loop-item is any chestplate:
							if loop-item is enchanted with protection 4:
								enchant loop-item with protection 3
						if loop-item is any leggings:
							if loop-item is enchanted with protection 4:
								enchant loop-item with protection 3
						if loop-item is any boots:
							if loop-item is enchanted with protection 4:
								enchant loop-item with protection 3
						if loop-item is a bow:
							if loop-item is enchanted with power 5 or power 4:
								enchant loop-item with power 3 
						if loop-item is a sword:
							if loop-item is enchanted with sharpness 5:
								enchant loop-item with sharpness 4
						if loop-item is a axe:
							if loop-item is enchanted with sharpness 5:
								enchant loop-item with sharpness 4
							if loop-item is enchanted with efficiency 5:
								enchant loop-item with efficiency 4
						if loop-item is a pickaxe:
							if loop-item is enchanted with efficiency 5:
								enchant loop-item with efficiency 4
						if loop-item is a hoe:
							if loop-item is enchanted with efficiency 5:
								enchant loop-item with efficiency 4
						if loop-item is a shovel:
							if loop-item is enchanted with efficiency 5:
								enchant loop-item with efficiency 4

on damage of player:
	loop all items in victim's inventory:
		if loop-item is enchanted:
			if {Prog1} is true:
				if loop-item is not prismarine shard:
					if loop-item is not amethyst shard:
						if loop-item is not obsidian:
							disenchant loop-item
			else if {Prog2} is true:
				if {Wealth.Amplif} is not true:
					if loop-item is any helmet:
						if loop-item is enchanted with protection 4:
							enchant loop-item with protection 3
					if loop-item is any chestplate:
						if loop-item is enchanted with protection 4:
							enchant loop-item with protection 3
					if loop-item is any leggings:
						if loop-item is enchanted with protection 4:
							enchant loop-item with protection 3
					if loop-item is any boots:
						if loop-item is enchanted with protection 4:
							enchant loop-item with protection 3
					if loop-item is a bow:
						if loop-item is enchanted with power 5 or power 4:
							enchant loop-item with power 3 
					if loop-item is a sword:
						if loop-item is enchanted with sharpness 5:
							enchant loop-item with sharpness 4
					if loop-item is a axe:
						if loop-item is enchanted with sharpness 5:
							enchant loop-item with sharpness 4
						if loop-item is enchanted with efficiency 5:
							enchant loop-item with efficiency 4
					if loop-item is a pickaxe:
						if loop-item is enchanted with efficiency 5:
							enchant loop-item with efficiency 4
					if loop-item is a hoe:
						if loop-item is enchanted with efficiency 5:
							enchant loop-item with efficiency 4
					if loop-item is a shovel:
						if loop-item is enchanted with efficiency 5:
							enchant loop-item with efficiency 4
			else if {Prog3} is true:
				if {Wealth.Amplif} is not true:
					if loop-item is any helmet:
						if loop-item is enchanted with protection 4:
							enchant loop-item with protection 3
					if loop-item is any chestplate:
						if loop-item is enchanted with protection 4:
							enchant loop-item with protection 3
					if loop-item is any leggings:
						if loop-item is enchanted with protection 4:
							enchant loop-item with protection 3
					if loop-item is any boots:
						if loop-item is enchanted with protection 4:
							enchant loop-item with protection 3
					if loop-item is a bow:
						if loop-item is enchanted with power 5 or power 4:
							enchant loop-item with power 3 
					if loop-item is a sword:
						if loop-item is enchanted with sharpness 5:
							enchant loop-item with sharpness 4
					if loop-item is a axe:
						if loop-item is enchanted with sharpness 5:
							enchant loop-item with sharpness 4
						if loop-item is enchanted with efficiency 5:
							enchant loop-item with efficiency 4
					if loop-item is a pickaxe:
						if loop-item is enchanted with efficiency 5:
							enchant loop-item with efficiency 4
					if loop-item is a hoe:
						if loop-item is enchanted with efficiency 5:
							enchant loop-item with efficiency 4
					if loop-item is a shovel:
						if loop-item is enchanted with efficiency 5:
							enchant loop-item with efficiency 4

	if attacker is player:
		loop all items in attacker's inventory:
			if loop-item is enchanted:
				if {Prog1} is true:
					if loop-item is not prismarine shard:
						if loop-item is not amethyst shard:
							if loop-item is not obsidian:
								disenchant loop-item
				else if {Prog2} is true:
					if {Wealth.Amplif} is not true:
						if loop-item is any helmet:
							if loop-item is enchanted with protection 4:
								enchant loop-item with protection 3
						if loop-item is any chestplate:
							if loop-item is enchanted with protection 4:
								enchant loop-item with protection 3
						if loop-item is any leggings:
							if loop-item is enchanted with protection 4:
								enchant loop-item with protection 3
						if loop-item is any boots:
							if loop-item is enchanted with protection 4:
								enchant loop-item with protection 3
						if loop-item is a bow:
							if loop-item is enchanted with power 5 or power 4:
								enchant loop-item with power 3 
						if loop-item is a sword:
							if loop-item is enchanted with sharpness 5:
								enchant loop-item with sharpness 4
						if loop-item is a axe:
							if loop-item is enchanted with sharpness 5:
								enchant loop-item with sharpness 4
							if loop-item is enchanted with efficiency 5:
								enchant loop-item with efficiency 4
						if loop-item is a pickaxe:
							if loop-item is enchanted with efficiency 5:
								enchant loop-item with efficiency 4
						if loop-item is a hoe:
							if loop-item is enchanted with efficiency 5:
								enchant loop-item with efficiency 4
						if loop-item is a shovel:
							if loop-item is enchanted with efficiency 5:
								enchant loop-item with efficiency 4
				else if {Prog3} is true:
					if {Wealth.Amplif} is not true:
						if loop-item is any helmet:
							if loop-item is enchanted with protection 4:
								enchant loop-item with protection 3
						if loop-item is any chestplate:
							if loop-item is enchanted with protection 4:
								enchant loop-item with protection 3
						if loop-item is any leggings:
							if loop-item is enchanted with protection 4:
								enchant loop-item with protection 3
						if loop-item is any boots:
							if loop-item is enchanted with protection 4:
								enchant loop-item with protection 3
						if loop-item is a bow:
							if loop-item is enchanted with power 5 or power 4:
								enchant loop-item with power 3 
						if loop-item is a sword:
							if loop-item is enchanted with sharpness 5:
								enchant loop-item with sharpness 4
						if loop-item is a axe:
							if loop-item is enchanted with sharpness 5:
								enchant loop-item with sharpness 4
							if loop-item is enchanted with efficiency 5:
								enchant loop-item with efficiency 4
						if loop-item is a pickaxe:
							if loop-item is enchanted with efficiency 5:
								enchant loop-item with efficiency 4
						if loop-item is a hoe:
							if loop-item is enchanted with efficiency 5:
								enchant loop-item with efficiency 4
						if loop-item is a shovel:
							if loop-item is enchanted with efficiency 5:
								enchant loop-item with efficiency 4

on player trade:
	if {Villagers} is not true:
		cancel event

command /villager:enable:
	permission: op
	trigger:
		set {Villagers} to true
		send "&aVillagers have been enabled!" to player

command /villager:disable:
	permission: op
	trigger:
		set {Villagers} to false
		send "&cVillagers have been disabled!" to player

command /resetprogs:
	permission: op
	trigger:
		set {Prog1Started} to true
		set {Prog1} to false
		set {Prog2} to false
		set {Prog3} to false
		set {Prog4} to false
		set {Prog5} to false
		set {Villagers} to true
		set {enderpearls} to false

command /prog3:
	permission: op
	trigger:
		set {Prog2} to false
		set {Prog1} to false
		set {Prog3} to true
		set {Villagers} to true
		execute console command "bliss:recipes upgrader enable"
		execute console command "bliss:recipes trader enable"
		play sound "minecraft:ui.toast.challenge_complete" at volume 1 at pitch 1 to all players
		send title "&5&lPhase 3" with subtitle "<##EB2ED8>The Final Gasp" to all players

#[ <----- Invisible Players -----> ]


on death of player:
	if attacker has potion invisibility:
		if victim has potion invisibility:
			set death message to "&k123 &rwas &rslain &rby &k123"
		else:
			set death message to "%victim% was slain by &k123"
	else if victim has potion invisibility:
		if attacker is set:
			set death message to "&k123 &rwas &rslain &rby &r%attacker%"


#[<-----------------COMMANDS----------------->]

command /bliss:trading:
	permission: op
	trigger:
		set {Bliss.Strength.Disp.%player%} to prismarine shard named "&4&lꜱᴛʀᴇɴɢᴛʜ <##FFD773>ɢᴇᴍ" with lore "ᴄʟɪᴄᴋ ᴛᴏ ᴏʙᴛᴀɪɴ" with custom model data 10
		set {Bliss.Fire.Disp.%player%} to prismarine shard named "§6§lꜰɪʀᴇ <##FFD773>ɢᴇᴍ" with lore "ᴄʟɪᴄᴋ ᴛᴏ ᴏʙᴛᴀɪɴ" with custom model data 2
		set {Bliss.Wealth.Disp.%player%} to prismarine shard named "§2§lᴡᴇᴀʟᴛʜ <##FFD773>ɢᴇᴍ" with lore "ᴄʟɪᴄᴋ ᴛᴏ ᴏʙᴛᴀɪɴ"  with custom model data 12
		set {Bliss.Speed.Disp.%player%} to prismarine shard named "§e§lꜱᴘᴇᴇᴅ <##FFD773>ɢᴇᴍ" with lore "ᴄʟɪᴄᴋ ᴛᴏ ᴏʙᴛᴀɪɴ" with custom model data 8
		set {Bliss.Puff.Disp.%player%} to prismarine shard named "§f§lᴘᴜꜰꜰ <##FFD773>ɢᴇᴍ" with lore "ᴄʟɪᴄᴋ ᴛᴏ ᴏʙᴛᴀɪɴ" with custom model data 6
		set {Bliss.Astra.Disp.%player%} to prismarine shard named "§5§lᴀꜱᴛʀᴀ <##FFD773>ɢᴇᴍ" with lore "ᴄʟɪᴄᴋ ᴛᴏ ᴏʙᴛᴀɪɴ" with custom model data 14
		set {Bliss.Life.Disp.%player%} to prismarine shard named "§d§lʟɪꜰᴇ <##FFD773>ɢᴇᴍ" with lore "ᴄʟɪᴄᴋ ᴛᴏ ᴏʙᴛᴀɪɴ" with custom model data 4
		set {Bliss.Flux.Disp.%player%} to prismarine shard named "<##009ac9>§lꜰʟᴜx <##FFD773>ɢᴇᴍ" with lore "ᴄʟɪᴄᴋ ᴛᴏ ᴏʙᴛᴀɪɴ" with custom model data 98

		set {_tradeGUI} to a chest inventory with name "Trading Menu"
		open {_tradeGUI} to player
		set {-trading::%player%} to true
		#set {_slot} to 0
		wait 1 tick
		loop all items in player's inventory:
			#loop 27 times:
				#set slot {_slot} of player's current inventory to gray stained glass pane named " "
				#add 1 to {_slot}
			set slot 9 of player's current inventory to {Bliss.Strength.Disp.%player%}
			set slot 10 of player's current inventory to {Bliss.Fire.Disp.%player%}
			set slot 11 of player's current inventory to {Bliss.Wealth.Disp.%player%}
			set slot 12 of player's current inventory to {Bliss.Speed.Disp.%player%}
			set slot 14 of player's current inventory to {Bliss.Puff.Disp.%player%}
			set slot 15 of player's current inventory to {Bliss.Astra.Disp.%player%}
			set slot 16 of player's current inventory to {Bliss.Life.Disp.%player%}
			set slot 17 of player's current inventory to {Bliss.Flux.Disp.%player%}
			if {Bliss.Tier2.%player%} is not true:
				set slot 13 of player's current inventory to {Bliss.UpgraderGUI}
				
			if {Bliss.Tier2.%player%} is true:
				set slot 13 of player's current inventory to {Bliss.UpgraderGUI.T2}


on inventory close:
	if {-trading::%player%} is true:
		set {-trading::%player%} to false

on inventory click:
	#if event-item is a prismarine shard:
	if {-trading::%player%} is true:
		if index of event-slot is 9:
			cancel event
			set {Bliss.Gem.%player%} to 1
			clearGems(player)
			execute console command "bliss:gemgem %player%"
			close player's inventory
		if index of event-slot is 10:
			cancel event
			set {Bliss.Gem.%player%} to 2
			clearGems(player)
			execute console command "bliss:gemgem %player%"
			close player's inventory
		if index of event-slot is 11:
			cancel event
			set {Bliss.Gem.%player%} to 3
			clearGems(player)
			execute console command "bliss:gemgem %player%"
			close player's inventory
		if index of event-slot is 12:
			cancel event
			set {Bliss.Gem.%player%} to 4
			clearGems(player)
			execute console command "bliss:gemgem %player%"
			close player's inventory
			
		if index of event-slot is 13:
			if {Bliss.Tier2.%player%} is not true:
				cancel event
				set {Bliss.Tier2.%player%} to true
				clearGems(player)
				execute console command "bliss:gemgem %player%"
				set slot 13 of player's current inventory to {Bliss.UpgraderGUI.T2}
				#close player's inventory
			else if {Bliss.Tier2.%player%} is true:
				cancel event
				set {Bliss.Tier2.%player%} to false
				clearGems(player)
				execute console command "bliss:gemgem %player%"
				set slot 13 of player's current inventory to {Bliss.UpgraderGUI}
				#close player's inventory


		if index of event-slot is 14:
			cancel event
			set {Bliss.Gem.%player%} to 5
			clearGems(player)
			execute console command "bliss:gemgem %player%"
			close player's inventory
		if index of event-slot is 15:
			cancel event
			set {Bliss.Gem.%player%} to 6
			clearGems(player)
			execute console command "bliss:gemgem %player%"
			close player's inventory
		if index of event-slot is 16:
			cancel event
			set {Bliss.Gem.%player%} to 7
			clearGems(player)
			execute console command "bliss:gemgem %player%"
			close player's inventory
		if index of event-slot is 17:
			cancel event
			set {Bliss.Gem.%player%} to 8
			clearGems(player)
			execute console command "bliss:gemgem %player%"
			close player's inventory





command /bliss:gemdisable:
	permission: op
	trigger:
		loop all players:
			add 999 to {Tag..%loop-player%}

command /bliss:gemenable:
	permission: op
	trigger:
		loop all players:
			set {Tag..%loop-player%} to -1

command /trust [<text>] [<offlineplayer>]:
	trigger:
		if arg-1 is "add":
			if {Trusted.%player%.%arg-2%} is not true:
				send "🔮 &b%player% &aTrusted You" to arg-2
				send "🔮 &aTrusted &b%arg-2%" to player
				execute console command "tag %arg-2% add Trusted%player%"
				set {Trusted.%player%.%arg-2%} to true
			else:
				send "🔮 &cYou've already trusted &b%arg-2%&c!" to player
		if arg-1 is "remove":
			if arg-2 is player:
				send "&cYou can't un-trust yourself!" to player
			else:
				if {Trusted.%player%.%arg-2%} is true:
					send "🔮 &aUntrusted &b%arg-2%" to player
					execute console command "tag %arg-2% remove Trusted%player%"
					set {Trusted.%player%.%arg-2%} to false
				else:
					send "🔮 &b%arg-2% &cis not trusted!" to player

on tab complete for "/trust":
	set tab completions for position 1 to "add" and "remove"
	
	
command /pvp [<text>]: 
	permission: op
	trigger:
		if arg-1 is "on":
			enable PvP in all worlds
			loop all players:
				send title "PvP has been enabled" to loop-player for 5 seconds with fadein 1 second and fade out 1 second
		if arg-1 is "off":
			disable PvP in all worlds
			loop all players:
				send title "PvP has been disabled" to loop-player for 5 seconds with fadein 1 second and fade out 1 second
on tab complete for "/pvp":
	set tab completions for position 1 to "on" and "off"

command /bliss:reset [<Offlineplayer>]:
	permission: op
	trigger:
		send "&6🔮 &aReset &b%arg-1%&a's gem"
		set {Bliss.Energy.%arg-1%} to 6
		set {Bliss.get.gem.%arg-1%} to 1
		
command /withdraw [<Offlineplayer>]:
	trigger:
		if {Bliss.Energy.%player%} < 3:
			send "&4&lYou do not have energy to withdraw!"
		else:
			send "<##FFD773>🔮 Bottled &l&f1 <##96FFD9>&lᴇɴᴇʀɢʏ"
			set {Bliss.Energy.%arg-1%} to 6
			set {Bliss.get.gem.%arg-1%} to 1	
			if {Bliss.Energy.%player%} > 1:
				clearGems(player)
				remove 1 from {Bliss.Energy.%player%}
				execute console command "bliss:gemgem %player%"
				set {Bliss.Energy} to nautilus shell named "<##96FFD9>&lᴇɴᴇʀɢʏ <##FFE4AB>ɪɴ ᴀ ʙᴏᴛᴛʟᴇ" with custom model data 300
				give {Bliss.Energy} to player
		
command /bliss:setenergy <player> <integer>:
	permission: op
	trigger:
		set {Bliss.Energy.%arg-1%} to arg-2

command /bliss:gemgem <player>:
	permission: op
	trigger:
		clearGems(arg-1)
		if {Bliss.Tier2.%arg-1%} is not true:
			if {Bliss.Gem.%arg-1%} is 1:
				execute console command "/bliss:givegem %arg-1% StrengthT1"
			if {Bliss.Gem.%arg-1%} is 2:
				execute console command "/bliss:givegem %arg-1% FireT1"
			if {Bliss.Gem.%arg-1%} is 3:
				execute console command "/bliss:givegem %arg-1% WealthT1"
			if {Bliss.Gem.%arg-1%} is 4:
				execute console command "/bliss:givegem %arg-1% SpeedT1"
			if {Bliss.Gem.%arg-1%} is 5:
				execute console command "/bliss:givegem %arg-1% PuffT1"
			if {Bliss.Gem.%arg-1%} is 6:
				execute console command "/bliss:givegem %arg-1% AstraT1"
			if {Bliss.Gem.%arg-1%} is 7:
				execute console command "/bliss:givegem %arg-1% LifeT1"		
			if {Bliss.Gem.%arg-1%} is 8:
				execute console command "/bliss:givegem %arg-1% FluxT1"	
		if {Bliss.Tier2.%arg-1%} is true:
			if {Bliss.Gem.%arg-1%} is 1:
				execute console command "/bliss:givegem %arg-1% StrengthT2"
			if {Bliss.Gem.%arg-1%} is 2:
				execute console command "/bliss:givegem %arg-1% FireT2"
			if {Bliss.Gem.%arg-1%} is 3:
				execute console command "/bliss:givegem %arg-1% WealthT2"
			if {Bliss.Gem.%arg-1%} is 4:
				execute console command "/bliss:givegem %arg-1% SpeedT2"
			if {Bliss.Gem.%arg-1%} is 5:
				execute console command "/bliss:givegem %arg-1% PuffT2"
			if {Bliss.Gem.%arg-1%} is 6:
				execute console command "/bliss:givegem %arg-1% AstraT2"
			if {Bliss.Gem.%arg-1%} is 7:
				execute console command "/bliss:givegem %arg-1% LifeT2"
			if {Bliss.Gem.%arg-1%} is 8:
				execute console command "/bliss:givegem %arg-1% FluxT2"
	

command /bliss:items [<text>]:
	permission: op
	trigger:
		if arg-1 is "energy":
			set {Bliss.Energy} to nautilus shell named "<##96FFD9>&lᴇɴᴇʀɢʏ <##FFE4AB>ɪɴ ᴀ ʙᴏᴛᴛʟᴇ" with custom model data 300
			give {Bliss.Energy} to player
		if arg-1 is "trader":
			give {Bliss.Trader} to player
		if arg-1 is "upgrader":
			give {Bliss.Upgrader} to player
		if arg-1 is "fragment":
			set {Bliss.Fragment} to nautilus shell named "<##FFD773>ɢᴇᴍ &r&7ꜰʀᴀɢᴍᴇɴᴛ" with custom model data 240
			give {Bliss.Fragment} to player
		if arg-1 is "revive":
			give {Bliss.Revive} to player
		if arg-1 is "repair":
			give {Bliss.Repair} to player
on tab complete for "/bliss:items":
	set tab completions for position 1 to "energy" and "trader" and "upgrader" and "fragment" and "revive" and "repair"

command /bliss:cooldown <player>:
	permission: op
	trigger:
		set player's walk speed to 0.2
		set {AstraDodge.%arg-1%} to false
		set {FluxSpeedD.%arg-1%} to 0
		set {flux.cooldown3.%arg-1%} to false
		set {FluxDamage.energy.%arg-1%} to 0
		set {FluxMin3.%arg-1%} to -1
		set {FluxSec3.%arg-1%} to -1
		set {flux.cooldown2.%arg-1%} to false
		set {FluxMin2.%arg-1%} to -1
		set {FluxSec2.%arg-1%} to -1
		set {flux.cooldown.%arg-1%} to false
		set {FluxMin.%arg-1%} to -1
		set {FluxSec.%arg-1%} to -1
		set {strength.cooldown4.%arg-1%} to false
		set {StrengthMin4.%arg-1%} to -1
		set {StrengthSec4.%arg-1%} to -1
		set {strength.cooldown3.%arg-1%} to false
		set {StrengthMin3.%arg-1%} to -1
		set {StrengthSec3.%arg-1%} to -1
		set {strength.cooldown2.%arg-1%} to false
		set {StrengthMin2.%arg-1%} to -1
		set {StrengthSec2.%arg-1%} to -1
		set {strength.cooldown.%arg-1%} to false
		set {StrengthMin.%arg-1%} to -1
		set {StrengthSec.%arg-1%} to -1
		set {speed.cooldown.%arg-1%} to false
		set {SpeedMin.%arg-1%} to -1
		set {SpeedSec.%arg-1%} to -1
		set {speed.cooldown3.%arg-1%} to false
		set {SpeedMin3.%arg-1%} to -1
		set {SpeedSec3.%arg-1%} to -1
		set {speed.cooldown2.%arg-1%} to false
		set {SpeedMin2.%arg-1%} to -1
		set {SpeedSec2.%arg-1%} to -1
		set {speed.cooldown4.%arg-1%} to false
		set {SpeedMin4.%arg-1%} to -1
		set {SpeedSec4.%arg-1%} to -1
		set {Speed.3.storm::%player%} to false
		set {fireball.%player%} to 0
		set {fire.cooldown.%arg-1%} to false
		set {FireMin.%arg-1%} to -1
		set {FireSec.%arg-1%} to -1
		set {fire.cooldown3.%arg-1%} to false
		set {FireMin4.%player%} to -1
		set {FireSec4.%player%} to -1
		set {fire.cooldown4.%player%} to false
		set {FireMin3.%arg-1%} to -1
		set {FireSec3.%arg-1%} to -1
		set {fire.cooldown2.%arg-1%} to false
		set {FireMin2.%arg-1%} to -1
		set {FireSec2.%arg-1%} to -1
		set {puff.cooldown.%arg-1%} to false
		set {PuffMin.%arg-1%} to -1
		set {PuffSec.%arg-1%} to -1
		set {puff.cooldown3.%arg-1%} to false
		set {PuffMin3.%arg-1%} to -1
		set {PuffSec3.%arg-1%} to -1
		set {puff.cooldown2.%arg-1%} to false
		set {PuffMin2.%arg-1%} to -1
		set {PuffSec2.%arg-1%} to -1
		set {wealth.cooldown.%arg-1%} to false
		set {WealthMin.%arg-1%} to -1
		set {WealthSec.%arg-1%} to -1
		set {wealth.cooldown3.%arg-1%} to false
		set {WealthMin3.%arg-1%} to -1
		set {WealthSec3.%arg-1%} to -1
		set {wealth.cooldown2.%arg-1%} to false
		set {WealthMin2.%arg-1%} to -1
		set {WealthSec2.%arg-1%} to -1
		set {life.cooldown.%arg-1%} to false
		set {LifeMin.%arg-1%} to -1
		set {LifeSec.%arg-1%} to -1
		set {life.cooldown2.%arg-1%} to false
		set {LifeMin2.%arg-1%} to -1
		set {LifeSec2.%arg-1%} to -1
		set {life.cooldown3.%arg-1%} to false
		set {LifeMin3.%arg-1%} to -1
		set {LifeSec3.%arg-1%} to -1
		set {LifeMin4.%player%} to -1
		set {LifeSec4.%player%} to -1
		set {life.cooldown4.%player%} to false
		set {astra.cooldown.%arg-1%} to false
		set {AstraMin.%arg-1%} to -1
		set {AstraSec.%arg-1%} to -1
		set {astra.cooldown2.%arg-1%} to false
		set {AstraMin2.%arg-1%} to -1
		set {AstraSec2.%arg-1%} to -1
		set {astra.cooldown3.%arg-1%} to false
		set {AstraMin3.%arg-1%} to -1
		set {AstraSec3.%arg-1%} to -1
		set {Tag..%arg-1%} to 0

command /bliss:givegem <player> [<text>]:
	permission: op
	trigger:
		set {_bliss.gem.pristine.max.nbt} to "{Enchantments:[{id:vanishing_curse,lvl:1}],HideFlags:1}"
		#if {tradeSlot.%arg-1%} is an index:
		if arg-2 is "StrengthT2":
			if {Bliss.Energy.%arg-1%} is 1:
				set {Bliss.Strength.T2.%arg-1%} to prismarine shard named "&4&lꜱᴛʀᴇɴɢᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&8Broken Gem" and "&f&lᴜꜱᴇʟᴇꜱꜱ" with custom model data 96
				give {Bliss.Strength.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 2:
				set {Bliss.Strength.T2.%arg-1%} to prismarine shard named "&4&lꜱᴛʀᴇɴɢᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&cRuined Gem" and "&f&lʜᴀᴠᴇ ᴛʜᴇ sᴛʀᴇɴɢᴛʜ ᴏғ ᴀ ᴀʀᴍʏ", "&f", "<##F10303>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- &7Strength", "&7- Enchants Sharpness", "&7- Bloodthorns", "&f", "<##F10303>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##F10303>Bounty Hunter", "&f", "<##F10303>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f🤺 <##B5B5B5>ғʀᴀɪʟᴇʀ &4🧑🏻", "&7- &f🤺 <##B5B5B5>ɴᴜʟʟɪғʏ &4🤼", "&f", "&7- &f⚔<##910D0D> ᴄʜᴀᴅ sᴛʀᴇɴɢᴛʜ &a🧑🏻" and "&7- &f⚔<##910D0D> ᴄʜᴀᴅ sᴛʀᴇɴɢᴛʜ &a🤼" with custom model data 90
				give {Bliss.Strength.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 3:
				set {Bliss.Strength.T2.%arg-1%} to prismarine shard named "&4&lꜱᴛʀᴇɴɢᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&eDamaged Gem" and "&f&lʜᴀᴠᴇ ᴛʜᴇ sᴛʀᴇɴɢᴛʜ ᴏғ ᴀ ᴀʀᴍʏ", "&f", "<##F10303>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- &7Strength", "&7- Enchants Sharpness", "&7- Bloodthorns", "&f", "<##F10303>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##F10303>Bounty Hunter", "&f", "<##F10303>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f🤺 <##B5B5B5>ғʀᴀɪʟᴇʀ &4🧑🏻", "&7- &f🤺 <##B5B5B5>ɴᴜʟʟɪғʏ &4🤼", "&f", "&7- &f⚔<##910D0D> ᴄʜᴀᴅ sᴛʀᴇɴɢᴛʜ &a🧑🏻" and "&7- &f⚔<##910D0D> ᴄʜᴀᴅ sᴛʀᴇɴɢᴛʜ &a🤼" with custom model data 70
				give {Bliss.Strength.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 4:
				set {Bliss.Strength.T2.%arg-1%} to prismarine shard named "&4&lꜱᴛʀᴇɴɢᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aCracked Gem" and "&f&lʜᴀᴠᴇ ᴛʜᴇ sᴛʀᴇɴɢᴛʜ ᴏғ ᴀ ᴀʀᴍʏ", "&f", "<##F10303>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- &7Strength", "&7- Enchants Sharpness", "&7- Bloodthorns", "&f", "<##F10303>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##F10303>Bounty Hunter", "&f", "<##F10303>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f🤺 <##B5B5B5>ғʀᴀɪʟᴇʀ &4🧑🏻", "&7- &f🤺 <##B5B5B5>ɴᴜʟʟɪғʏ &4🤼", "&f", "&7- &f⚔<##910D0D> ᴄʜᴀᴅ sᴛʀᴇɴɢᴛʜ &a🧑🏻" and "&7- &f⚔<##910D0D> ᴄʜᴀᴅ sᴛʀᴇɴɢᴛʜ &a🤼" with custom model data 50
				give {Bliss.Strength.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 5:
				set {Bliss.Strength.T2.%arg-1%} to prismarine shard named "&4&lꜱᴛʀᴇɴɢᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aScratched Gem" and "&f&lʜᴀᴠᴇ ᴛʜᴇ sᴛʀᴇɴɢᴛʜ ᴏғ ᴀ ᴀʀᴍʏ", "&f", "<##F10303>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- &7Strength", "&7- Enchants Sharpness", "&7- Bloodthorns", "&f", "<##F10303>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##F10303>Bounty Hunter", "&f", "<##F10303>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f🤺 <##B5B5B5>ғʀᴀɪʟᴇʀ &4🧑🏻", "&7- &f🤺 <##B5B5B5>ɴᴜʟʟɪғʏ &4🤼", "&f", "&7- &f⚔<##910D0D> ᴄʜᴀᴅ sᴛʀᴇɴɢᴛʜ &a🧑🏻" and "&7- &f⚔<##910D0D> ᴄʜᴀᴅ sᴛʀᴇɴɢᴛʜ &a🤼" with custom model data 30
				give {Bliss.Strength.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 6:
				set {Bliss.Strength.T2.%arg-1%} to prismarine shard named "&4&lꜱᴛʀᴇɴɢᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine Gem" and "&f&lʜᴀᴠᴇ ᴛʜᴇ sᴛʀᴇɴɢᴛʜ ᴏғ ᴀ ᴀʀᴍʏ", "&f", "<##F10303>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- &7Strength", "&7- Enchants Sharpness", "&7- Bloodthorns", "&f", "<##F10303>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##F10303>Bounty Hunter", "&f", "<##F10303>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f🤺 <##B5B5B5>ғʀᴀɪʟᴇʀ &4🧑🏻", "&7- &f🤺 <##B5B5B5>ɴᴜʟʟɪғʏ &4🤼", "&f", "&7- &f⚔<##910D0D> ᴄʜᴀᴅ sᴛʀᴇɴɢᴛʜ &a🧑🏻" and "&7- &f⚔<##910D0D> ᴄʜᴀᴅ sᴛʀᴇɴɢᴛʜ &a🤼" with custom model data 10
				give {Bliss.Strength.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 7:
				set {Bliss.Strength.T2.%arg-1%} to prismarine shard named "&4&lꜱᴛʀᴇɴɢᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 1 Gem" and "&f&lʜᴀᴠᴇ ᴛʜᴇ sᴛʀᴇɴɢᴛʜ ᴏғ ᴀ ᴀʀᴍʏ", "&f", "<##F10303>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- &7Strength", "&7- Enchants Sharpness", "&7- Bloodthorns", "&f", "<##F10303>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##F10303>Bounty Hunter", "&f", "<##F10303>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f🤺 <##B5B5B5>ғʀᴀɪʟᴇʀ &4🧑🏻", "&7- &f🤺 <##B5B5B5>ɴᴜʟʟɪғʏ &4🤼", "&f", "&7- &f⚔<##910D0D> ᴄʜᴀᴅ sᴛʀᴇɴɢᴛʜ &a🧑🏻" and "&7- &f⚔<##910D0D> ᴄʜᴀᴅ sᴛʀᴇɴɢᴛʜ &a🤼" with custom model data 10
				give {Bliss.Strength.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 8:
				set {Bliss.Strength.T2.%arg-1%} to prismarine shard named "&4&lꜱᴛʀᴇɴɢᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 2 Gem" and "&f&lʜᴀᴠᴇ ᴛʜᴇ sᴛʀᴇɴɢᴛʜ ᴏғ ᴀ ᴀʀᴍʏ", "&f", "<##F10303>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- &7Strength", "&7- Enchants Sharpness", "&7- Bloodthorns", "&f", "<##F10303>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##F10303>Bounty Hunter", "&f", "<##F10303>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f🤺 <##B5B5B5>ғʀᴀɪʟᴇʀ &4🧑🏻", "&7- &f🤺 <##B5B5B5>ɴᴜʟʟɪғʏ &4🤼", "&f", "&7- &f⚔<##910D0D> ᴄʜᴀᴅ sᴛʀᴇɴɢᴛʜ &a🧑🏻" and "&7- &f⚔<##910D0D> ᴄʜᴀᴅ sᴛʀᴇɴɢᴛʜ &a🤼" with custom model data 10
				give {Bliss.Strength.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 9:
				set {Bliss.Strength.T2.%arg-1%} to prismarine shard named "&4&lꜱᴛʀᴇɴɢᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 3 Gem" and "&f&lʜᴀᴠᴇ ᴛʜᴇ sᴛʀᴇɴɢᴛʜ ᴏғ ᴀ ᴀʀᴍʏ", "&f", "<##F10303>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- &7Strength", "&7- Enchants Sharpness", "&7- Bloodthorns", "&f", "<##F10303>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##F10303>Bounty Hunter", "&f", "<##F10303>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f🤺 <##B5B5B5>ғʀᴀɪʟᴇʀ &4🧑🏻", "&7- &f🤺 <##B5B5B5>ɴᴜʟʟɪғʏ &4🤼", "&f", "&7- &f⚔<##910D0D> ᴄʜᴀᴅ sᴛʀᴇɴɢᴛʜ &a🧑🏻" and "&7- &f⚔<##910D0D> ᴄʜᴀᴅ sᴛʀᴇɴɢᴛʜ &a🤼" with custom model data 10
				give {Bliss.Strength.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 10:
				set {Bliss.Strength.T2.%arg-1%} to prismarine shard named "&4&lꜱᴛʀᴇɴɢᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 4 Gem" and "&f&lʜᴀᴠᴇ ᴛʜᴇ sᴛʀᴇɴɢᴛʜ ᴏғ ᴀ ᴀʀᴍʏ", "&f", "<##F10303>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- &7Strength", "&7- Enchants Sharpness", "&7- Bloodthorns", "&f", "<##F10303>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##F10303>Bounty Hunter", "&f", "<##F10303>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f🤺 <##B5B5B5>ғʀᴀɪʟᴇʀ &4🧑🏻", "&7- &f🤺 <##B5B5B5>ɴᴜʟʟɪғʏ &4🤼", "&f", "&7- &f⚔<##910D0D> ᴄʜᴀᴅ sᴛʀᴇɴɢᴛʜ &a🧑🏻" and "&7- &f⚔<##910D0D> ᴄʜᴀᴅ sᴛʀᴇɴɢᴛʜ &a🤼" with custom model data 10
				give {Bliss.Strength.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} > 10:
				set {Bliss.Strength.T2.%arg-1%} to prismarine shard named "&4&lꜱᴛʀᴇɴɢᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 5 Gem" and "&f&lʜᴀᴠᴇ ᴛʜᴇ sᴛʀᴇɴɢᴛʜ ᴏғ ᴀ ᴀʀᴍʏ", "&f", "<##F10303>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- &7Strength", "&7- Enchants Sharpness", "&7- Bloodthorns", "&f", "<##F10303>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##F10303>Bounty Hunter", "&f", "<##F10303>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f🤺 <##B5B5B5>ғʀᴀɪʟᴇʀ &4🧑🏻", "&7- &f🤺 <##B5B5B5>ɴᴜʟʟɪғʏ &4🤼", "&f", "&7- &f⚔<##910D0D> ᴄʜᴀᴅ sᴛʀᴇɴɢᴛʜ &a🧑🏻" and "&7- &f⚔<##910D0D> ᴄʜᴀᴅ sᴛʀᴇɴɢᴛʜ &a🤼" with custom model data 10 
				enchant {Bliss.Strength.T2.%arg-1%} with mending 1
				give {Bliss.Strength.T2.%arg-1%} to arg-1
		if arg-2 is "FireT2":
			if {Bliss.Energy.%arg-1%} is 1:
				set {Bliss.Fire.T2.%arg-1%} to prismarine shard named "§6§lꜰɪʀᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&8Broken Gem" and "&f&lᴜꜱᴇʟᴇꜱꜱ" with custom model data 96
				give {Bliss.Fire.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 2:
				set {Bliss.Fire.T2.%arg-1%} to prismarine shard named "§6§lꜰɪʀᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&cRuined Gem" and "&f&lᴍᴀɴɪᴘᴜʟᴀᴛᴇ ғɪʀᴇ", "&f", "<##FE8120>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fire Resistance", "&7- Autosmelt", "&7- Flamestrike", "&7- Fireshot", "&f ", "<##FE8120>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE8120>Crisp", "&f", "<##FE8120>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs" and "&7-&f🧨 <##FF5F33>ғɪʀᴇʙᴀʟʟ &4🧑🏻", "&7-&f🧨<##FF5F33> ᴍᴇᴛᴇᴏʀ ꜱʜᴏᴡᴇʀ &4🤼", "&f", "&7-&f🥾<##248FD1> ᴄᴏᴢʏ Cᴀᴍᴘғɪʀᴇ"  with custom model data 82
				give {Bliss.Fire.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 3:
				set {Bliss.Fire.T2.%arg-1%} to prismarine shard named "§6§lꜰɪʀᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&eDamaged Gem" and "&f&lᴍᴀɴɪᴘᴜʟᴀᴛᴇ ғɪʀᴇ", "&f", "<##FE8120>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fire Resistance", "&7- Autosmelt", "&7- Flamestrike", "&7- Fireshot", "&f ", "<##FE8120>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE8120>Crisp", "&f", "<##FE8120>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs" and "&7-&f🧨 <##FF5F33>ғɪʀᴇʙᴀʟʟ &4🧑🏻", "&7-&f🧨<##FF5F33> ᴍᴇᴛᴇᴏʀ ꜱʜᴏᴡᴇʀ &4🤼", "&f", "&7-&f🥾<##248FD1> ᴄᴏᴢʏ Cᴀᴍᴘғɪʀᴇ"  with custom model data 62
				give {Bliss.Fire.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 4:
				set {Bliss.Fire.T2.%arg-1%} to prismarine shard named "§6§lꜰɪʀᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aCracked Gem" and "&f&lᴍᴀɴɪᴘᴜʟᴀᴛᴇ ғɪʀᴇ", "&f", "<##FE8120>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fire Resistance", "&7- Autosmelt", "&7- Flamestrike", "&7- Fireshot", "&f ", "<##FE8120>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE8120>Crisp", "&f", "<##FE8120>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs" and "&7-&f🧨 <##FF5F33>ғɪʀᴇʙᴀʟʟ &4🧑🏻", "&7-&f🧨<##FF5F33> ᴍᴇᴛᴇᴏʀ ꜱʜᴏᴡᴇʀ &4🤼", "&f", "&7-&f🥾<##248FD1> ᴄᴏᴢʏ Cᴀᴍᴘғɪʀᴇ"  with custom model data 42
				give {Bliss.Fire.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 5:
				set {Bliss.Fire.T2.%arg-1%} to prismarine shard named "§6§lꜰɪʀᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aScratched Gem" and "&f&lᴍᴀɴɪᴘᴜʟᴀᴛᴇ ғɪʀᴇ", "&f", "<##FE8120>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fire Resistance", "&7- Autosmelt", "&7- Flamestrike", "&7- Fireshot", "&f ", "<##FE8120>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE8120>Crisp", "&f", "<##FE8120>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs" and "&7-&f🧨 <##FF5F33>ғɪʀᴇʙᴀʟʟ &4🧑🏻", "&7-&f🧨<##FF5F33> ᴍᴇᴛᴇᴏʀ ꜱʜᴏᴡᴇʀ &4🤼", "&f", "&7-&f🥾<##248FD1> ᴄᴏᴢʏ Cᴀᴍᴘғɪʀᴇ"  with custom model data 22
				give {Bliss.Fire.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 6:
				set {Bliss.Fire.T2.%arg-1%} to prismarine shard named "§6§lꜰɪʀᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine Gem" and "&f&lᴍᴀɴɪᴘᴜʟᴀᴛᴇ ғɪʀᴇ", "&f", "<##FE8120>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fire Resistance", "&7- Autosmelt", "&7- Flamestrike", "&7- Fireshot", "&f ", "<##FE8120>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE8120>Crisp", "&f", "<##FE8120>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs" and "&7-&f🧨 <##FF5F33>ғɪʀᴇʙᴀʟʟ &4🧑🏻", "&7-&f🧨<##FF5F33> ᴍᴇᴛᴇᴏʀ ꜱʜᴏᴡᴇʀ &4🤼", "&f", "&7-&f🥾<##248FD1> ᴄᴏᴢʏ Cᴀᴍᴘғɪʀᴇ"  with custom model data 2
				give {Bliss.Fire.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 7:
				set {Bliss.Fire.T2.%arg-1%} to prismarine shard named "§6§lꜰɪʀᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 1 Gem" and "&f&lᴍᴀɴɪᴘᴜʟᴀᴛᴇ ғɪʀᴇ", "&f", "<##FE8120>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fire Resistance", "&7- Autosmelt", "&7- Flamestrike", "&7- Fireshot", "&f ", "<##FE8120>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE8120>Crisp", "&f", "<##FE8120>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs" and "&7-&f🧨 <##FF5F33>ғɪʀᴇʙᴀʟʟ &4🧑🏻", "&7-&f🧨<##FF5F33> ᴍᴇᴛᴇᴏʀ ꜱʜᴏᴡᴇʀ &4🤼", "&f", "&7-&f🥾<##248FD1> ᴄᴏᴢʏ Cᴀᴍᴘғɪʀᴇ"  with custom model data 2
				give {Bliss.Fire.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 8:
				set {Bliss.Fire.T2.%arg-1%} to prismarine shard named "§6§lꜰɪʀᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 2 Gem" and "&f&lᴍᴀɴɪᴘᴜʟᴀᴛᴇ ғɪʀᴇ", "&f", "<##FE8120>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fire Resistance", "&7- Autosmelt", "&7- Flamestrike", "&7- Fireshot", "&f ", "<##FE8120>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE8120>Crisp", "&f", "<##FE8120>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs" and "&7-&f🧨 <##FF5F33>ғɪʀᴇʙᴀʟʟ &4🧑🏻", "&7-&f🧨<##FF5F33> ᴍᴇᴛᴇᴏʀ ꜱʜᴏᴡᴇʀ &4🤼", "&f", "&7-&f🥾<##248FD1> ᴄᴏᴢʏ Cᴀᴍᴘғɪʀᴇ" with custom model data 2
				give {Bliss.Fire.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 9:
				set {Bliss.Fire.T2.%arg-1%} to prismarine shard named "§6§lꜰɪʀᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 3 Gem" and "&f&lᴍᴀɴɪᴘᴜʟᴀᴛᴇ ғɪʀᴇ", "&f", "<##FE8120>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fire Resistance", "&7- Autosmelt", "&7- Flamestrike", "&7- Fireshot", "&f ", "<##FE8120>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE8120>Crisp", "&f", "<##FE8120>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs" and "&7-&f🧨 <##FF5F33>ғɪʀᴇʙᴀʟʟ &4🧑🏻", "&7-&f🧨<##FF5F33> ᴍᴇᴛᴇᴏʀ ꜱʜᴏᴡᴇʀ &4🤼", "&f", "&7-&f🥾<##248FD1> ᴄᴏᴢʏ Cᴀᴍᴘғɪʀᴇ"  with custom model data 2
				give {Bliss.Fire.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 10:
				set {Bliss.Fire.T2.%arg-1%} to prismarine shard named "§6§lꜰɪʀᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 4 Gem" and "&f&lᴍᴀɴɪᴘᴜʟᴀᴛᴇ ғɪʀᴇ", "&f", "<##FE8120>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fire Resistance", "&7- Autosmelt", "&7- Flamestrike", "&7- Fireshot", "&f ", "<##FE8120>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE8120>Crisp", "&f", "<##FE8120>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs" and "&7-&f🧨 <##FF5F33>ғɪʀᴇʙᴀʟʟ &4🧑🏻", "&7-&f🧨<##FF5F33> ᴍᴇᴛᴇᴏʀ ꜱʜᴏᴡᴇʀ &4🤼", "&f", "&7-&f🥾<##248FD1> ᴄᴏᴢʏ Cᴀᴍᴘғɪʀᴇ" with custom model data 2
				give {Bliss.Fire.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} > 10:
				set {Bliss.Fire.T2.%arg-1%} to prismarine shard named "§6§lꜰɪʀᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 5 Gem" and "&f&lᴍᴀɴɪᴘᴜʟᴀᴛᴇ ғɪʀᴇ", "&f", "<##FE8120>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fire Resistance", "&7- Autosmelt", "&7- Flamestrike", "&7- Fireshot", "&f ", "<##FE8120>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE8120>Crisp", "&f", "<##FE8120>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs" and "&7-&f🧨 <##FF5F33>ғɪʀᴇʙᴀʟʟ &4🧑🏻", "&7-&f🧨<##FF5F33> ᴍᴇᴛᴇᴏʀ ꜱʜᴏᴡᴇʀ &4🤼", "&f", "&7-&f🥾<##248FD1> ᴄᴏᴢʏ Cᴀᴍᴘғɪʀᴇ" with custom model data 2 
				enchant {Bliss.Fire.T2.%arg-1%} with mending 1
				give {Bliss.Fire.T2.%arg-1%} to arg-1
		if arg-2 is "WealthT2":
			if {Bliss.Energy.%arg-1%} is 1:
				set {Bliss.Wealth.T2.%arg-1%} to prismarine shard named "§2§lᴡᴇᴀʟᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&8Broken Gem" and "&f&lᴜꜱᴇʟᴇꜱꜱ" with custom model data 96
				give {Bliss.Wealth.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 2:
				set {Bliss.Wealth.T2.%arg-1%} to prismarine shard named "§2§lᴡᴇᴀʟᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&cRuined Gem" and "&f&lғᴜᴇʟ ᴀ ᴇᴍᴘɪʀᴇ", "&f", "<##0EC912>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Hero of the Village", "&7- Luck", "&7- Enchants Mending", "&7- Enchants Fortune", "&7- Enchants Looting", "&7- Bonus Ores", "&7- Extra EXP", "&7- Durability Chip", "&7- Double Debris", "&f", "<##0EC912>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##0EC912>Pockets", "&f", "<##0EC912>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7-&f🍀 &cᴜɴғᴏʀᴛᴜɴᴇ &4🧑🏻", "&7-&f🍀 &cɪᴛᴇᴍ ʟᴏᴄᴋ &4🤼", "&f", "&7-&f💸 <##FFC642>ʀɪᴄʜ ʀᴜsʜ &a🧑🏻", "&7-&f💸 <##FFC642>ᴀᴍʟɪꜰɪᴄᴀᴛɪᴏɴ &a🤼          "  with custom model data 92
				give {Bliss.Wealth.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 3:
				set {Bliss.Wealth.T2.%arg-1%} to prismarine shard named "§2§lᴡᴇᴀʟᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&eDamaged Gem" and "&f&lғᴜᴇʟ ᴀ ᴇᴍᴘɪʀᴇ", "&f", "<##0EC912>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Hero of the Village", "&7- Luck", "&7- Enchants Mending", "&7- Enchants Fortune", "&7- Enchants Looting", "&7- Bonus Ores", "&7- Extra EXP", "&7- Durability Chip", "&7- Double Debris", "&f", "<##0EC912>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##0EC912>Pockets", "&f", "<##0EC912>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7-&f🍀 &cᴜɴғᴏʀᴛᴜɴᴇ &4🧑🏻", "&7-&f🍀 &cɪᴛᴇᴍ ʟᴏᴄᴋ &4🤼", "&f", "&7-&f💸 <##FFC642>ʀɪᴄʜ ʀᴜsʜ &a🧑🏻", "&7-&f💸 <##FFC642>ᴀᴍʟɪꜰɪᴄᴀᴛɪᴏɴ &a🤼          "  with custom model data 72
				give {Bliss.Wealth.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 4:
				set {Bliss.Wealth.T2.%arg-1%} to prismarine shard named "§2§lᴡᴇᴀʟᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aCracked Gem" and "&f&lғᴜᴇʟ ᴀ ᴇᴍᴘɪʀᴇ", "&f", "<##0EC912>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Hero of the Village", "&7- Luck", "&7- Enchants Mending", "&7- Enchants Fortune", "&7- Enchants Looting", "&7- Bonus Ores", "&7- Extra EXP", "&7- Durability Chip", "&7- Double Debris", "&f", "<##0EC912>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##0EC912>Pockets", "&f", "<##0EC912>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7-&f🍀 &cᴜɴғᴏʀᴛᴜɴᴇ &4🧑🏻", "&7-&f🍀 &cɪᴛᴇᴍ ʟᴏᴄᴋ &4🤼", "&f", "&7-&f💸 <##FFC642>ʀɪᴄʜ ʀᴜsʜ &a🧑🏻", "&7-&f💸 <##FFC642>ᴀᴍʟɪꜰɪᴄᴀᴛɪᴏɴ &a🤼          "  with custom model data 52
				give {Bliss.Wealth.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 5:
				set {Bliss.Wealth.T2.%arg-1%} to prismarine shard named "§2§lᴡᴇᴀʟᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aScratched Gem" and "&f&lғᴜᴇʟ ᴀ ᴇᴍᴘɪʀᴇ", "&f", "<##0EC912>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Hero of the Village", "&7- Luck", "&7- Enchants Mending", "&7- Enchants Fortune", "&7- Enchants Looting", "&7- Bonus Ores", "&7- Extra EXP", "&7- Durability Chip", "&7- Double Debris", "&f", "<##0EC912>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##0EC912>Pockets", "&f", "<##0EC912>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7-&f🍀 &cᴜɴғᴏʀᴛᴜɴᴇ &4🧑🏻", "&7-&f🍀 &cɪᴛᴇᴍ ʟᴏᴄᴋ &4🤼", "&f", "&7-&f💸 <##FFC642>ʀɪᴄʜ ʀᴜsʜ &a🧑🏻", "&7-&f💸 <##FFC642>ᴀᴍʟɪꜰɪᴄᴀᴛɪᴏɴ &a🤼          "  with custom model data 32
				give {Bliss.Wealth.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 6:
				set {Bliss.Wealth.T2.%arg-1%} to prismarine shard named "§2§lᴡᴇᴀʟᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine Gem" and "&f&lғᴜᴇʟ ᴀ ᴇᴍᴘɪʀᴇ", "&f", "<##0EC912>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Hero of the Village", "&7- Luck", "&7- Enchants Mending", "&7- Enchants Fortune", "&7- Enchants Looting", "&7- Bonus Ores", "&7- Extra EXP", "&7- Durability Chip", "&7- Double Debris", "&f", "<##0EC912>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##0EC912>Pockets", "&f", "<##0EC912>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7-&f🍀 &cᴜɴғᴏʀᴛᴜɴᴇ &4🧑🏻", "&7-&f🍀 &cɪᴛᴇᴍ ʟᴏᴄᴋ &4🤼", "&f", "&7-&f💸 <##FFC642>ʀɪᴄʜ ʀᴜsʜ &a🧑🏻", "&7-&f💸 <##FFC642>ᴀᴍʟɪꜰɪᴄᴀᴛɪᴏɴ &a🤼          "  with custom model data 12
				give {Bliss.Wealth.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 7:
				set {Bliss.Wealth.T2.%arg-1%} to prismarine shard named "§2§lᴡᴇᴀʟᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 1 Gem" and "&f&lғᴜᴇʟ ᴀ ᴇᴍᴘɪʀᴇ", "&f", "<##0EC912>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Hero of the Village", "&7- Luck", "&7- Enchants Mending", "&7- Enchants Fortune", "&7- Enchants Looting", "&7- Bonus Ores", "&7- Extra EXP", "&7- Durability Chip", "&7- Double Debris", "&f", "<##0EC912>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##0EC912>Pockets", "&f", "<##0EC912>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7-&f🍀 &cᴜɴғᴏʀᴛᴜɴᴇ &4🧑🏻", "&7-&f🍀 &cɪᴛᴇᴍ ʟᴏᴄᴋ &4🤼", "&f", "&7-&f💸 <##FFC642>ʀɪᴄʜ ʀᴜsʜ &a🧑🏻", "&7-&f💸 <##FFC642>ᴀᴍʟɪꜰɪᴄᴀᴛɪᴏɴ &a🤼          "  with custom model data 12
				give {Bliss.Wealth.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 8:
				set {Bliss.Wealth.T2.%arg-1%} to prismarine shard named "§2§lᴡᴇᴀʟᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 2 Gem" and "&f&lғᴜᴇʟ ᴀ ᴇᴍᴘɪʀᴇ", "&f", "<##0EC912>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Hero of the Village", "&7- Luck", "&7- Enchants Mending", "&7- Enchants Fortune", "&7- Enchants Looting", "&7- Bonus Ores", "&7- Extra EXP", "&7- Durability Chip", "&7- Double Debris", "&f", "<##0EC912>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##0EC912>Pockets", "&f", "<##0EC912>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7-&f🍀 &cᴜɴғᴏʀᴛᴜɴᴇ &4🧑🏻", "&7-&f🍀 &cɪᴛᴇᴍ ʟᴏᴄᴋ &4🤼", "&f", "&7-&f💸 <##FFC642>ʀɪᴄʜ ʀᴜsʜ &a🧑🏻", "&7-&f💸 <##FFC642>ᴀᴍʟɪꜰɪᴄᴀᴛɪᴏɴ &a🤼          "  with custom model data 12
				give {Bliss.Wealth.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 9:
				set {Bliss.Wealth.T2.%arg-1%} to prismarine shard named "§2§lᴡᴇᴀʟᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 3 Gem" and "&f&lғᴜᴇʟ ᴀ ᴇᴍᴘɪʀᴇ", "&f", "<##0EC912>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Hero of the Village", "&7- Luck", "&7- Enchants Mending", "&7- Enchants Fortune", "&7- Enchants Looting", "&7- Bonus Ores", "&7- Extra EXP", "&7- Durability Chip", "&7- Double Debris", "&f", "<##0EC912>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##0EC912>Pockets", "&f", "<##0EC912>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7-&f🍀 &cᴜɴғᴏʀᴛᴜɴᴇ &4🧑🏻", "&7-&f🍀 &cɪᴛᴇᴍ ʟᴏᴄᴋ &4🤼", "&f", "&7-&f💸 <##FFC642>ʀɪᴄʜ ʀᴜsʜ &a🧑🏻", "&7-&f💸 <##FFC642>ᴀᴍʟɪꜰɪᴄᴀᴛɪᴏɴ &a🤼          "  with custom model data 12
				give {Bliss.Wealth.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 10:
				set {Bliss.Wealth.T2.%arg-1%} to prismarine shard named "§2§lᴡᴇᴀʟᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 4 Gem" and "&f&lғᴜᴇʟ ᴀ ᴇᴍᴘɪʀᴇ", "&f", "<##0EC912>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Hero of the Village", "&7- Luck", "&7- Enchants Mending", "&7- Enchants Fortune", "&7- Enchants Looting", "&7- Bonus Ores", "&7- Extra EXP", "&7- Durability Chip", "&7- Double Debris", "&f", "<##0EC912>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##0EC912>Pockets", "&f", "<##0EC912>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7-&f🍀 &cᴜɴғᴏʀᴛᴜɴᴇ &4🧑🏻", "&7-&f🍀 &cɪᴛᴇᴍ ʟᴏᴄᴋ &4🤼", "&f", "&7-&f💸 <##FFC642>ʀɪᴄʜ ʀᴜsʜ &a🧑🏻", "&7-&f💸 <##FFC642>ᴀᴍʟɪꜰɪᴄᴀᴛɪᴏɴ &a🤼          "  with custom model data 12
				give {Bliss.Wealth.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} > 10:
				set {Bliss.Wealth.T2.%arg-1%} to prismarine shard named "§2§lᴡᴇᴀʟᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 5 Gem" and "&f&lғᴜᴇʟ ᴀ ᴇᴍᴘɪʀᴇ", "&f", "<##0EC912>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Hero of the Village", "&7- Luck", "&7- Enchants Mending", "&7- Enchants Fortune", "&7- Enchants Looting", "&7- Bonus Ores", "&7- Extra EXP", "&7- Durability Chip", "&7- Double Debris", "&f", "<##0EC912>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##0EC912>Pockets", "&f", "<##0EC912>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7-&f🍀 &cᴜɴғᴏʀᴛᴜɴᴇ &4🧑🏻", "&7-&f🍀 &cɪᴛᴇᴍ ʟᴏᴄᴋ &4🤼", "&f", "&7-&f💸 <##FFC642>ʀɪᴄʜ ʀᴜsʜ &a🧑🏻", "&7-&f💸 <##FFC642>ᴀᴍʟɪꜰɪᴄᴀᴛɪᴏɴ &a🤼          "  with custom model data 12 
				enchant {Bliss.Wealth.T2.%arg-1%} with mending 1
				give {Bliss.Wealth.T2.%arg-1%} to arg-1
		if arg-2 is "SpeedT2":
			if {Bliss.Energy.%arg-1%} is 1:
				set {Bliss.Speed.T2.%arg-1%} to prismarine shard named "§e§lꜱᴘᴇᴇᴅ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&8Broken Gem" and "&f&lᴜꜱᴇʟᴇꜱꜱ" with custom model data 96
				give {Bliss.Speed.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 2:
				set {Bliss.Speed.T2.%arg-1%} to prismarine shard named "§e§lꜱᴘᴇᴇᴅ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&cRuined Gem" and "&f&lᴡᴀᴛᴄʜ ᴛʜᴇ ᴡᴏʀʟᴅ ᴀʀᴏᴜɴᴅ ʏᴏᴜ ᴛᴜʀɴ ɪɴᴛᴏ ᴀ ʙʟᴜʀ ", "&f", "&7<##FEFD17>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Speed", "&7- Dolphins grace", "&7- Enchants Efficiency", "&7- Enchants Soul Speed", "&f", "<##FEFD17>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FEFD17> Terminal Velocity", "&f", "<##FEFD17>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&7- &f🎯 <##FFE86E>ʙʟᴜʀ", "&f", "&7- 🌩 <##61FFEA>sᴘᴇᴇᴅʏ sᴛᴏʀᴍ &4🧑🏻", "&7- 🌩 <##61FFEA>sᴘᴇᴇᴅʏ sᴛᴏʀᴍ &4🤼" with custom model data 88
				give {Bliss.Speed.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 3:
				set {Bliss.Speed.T2.%arg-1%} to prismarine shard named "§e§lꜱᴘᴇᴇᴅ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&eDamaged Gem" and "&f&lᴡᴀᴛᴄʜ ᴛʜᴇ ᴡᴏʀʟᴅ ᴀʀᴏᴜɴᴅ ʏᴏᴜ ᴛᴜʀɴ ɪɴᴛᴏ ᴀ ʙʟᴜʀ ", "&f", "&7<##FEFD17>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Speed", "&7- Dolphins grace", "&7- Enchants Efficiency", "&7- Enchants Soul Speed", "&f", "<##FEFD17>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FEFD17> Terminal Velocity", "&f", "<##FEFD17>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&7- &f🎯 <##FFE86E>ʙʟᴜʀ", "&f", "&7- 🌩 <##61FFEA>sᴘᴇᴇᴅʏ sᴛᴏʀᴍ &4🧑🏻", "&7- 🌩 <##61FFEA>sᴘᴇᴇᴅʏ sᴛᴏʀᴍ &4🤼" with custom model data 68
				give {Bliss.Speed.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 4:
				set {Bliss.Speed.T2.%arg-1%} to prismarine shard named "§e§lꜱᴘᴇᴇᴅ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aCracked Gem" and "&f&lᴡᴀᴛᴄʜ ᴛʜᴇ ᴡᴏʀʟᴅ ᴀʀᴏᴜɴᴅ ʏᴏᴜ ᴛᴜʀɴ ɪɴᴛᴏ ᴀ ʙʟᴜʀ ", "&f", "&7<##FEFD17>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Speed", "&7- Dolphins grace", "&7- Enchants Efficiency", "&7- Enchants Soul Speed", "&f", "<##FEFD17>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FEFD17> Terminal Velocity", "&f", "<##FEFD17>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&7- &f🎯 <##FFE86E>ʙʟᴜʀ", "&f", "&7- 🌩 <##61FFEA>sᴘᴇᴇᴅʏ sᴛᴏʀᴍ &4🧑🏻", "&7- 🌩 <##61FFEA>sᴘᴇᴇᴅʏ sᴛᴏʀᴍ &4🤼" with custom model data 48
				give {Bliss.Speed.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 5:
				set {Bliss.Speed.T2.%arg-1%} to prismarine shard named "§e§lꜱᴘᴇᴇᴅ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aScratched Gem" and "&f&lᴡᴀᴛᴄʜ ᴛʜᴇ ᴡᴏʀʟᴅ ᴀʀᴏᴜɴᴅ ʏᴏᴜ ᴛᴜʀɴ ɪɴᴛᴏ ᴀ ʙʟᴜʀ ", "&f", "&7<##FEFD17>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Speed", "&7- Dolphins grace", "&7- Enchants Efficiency", "&7- Enchants Soul Speed", "&f", "<##FEFD17>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FEFD17> Terminal Velocity", "&f", "<##FEFD17>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&7- &f🎯 <##FFE86E>ʙʟᴜʀ", "&f", "&7- 🌩 <##61FFEA>sᴘᴇᴇᴅʏ sᴛᴏʀᴍ &4🧑🏻", "&7- 🌩 <##61FFEA>sᴘᴇᴇᴅʏ sᴛᴏʀᴍ &4🤼" with custom model data 28
				give {Bliss.Speed.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 6:
				set {Bliss.Speed.T2.%arg-1%} to prismarine shard named "§e§lꜱᴘᴇᴇᴅ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine Gem" and "&f&lᴡᴀᴛᴄʜ ᴛʜᴇ ᴡᴏʀʟᴅ ᴀʀᴏᴜɴᴅ ʏᴏᴜ ᴛᴜʀɴ ɪɴᴛᴏ ᴀ ʙʟᴜʀ ", "&f", "&7<##FEFD17>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Speed", "&7- Dolphins grace", "&7- Enchants Efficiency", "&7- Enchants Soul Speed", "&f", "<##FEFD17>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FEFD17> Terminal Velocity", "&f", "<##FEFD17>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&7- &f🎯 <##FFE86E>ʙʟᴜʀ", "&f", "&7- 🌩 <##61FFEA>sᴘᴇᴇᴅʏ sᴛᴏʀᴍ &4🧑🏻", "&7- 🌩 <##61FFEA>sᴘᴇᴇᴅʏ sᴛᴏʀᴍ &4🤼" with custom model data 8
				give {Bliss.Speed.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 7:
				set {Bliss.Speed.T2.%arg-1%} to prismarine shard named "§e§lꜱᴘᴇᴇᴅ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 1 Gem" and "&f&lᴡᴀᴛᴄʜ ᴛʜᴇ ᴡᴏʀʟᴅ ᴀʀᴏᴜɴᴅ ʏᴏᴜ ᴛᴜʀɴ ɪɴᴛᴏ ᴀ ʙʟᴜʀ ", "&f", "&7<##FEFD17>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Speed", "&7- Dolphins grace", "&7- Enchants Efficiency", "&7- Enchants Soul Speed", "&f", "<##FEFD17>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FEFD17> Terminal Velocity", "&f", "<##FEFD17>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&7- &f🎯 <##FFE86E>ʙʟᴜʀ", "&f", "&7- 🌩 <##61FFEA>sᴘᴇᴇᴅʏ sᴛᴏʀᴍ &4🧑🏻", "&7- 🌩 <##61FFEA>sᴘᴇᴇᴅʏ sᴛᴏʀᴍ &4🤼" with custom model data 8
				give {Bliss.Speed.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 8:
				set {Bliss.Speed.T2.%arg-1%} to prismarine shard named "§e§lꜱᴘᴇᴇᴅ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 2 Gem" and "&f&lᴡᴀᴛᴄʜ ᴛʜᴇ ᴡᴏʀʟᴅ ᴀʀᴏᴜɴᴅ ʏᴏᴜ ᴛᴜʀɴ ɪɴᴛᴏ ᴀ ʙʟᴜʀ ", "&f", "&7<##FEFD17>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Speed", "&7- Dolphins grace", "&7- Enchants Efficiency", "&7- Enchants Soul Speed", "&f", "<##FEFD17>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FEFD17> Terminal Velocity", "&f", "<##FEFD17>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&7- &f🎯 <##FFE86E>ʙʟᴜʀ", "&f", "&7- 🌩 <##61FFEA>sᴘᴇᴇᴅʏ sᴛᴏʀᴍ &4🧑🏻", "&7- 🌩 <##61FFEA>sᴘᴇᴇᴅʏ sᴛᴏʀᴍ &4🤼" with custom model data 8
				give {Bliss.Speed.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 9:
				set {Bliss.Speed.T2.%arg-1%} to prismarine shard named "§e§lꜱᴘᴇᴇᴅ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 3 Gem" and "&f&lᴡᴀᴛᴄʜ ᴛʜᴇ ᴡᴏʀʟᴅ ᴀʀᴏᴜɴᴅ ʏᴏᴜ ᴛᴜʀɴ ɪɴᴛᴏ ᴀ ʙʟᴜʀ ", "&f", "&7<##FEFD17>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Speed", "&7- Dolphins grace", "&7- Enchants Efficiency", "&7- Enchants Soul Speed", "&f", "<##FEFD17>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FEFD17> Terminal Velocity", "&f", "<##FEFD17>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&7- &f🎯 <##FFE86E>ʙʟᴜʀ", "&f", "&7- 🌩 <##61FFEA>sᴘᴇᴇᴅʏ sᴛᴏʀᴍ &4🧑🏻", "&7- 🌩 <##61FFEA>sᴘᴇᴇᴅʏ sᴛᴏʀᴍ &4🤼" with custom model data 8
				give {Bliss.Speed.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 10:
				set {Bliss.Speed.T2.%arg-1%} to prismarine shard named "§e§lꜱᴘᴇᴇᴅ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 4 Gem" and "&f&lᴡᴀᴛᴄʜ ᴛʜᴇ ᴡᴏʀʟᴅ ᴀʀᴏᴜɴᴅ ʏᴏᴜ ᴛᴜʀɴ ɪɴᴛᴏ ᴀ ʙʟᴜʀ ", "&f", "&7<##FEFD17>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Speed", "&7- Dolphins grace", "&7- Enchants Efficiency", "&7- Enchants Soul Speed", "&f", "<##FEFD17>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FEFD17> Terminal Velocity", "&f", "<##FEFD17>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&7- &f🎯 <##FFE86E>ʙʟᴜʀ", "&f", "&7- 🌩 <##61FFEA>sᴘᴇᴇᴅʏ sᴛᴏʀᴍ &4🧑🏻", "&7- 🌩 <##61FFEA>sᴘᴇᴇᴅʏ sᴛᴏʀᴍ &4🤼" with custom model data 8
				give {Bliss.Speed.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} > 10:
				set {Bliss.Speed.T2.%arg-1%} to prismarine shard named "§e§lꜱᴘᴇᴇᴅ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "§bPristine + 5 Gem" and "&f&lᴡᴀᴛᴄʜ ᴛʜᴇ ᴡᴏʀʟᴅ ᴀʀᴏᴜɴᴅ ʏᴏᴜ ᴛᴜʀɴ ɪɴᴛᴏ ᴀ ʙʟᴜʀ ", "&f", "&7<##FEFD17>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Speed", "&7- Dolphins grace", "&7- Enchants Efficiency", "&7- Enchants Soul Speed", "&f", "<##FEFD17>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FEFD17> Terminal Velocity", "&f", "<##FEFD17>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&7- &f🎯 <##FFE86E>ʙʟᴜʀ", "&f", "&7- 🌩 <##61FFEA>sᴘᴇᴇᴅʏ sᴛᴏʀᴍ &4🧑🏻", "&7- 🌩 <##61FFEA>sᴘᴇᴇᴅʏ sᴛᴏʀᴍ &4🤼" with custom model data 8 
				enchant {Bliss.Speed.T2.%arg-1%} with mending 1
				give {Bliss.Speed.T2.%arg-1%} to arg-1
		if arg-2 is "PuffT2":
			if {Bliss.Energy.%arg-1%} is 1:
				set {Bliss.Puff.T2.%arg-1%} to prismarine shard named "§f§lᴘᴜꜰꜰ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&8Broken Gem" and "&f&lᴜꜱᴇʟᴇꜱꜱ" with custom model data 96
				give {Bliss.Puff.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 2:
				set {Bliss.Puff.T2.%arg-1%} to prismarine shard named "§f§lᴘᴜꜰꜰ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&cRuined Gem" and "&f&lʙᴇ ᴛʜᴇ ʙɪɢɢᴇsᴛ ʙɪʀᴅ", "&f", "&f🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fall Damage immunity", "&7- Enchants Power", "&7- Enchants Punch", "&7- Sculk Silence", "&7- Crop Tramp-Less", "&f", "&f🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- &fDouble Jump", "&f", "&f🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&7- &f☁ ʙʀᴇᴇᴢʏ ʙᴀsʜ &4🧑🏻", "&7- &f☁ ʙʀᴇᴇᴢʏ ʙᴀsʜ &4🤼", "&f", "&7- &f⏫ ᴅᴀsʜ" with custom model data 86
				give {Bliss.Puff.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 3:
				set {Bliss.Puff.T2.%arg-1%} to prismarine shard named "§f§lᴘᴜꜰꜰ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&eDamaged Gem" and "&f&lʙᴇ ᴛʜᴇ ʙɪɢɢᴇsᴛ ʙɪʀᴅ", "&f", "&f🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fall Damage immunity", "&7- Enchants Power", "&7- Enchants Punch", "&7- Sculk Silence", "&7- Crop Tramp-Less", "&f", "&f🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- &fDouble Jump", "&f", "&f🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&7- &f☁ ʙʀᴇᴇᴢʏ ʙᴀsʜ &4🧑🏻", "&7- &f☁ ʙʀᴇᴇᴢʏ ʙᴀsʜ &4🤼", "&f", "&7- &f⏫ ᴅᴀsʜ" with custom model data 66
				give {Bliss.Puff.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 4:
				set {Bliss.Puff.T2.%arg-1%} to prismarine shard named "§f§lᴘᴜꜰꜰ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aCracked Gem" and "&f&lʙᴇ ᴛʜᴇ ʙɪɢɢᴇsᴛ ʙɪʀᴅ", "&f", "&f🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fall Damage immunity", "&7- Enchants Power", "&7- Enchants Punch", "&7- Sculk Silence", "&7- Crop Tramp-Less", "&f", "&f🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- &fDouble Jump", "&f", "&f🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&7- &f☁ ʙʀᴇᴇᴢʏ ʙᴀsʜ &4🧑🏻", "&7- &f☁ ʙʀᴇᴇᴢʏ ʙᴀsʜ &4🤼", "&f", "&7- &f⏫ ᴅᴀsʜ" with custom model data 46
				give {Bliss.Puff.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 5:
				set {Bliss.Puff.T2.%arg-1%} to prismarine shard named "§f§lᴘᴜꜰꜰ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aScratched Gem" and "&f&lʙᴇ ᴛʜᴇ ʙɪɢɢᴇsᴛ ʙɪʀᴅ", "&f", "&f🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fall Damage immunity", "&7- Enchants Power", "&7- Enchants Punch", "&7- Sculk Silence", "&7- Crop Tramp-Less", "&f", "&f🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- &fDouble Jump", "&f", "&f🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&7- &f☁ ʙʀᴇᴇᴢʏ ʙᴀsʜ &4🧑🏻", "&7- &f☁ ʙʀᴇᴇᴢʏ ʙᴀsʜ &4🤼", "&f", "&7- &f⏫ ᴅᴀsʜ" with custom model data 26
				give {Bliss.Puff.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 6:
				set {Bliss.Puff.T2.%arg-1%} to prismarine shard named "§f§lᴘᴜꜰꜰ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "§bPristine" and "&f&lʙᴇ ᴛʜᴇ ʙɪɢɢᴇsᴛ ʙɪʀᴅ", "&f", "&f🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fall Damage immunity", "&7- Enchants Power", "&7- Enchants Punch", "&7- Sculk Silence", "&7- Crop Tramp-Less", "&f", "&f🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- &fDouble Jump", "&f", "&f🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&7- &f☁ ʙʀᴇᴇᴢʏ ʙᴀsʜ &4🧑🏻", "&7- &f☁ ʙʀᴇᴇᴢʏ ʙᴀsʜ &4🤼", "&f", "&7- &f⏫ ᴅᴀsʜ" with custom model data 6
				give {Bliss.Puff.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 7:
				set {Bliss.Puff.T2.%arg-1%} to prismarine shard named "§f§lᴘᴜꜰꜰ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "§bPristine + 1 Gem" and "&f&lʙᴇ ᴛʜᴇ ʙɪɢɢᴇsᴛ ʙɪʀᴅ", "&f", "&f🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fall Damage immunity", "&7- Enchants Power", "&7- Enchants Punch", "&7- Sculk Silence", "&7- Crop Tramp-Less", "&f", "&f🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- &fDouble Jump", "&f", "&f🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&7- &f☁ ʙʀᴇᴇᴢʏ ʙᴀsʜ &4🧑🏻", "&7- &f☁ ʙʀᴇᴇᴢʏ ʙᴀsʜ &4🤼", "&f", "&7- &f⏫ ᴅᴀsʜ" with custom model data 6
				give {Bliss.Puff.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 8:
				set {Bliss.Puff.T2.%arg-1%} to prismarine shard named "§f§lᴘᴜꜰꜰ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "§bPristine + 2 Gem" and "&f&lʙᴇ ᴛʜᴇ ʙɪɢɢᴇsᴛ ʙɪʀᴅ", "&f", "&f🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fall Damage immunity", "&7- Enchants Power", "&7- Enchants Punch", "&7- Sculk Silence", "&7- Crop Tramp-Less", "&f", "&f🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- &fDouble Jump", "&f", "&f🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&7- &f☁ ʙʀᴇᴇᴢʏ ʙᴀsʜ &4🧑🏻", "&7- &f☁ ʙʀᴇᴇᴢʏ ʙᴀsʜ &4🤼", "&f", "&7- &f⏫ ᴅᴀsʜ" with custom model data 6
				give {Bliss.Puff.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 9:
				set {Bliss.Puff.T2.%arg-1%} to prismarine shard named "§f§lᴘᴜꜰꜰ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "§bPristine + 3 Gem" and "&f&lʙᴇ ᴛʜᴇ ʙɪɢɢᴇsᴛ ʙɪʀᴅ", "&f", "&f🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fall Damage immunity", "&7- Enchants Power", "&7- Enchants Punch", "&7- Sculk Silence", "&7- Crop Tramp-Less", "&f", "&f🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- &fDouble Jump", "&f", "&f🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&7- &f☁ ʙʀᴇᴇᴢʏ ʙᴀsʜ &4🧑🏻", "&7- &f☁ ʙʀᴇᴇᴢʏ ʙᴀsʜ &4🤼", "&f", "&7- &f⏫ ᴅᴀsʜ" with custom model data 6
				give {Bliss.Puff.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 10:
				set {Bliss.Puff.T2.%arg-1%} to prismarine shard named "§f§lᴘᴜꜰꜰ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "§bPristine + 4 Gem" and "&f&lʙᴇ ᴛʜᴇ ʙɪɢɢᴇsᴛ ʙɪʀᴅ", "&f", "&f🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fall Damage immunity", "&7- Enchants Power", "&7- Enchants Punch", "&7- Sculk Silence", "&7- Crop Tramp-Less", "&f", "&f🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- &fDouble Jump", "&f", "&f🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&7- &f☁ ʙʀᴇᴇᴢʏ ʙᴀsʜ &4🧑🏻", "&7- &f☁ ʙʀᴇᴇᴢʏ ʙᴀsʜ &4🤼", "&f", "&7- &f⏫ ᴅᴀsʜ" with custom model data 6
				give {Bliss.Puff.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} > 10:
				set {Bliss.Puff.T2.%arg-1%} to prismarine shard named "§f§lᴘᴜꜰꜰ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "§bPristine + 5 Gem" and "&f&lʙᴇ ᴛʜᴇ ʙɪɢɢᴇsᴛ ʙɪʀᴅ", "&f", "&f🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fall Damage immunity", "&7- Enchants Power", "&7- Enchants Punch", "&7- Sculk Silence", "&7- Crop Tramp-Less", "&f", "&f🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- &fDouble Jump", "&f", "&f🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&7- &f☁ ʙʀᴇᴇᴢʏ ʙᴀsʜ &4🧑🏻", "&7- &f☁ ʙʀᴇᴇᴢʏ ʙᴀsʜ &4🤼", "&f", "&7- &f⏫ ᴅᴀsʜ" with custom model data 6 
				enchant {Bliss.Puff.T2.%arg-1%} with mending 1
				give {Bliss.Puff.T2.%arg-1%} to arg-1
		if arg-2 is "AstraT2":
			if {Bliss.Energy.%arg-1%} is 1:
				set {Bliss.Astra.T2.%arg-1%} to prismarine shard named "§5§lᴀꜱᴛʀᴀ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&8Broken Gem" and "&f&lᴜꜱᴇʟᴇꜱꜱ" with custom model data 96
				give {Bliss.Astra.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 2:
				set {Bliss.Astra.T2.%arg-1%} to prismarine shard named "§5§lᴀꜱᴛʀᴀ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&cRuined Gem" and "&f&lᴍᴀɴᴀɢᴇ ᴛʜᴇ ᴛɪᴅᴇs ᴏғ ᴛʜᴇ ᴄᴏsᴍᴏs ", "<##A01FFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Phasing", "&7- Soul Healing", "&7- Soul Capture", "<##A01FFF>", "&7", "<##A01FFF>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##A01FFF>Dimensional Drift", "&f", "<##A01FFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f🔪 <##BFB8B8>ᴅᴀɢɢᴇʀs &4🧑🏻", "&7- &f🔪 &7ᴜɴʙᴏᴜɴᴅᴇᴅ &4🤼", "&f", "&7- &f👻 <##AABBBF>ᴀsᴛʀᴀʟ ᴘʀᴏᴊᴇᴄᴛɪᴏɴ &a🧑🏻" and "&7- &f👻 <##AABBBF>ᴀsᴛʀᴀʟ ᴠᴏɪᴅ &a🤼" with custom model data 94
				give {Bliss.Astra.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 3:
				set {Bliss.Astra.T2.%arg-1%} to prismarine shard named "§5§lᴀꜱᴛʀᴀ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&eDamaged Gem" and "&f&lᴍᴀɴᴀɢᴇ ᴛʜᴇ ᴛɪᴅᴇs ᴏғ ᴛʜᴇ ᴄᴏsᴍᴏs ", "<##A01FFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Phasing", "&7- Soul Healing", "&7- Soul Capture", "<##A01FFF>", "&7", "<##A01FFF>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##A01FFF>Dimensional Drift", "&f", "<##A01FFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f🔪 <##BFB8B8>ᴅᴀɢɢᴇʀs &4🧑🏻", "&7- &f🔪 &7ᴜɴʙᴏᴜɴᴅᴇᴅ &4🤼", "&f", "&7- &f👻 <##AABBBF>ᴀsᴛʀᴀʟ ᴘʀᴏᴊᴇᴄᴛɪᴏɴ &a🧑🏻" and "&7- &f👻 <##AABBBF>ᴀsᴛʀᴀʟ ᴠᴏɪᴅ &a🤼" with custom model data 74
				give {Bliss.Astra.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 4:
				set {Bliss.Astra.T2.%arg-1%} to prismarine shard named "§5§lᴀꜱᴛʀᴀ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aCracked Gem" and "&f&lᴍᴀɴᴀɢᴇ ᴛʜᴇ ᴛɪᴅᴇs ᴏғ ᴛʜᴇ ᴄᴏsᴍᴏs ", "<##A01FFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Phasing", "&7- Soul Healing", "&7- Soul Capture", "<##A01FFF>", "&7", "<##A01FFF>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##A01FFF>Dimensional Drift", "&f", "<##A01FFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f🔪 <##BFB8B8>ᴅᴀɢɢᴇʀs &4🧑🏻", "&7- &f🔪 &7ᴜɴʙᴏᴜɴᴅᴇᴅ &4🤼", "&f", "&7- &f👻 <##AABBBF>ᴀsᴛʀᴀʟ ᴘʀᴏᴊᴇᴄᴛɪᴏɴ &a🧑🏻" and "&7- &f👻 <##AABBBF>ᴀsᴛʀᴀʟ ᴠᴏɪᴅ &a🤼" with custom model data 54
				give {Bliss.Astra.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 5:
				set {Bliss.Astra.T2.%arg-1%} to prismarine shard named "§5§lᴀꜱᴛʀᴀ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aScratched Gem" and "&f&lᴍᴀɴᴀɢᴇ ᴛʜᴇ ᴛɪᴅᴇs ᴏғ ᴛʜᴇ ᴄᴏsᴍᴏs ", "<##A01FFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Phasing", "&7- Soul Healing", "&7- Soul Capture", "<##A01FFF>", "&7", "<##A01FFF>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##A01FFF>Dimensional Drift", "&f", "<##A01FFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f🔪 <##BFB8B8>ᴅᴀɢɢᴇʀs &4🧑🏻", "&7- &f🔪 &7ᴜɴʙᴏᴜɴᴅᴇᴅ &4🤼", "&f", "&7- &f👻 <##AABBBF>ᴀsᴛʀᴀʟ ᴘʀᴏᴊᴇᴄᴛɪᴏɴ &a🧑🏻" and "&7- &f👻 <##AABBBF>ᴀsᴛʀᴀʟ ᴠᴏɪᴅ &a🤼" with custom model data 34
				give {Bliss.Astra.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 6:
				set {Bliss.Astra.T2.%arg-1%} to prismarine shard named "§5§lᴀꜱᴛʀᴀ <##FFD773>ɢᴇᴍ" with lore "§bPristine" and "&f&lᴍᴀɴᴀɢᴇ ᴛʜᴇ ᴛɪᴅᴇs ᴏғ ᴛʜᴇ ᴄᴏsᴍᴏs ", "<##A01FFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Phasing", "&7- Soul Healing", "&7- Soul Capture", "<##A01FFF>", "&7", "<##A01FFF>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##A01FFF>Dimensional Drift", "&f", "<##A01FFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f🔪 <##BFB8B8>ᴅᴀɢɢᴇʀs &4🧑🏻", "&7- &f🔪 &7ᴜɴʙᴏᴜɴᴅᴇᴅ &4🤼", "&f", "&7- &f👻 <##AABBBF>ᴀsᴛʀᴀʟ ᴘʀᴏᴊᴇᴄᴛɪᴏɴ &a🧑🏻" and "&7- &f👻 <##AABBBF>ᴀsᴛʀᴀʟ ᴠᴏɪᴅ &a🤼" with custom model data 14
				give {Bliss.Astra.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 7:
				set {Bliss.Astra.T2.%arg-1%} to prismarine shard named "§5§lᴀꜱᴛʀᴀ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "§bPristine + 1 Gem" and "&f&lᴍᴀɴᴀɢᴇ ᴛʜᴇ ᴛɪᴅᴇs ᴏғ ᴛʜᴇ ᴄᴏsᴍᴏs ", "<##A01FFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Phasing", "&7- Soul Healing", "&7- Soul Capture", "<##A01FFF>", "&7", "<##A01FFF>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##A01FFF>Dimensional Drift", "&f", "<##A01FFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f🔪 <##BFB8B8>ᴅᴀɢɢᴇʀs &4🧑🏻", "&7- &f🔪 &7ᴜɴʙᴏᴜɴᴅᴇᴅ &4🤼", "&f", "&7- &f👻 <##AABBBF>ᴀsᴛʀᴀʟ ᴘʀᴏᴊᴇᴄᴛɪᴏɴ &a🧑🏻" and "&7- &f👻 <##AABBBF>ᴀsᴛʀᴀʟ ᴠᴏɪᴅ &a🤼" with custom model data 14
				give {Bliss.Astra.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 8:
				set {Bliss.Astra.T2.%arg-1%} to prismarine shard named "§5§lᴀꜱᴛʀᴀ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "§bPristine + 2 Gem" and "&f&lᴍᴀɴᴀɢᴇ ᴛʜᴇ ᴛɪᴅᴇs ᴏғ ᴛʜᴇ ᴄᴏsᴍᴏs ", "<##A01FFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Phasing", "&7- Soul Healing", "&7- Soul Capture", "<##A01FFF>", "&7", "<##A01FFF>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##A01FFF>Dimensional Drift", "&f", "<##A01FFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f🔪 <##BFB8B8>ᴅᴀɢɢᴇʀs &4🧑🏻", "&7- &f🔪 &7ᴜɴʙᴏᴜɴᴅᴇᴅ &4🤼", "&f", "&7- &f👻 <##AABBBF>ᴀsᴛʀᴀʟ ᴘʀᴏᴊᴇᴄᴛɪᴏɴ &a🧑🏻" and "&7- &f👻 <##AABBBF>ᴀsᴛʀᴀʟ ᴠᴏɪᴅ &a🤼" with custom model data 14
				give {Bliss.Astra.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 9:
				set {Bliss.Astra.T2.%arg-1%} to prismarine shard named "§5§lᴀꜱᴛʀᴀ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "§bPristine + 3 Gem" and "&f&lᴍᴀɴᴀɢᴇ ᴛʜᴇ ᴛɪᴅᴇs ᴏғ ᴛʜᴇ ᴄᴏsᴍᴏs ", "<##A01FFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Phasing", "&7- Soul Healing", "&7- Soul Capture", "<##A01FFF>", "&7", "<##A01FFF>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##A01FFF>Dimensional Drift", "&f", "<##A01FFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f🔪 <##BFB8B8>ᴅᴀɢɢᴇʀs &4🧑🏻", "&7- &f🔪 &7ᴜɴʙᴏᴜɴᴅᴇᴅ &4🤼", "&f", "&7- &f👻 <##AABBBF>ᴀsᴛʀᴀʟ ᴘʀᴏᴊᴇᴄᴛɪᴏɴ &a🧑🏻" and "&7- &f👻 <##AABBBF>ᴀsᴛʀᴀʟ ᴠᴏɪᴅ &a🤼" with custom model data 14
				give {Bliss.Astra.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 10:
				set {Bliss.Astra.T2.%arg-1%} to prismarine shard named "§5§lᴀꜱᴛʀᴀ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "§bPristine + 4 Gem" and "&f&lᴍᴀɴᴀɢᴇ ᴛʜᴇ ᴛɪᴅᴇs ᴏғ ᴛʜᴇ ᴄᴏsᴍᴏs ", "<##A01FFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Phasing", "&7- Soul Healing", "&7- Soul Capture", "<##A01FFF>", "&7", "<##A01FFF>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##A01FFF>Dimensional Drift", "&f", "<##A01FFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f🔪 <##BFB8B8>ᴅᴀɢɢᴇʀs &4🧑🏻", "&7- &f🔪 &7ᴜɴʙᴏᴜɴᴅᴇᴅ &4🤼", "&f", "&7- &f👻 <##AABBBF>ᴀsᴛʀᴀʟ ᴘʀᴏᴊᴇᴄᴛɪᴏɴ &a🧑🏻" and "&7- &f👻 <##AABBBF>ᴀsᴛʀᴀʟ ᴠᴏɪᴅ &a🤼" with custom model data 14
				give {Bliss.Astra.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} > 10:
				set {Bliss.Astra.T2.%arg-1%} to prismarine shard named "§5§lᴀꜱᴛʀᴀ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "§bPristine + 5 Gem" and "&f&lᴍᴀɴᴀɢᴇ ᴛʜᴇ ᴛɪᴅᴇs ᴏғ ᴛʜᴇ ᴄᴏsᴍᴏs ", "<##A01FFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Phasing", "&7- Soul Healing", "&7- Soul Capture", "<##A01FFF>", "&7", "<##A01FFF>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##A01FFF>Dimensional Drift", "&f", "<##A01FFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f🔪 <##BFB8B8>ᴅᴀɢɢᴇʀs &4🧑🏻", "&7- &f🔪 &7ᴜɴʙᴏᴜɴᴅᴇᴅ &4🤼", "&f", "&7- &f👻 <##AABBBF>ᴀsᴛʀᴀʟ ᴘʀᴏᴊᴇᴄᴛɪᴏɴ &a🧑🏻" and "&7- &f👻 <##AABBBF>ᴀsᴛʀᴀʟ ᴠᴏɪᴅ &a🤼" with custom model data 14 
				enchant {Bliss.Astra.T2.%arg-1%} with mending 1
				give {Bliss.Astra.T2.%arg-1%} to arg-1
		if arg-2 is "LifeT2":
			if {Bliss.Energy.%arg-1%} is 1:
				set {Bliss.Life.T2.%arg-1%} to prismarine shard named "§d§lʟɪꜰᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&8Broken Gem" and "&f&lᴜꜱᴇʟᴇꜱꜱ" with custom model data 96
				give {Bliss.Life.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 2:
				set {Bliss.Life.T2.%arg-1%} to prismarine shard named "§d§lʟɪꜰᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&cRuined Gem" and "&f&lᴄᴏɴᴛʀᴏʟ ᴛʜᴇ ʙᴀʟᴀɴᴄᴇ ᴏғ ʟɪғᴇ", "&f", "<##FE04B4>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Green Thumb", "&7- Radiant Fist", "&7- Bonus Saturation", "&7- Bonus Absorption", "&7- Wither Immune", "&f", "<##FE04B4>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE04B4>Vitality Vortex", "&f", "<##FE04B4>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f💘<##FF429A> ʜᴇᴀʀᴛ ᴅʀᴀɪɴᴇʀ &4🧑🏻", "&7- &f💘<##FF429A> ʜᴇᴀʀᴛʟᴏᴄᴋ &4🤼", "&f", "&7- &f💖<##B8FFFA> ᴄɪʀᴄʟᴇ ᴏғ ʟɪғᴇ &a🧑🏻", "&7- &f💖<##B8FFFA> ᴄɪʀᴄʟᴇ ᴏғ ʟɪғᴇ &a🤼" with custom model data 84
				give {Bliss.Life.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 3:
				set {Bliss.Life.T2.%arg-1%} to prismarine shard named "§d§lʟɪꜰᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&eDamaged Gem" and "&f&lᴄᴏɴᴛʀᴏʟ ᴛʜᴇ ʙᴀʟᴀɴᴄᴇ ᴏғ ʟɪғᴇ", "&f", "<##FE04B4>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Green Thumb", "&7- Radiant Fist", "&7- Bonus Saturation", "&7- Bonus Absorption", "&7- Wither Immune", "&f", "<##FE04B4>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE04B4>Vitality Vortex", "&f", "<##FE04B4>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f💘<##FF429A> ʜᴇᴀʀᴛ ᴅʀᴀɪɴᴇʀ &4🧑🏻", "&7- &f💘<##FF429A> ʜᴇᴀʀᴛʟᴏᴄᴋ &4🤼", "&f", "&7- &f💖<##B8FFFA> ᴄɪʀᴄʟᴇ ᴏғ ʟɪғᴇ &a🧑🏻", "&7- &f💖<##B8FFFA> ᴄɪʀᴄʟᴇ ᴏғ ʟɪғᴇ &a🤼" with custom model data 64
				give {Bliss.Life.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 4:
				set {Bliss.Life.T2.%arg-1%} to prismarine shard named "§d§lʟɪꜰᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aCracked Gem" and "&f&lᴄᴏɴᴛʀᴏʟ ᴛʜᴇ ʙᴀʟᴀɴᴄᴇ ᴏғ ʟɪғᴇ", "&f", "<##FE04B4>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Green Thumb", "&7- Radiant Fist", "&7- Bonus Saturation", "&7- Bonus Absorption", "&7- Wither Immune", "&f", "<##FE04B4>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE04B4>Vitality Vortex", "&f", "<##FE04B4>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f💘<##FF429A> ʜᴇᴀʀᴛ ᴅʀᴀɪɴᴇʀ &4🧑🏻", "&7- &f💘<##FF429A> ʜᴇᴀʀᴛʟᴏᴄᴋ &4🤼", "&f", "&7- &f💖<##B8FFFA> ᴄɪʀᴄʟᴇ ᴏғ ʟɪғᴇ &a🧑🏻", "&7- &f💖<##B8FFFA> ᴄɪʀᴄʟᴇ ᴏғ ʟɪғᴇ &a🤼" with custom model data 44
				give {Bliss.Life.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 5:
				set {Bliss.Life.T2.%arg-1%} to prismarine shard named "§d§lʟɪꜰᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aScratched Gem" and "&f&lᴄᴏɴᴛʀᴏʟ ᴛʜᴇ ʙᴀʟᴀɴᴄᴇ ᴏғ ʟɪғᴇ", "&f", "<##FE04B4>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Green Thumb", "&7- Radiant Fist", "&7- Bonus Saturation", "&7- Bonus Absorption", "&7- Wither Immune", "&f", "<##FE04B4>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE04B4>Vitality Vortex", "&f", "<##FE04B4>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f💘<##FF429A> ʜᴇᴀʀᴛ ᴅʀᴀɪɴᴇʀ &4🧑🏻", "&7- &f💘<##FF429A> ʜᴇᴀʀᴛʟᴏᴄᴋ &4🤼", "&f", "&7- &f💖<##B8FFFA> ᴄɪʀᴄʟᴇ ᴏғ ʟɪғᴇ &a🧑🏻", "&7- &f💖<##B8FFFA> ᴄɪʀᴄʟᴇ ᴏғ ʟɪғᴇ &a🤼" with custom model data 24
				give {Bliss.Life.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 6:
				set {Bliss.Life.T2.%arg-1%} to prismarine shard named "§d§lʟɪꜰᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine Gem" and "&f&lᴄᴏɴᴛʀᴏʟ ᴛʜᴇ ʙᴀʟᴀɴᴄᴇ ᴏғ ʟɪғᴇ", "&f", "<##FE04B4>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Green Thumb", "&7- Radiant Fist", "&7- Bonus Saturation", "&7- Bonus Absorption", "&7- Wither Immune", "&f", "<##FE04B4>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE04B4>Vitality Vortex", "&f", "<##FE04B4>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f💘<##FF429A> ʜᴇᴀʀᴛ ᴅʀᴀɪɴᴇʀ &4🧑🏻", "&7- &f💘<##FF429A> ʜᴇᴀʀᴛʟᴏᴄᴋ &4🤼", "&f", "&7- &f💖<##B8FFFA> ᴄɪʀᴄʟᴇ ᴏғ ʟɪғᴇ &a🧑🏻", "&7- &f💖<##B8FFFA> ᴄɪʀᴄʟᴇ ᴏғ ʟɪғᴇ &a🤼" with custom model data 4
				give {Bliss.Life.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 7:
				set {Bliss.Life.T2.%arg-1%} to prismarine shard named "§d§lʟɪꜰᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 1 Gem" and "&f&lᴄᴏɴᴛʀᴏʟ ᴛʜᴇ ʙᴀʟᴀɴᴄᴇ ᴏғ ʟɪғᴇ", "&f", "<##FE04B4>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Green Thumb", "&7- Radiant Fist", "&7- Bonus Saturation", "&7- Bonus Absorption", "&7- Wither Immune", "&f", "<##FE04B4>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE04B4>Vitality Vortex", "&f", "<##FE04B4>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f💘<##FF429A> ʜᴇᴀʀᴛ ᴅʀᴀɪɴᴇʀ &4🧑🏻", "&7- &f💘<##FF429A> ʜᴇᴀʀᴛʟᴏᴄᴋ &4🤼", "&f", "&7- &f💖<##B8FFFA> ᴄɪʀᴄʟᴇ ᴏғ ʟɪғᴇ &a🧑🏻", "&7- &f💖<##B8FFFA> ᴄɪʀᴄʟᴇ ᴏғ ʟɪғᴇ &a🤼" with custom model data 4
				give {Bliss.Life.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 8:
				set {Bliss.Life.T2.%arg-1%} to prismarine shard named "§d§lʟɪꜰᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 2 Gem" and "&f&lᴄᴏɴᴛʀᴏʟ ᴛʜᴇ ʙᴀʟᴀɴᴄᴇ ᴏғ ʟɪғᴇ", "&f", "<##FE04B4>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Green Thumb", "&7- Radiant Fist", "&7- Bonus Saturation", "&7- Bonus Absorption", "&7- Wither Immune", "&f", "<##FE04B4>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE04B4>Vitality Vortex", "&f", "<##FE04B4>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f💘<##FF429A> ʜᴇᴀʀᴛ ᴅʀᴀɪɴᴇʀ &4🧑🏻", "&7- &f💘<##FF429A> ʜᴇᴀʀᴛʟᴏᴄᴋ &4🤼", "&f", "&7- &f💖<##B8FFFA> ᴄɪʀᴄʟᴇ ᴏғ ʟɪғᴇ &a🧑🏻", "&7- &f💖<##B8FFFA> ᴄɪʀᴄʟᴇ ᴏғ ʟɪғᴇ &a🤼" with custom model data 4
				give {Bliss.Life.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 9:
				set {Bliss.Life.T2.%arg-1%} to prismarine shard named "§d§lʟɪꜰᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 3 Gem" and "&f&lᴄᴏɴᴛʀᴏʟ ᴛʜᴇ ʙᴀʟᴀɴᴄᴇ ᴏғ ʟɪғᴇ", "&f", "<##FE04B4>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Green Thumb", "&7- Radiant Fist", "&7- Bonus Saturation", "&7- Bonus Absorption", "&7- Wither Immune", "&f", "<##FE04B4>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE04B4>Vitality Vortex", "&f", "<##FE04B4>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f💘<##FF429A> ʜᴇᴀʀᴛ ᴅʀᴀɪɴᴇʀ &4🧑🏻", "&7- &f💘<##FF429A> ʜᴇᴀʀᴛʟᴏᴄᴋ &4🤼", "&f", "&7- &f💖<##B8FFFA> ᴄɪʀᴄʟᴇ ᴏғ ʟɪғᴇ &a🧑🏻", "&7- &f💖<##B8FFFA> ᴄɪʀᴄʟᴇ ᴏғ ʟɪғᴇ &a🤼" with custom model data 4
				give {Bliss.Life.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 10:
				set {Bliss.Life.T2.%arg-1%} to prismarine shard named "§d§lʟɪꜰᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 4 Gem" and "&f&lᴄᴏɴᴛʀᴏʟ ᴛʜᴇ ʙᴀʟᴀɴᴄᴇ ᴏғ ʟɪғᴇ", "&f", "<##FE04B4>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Green Thumb", "&7- Radiant Fist", "&7- Bonus Saturation", "&7- Bonus Absorption", "&7- Wither Immune", "&f", "<##FE04B4>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE04B4>Vitality Vortex", "&f", "<##FE04B4>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f💘<##FF429A> ʜᴇᴀʀᴛ ᴅʀᴀɪɴᴇʀ &4🧑🏻", "&7- &f💘<##FF429A> ʜᴇᴀʀᴛʟᴏᴄᴋ &4🤼", "&f", "&7- &f💖<##B8FFFA> ᴄɪʀᴄʟᴇ ᴏғ ʟɪғᴇ &a🧑🏻", "&7- &f💖<##B8FFFA> ᴄɪʀᴄʟᴇ ᴏғ ʟɪғᴇ &a🤼" with custom model data 4
				give {Bliss.Life.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 11:
				set {Bliss.Life.T2.%arg-1%} to prismarine shard named "§d§lʟɪꜰᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 5 Gem" and "&f&lᴄᴏɴᴛʀᴏʟ ᴛʜᴇ ʙᴀʟᴀɴᴄᴇ ᴏғ ʟɪғᴇ", "&f", "<##FE04B4>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Green Thumb", "&7- Radiant Fist", "&7- Bonus Saturation", "&7- Bonus Absorption", "&7- Wither Immune", "&f", "<##FE04B4>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE04B4>Vitality Vortex", "&f", "<##FE04B4>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- &f💘<##FF429A> ʜᴇᴀʀᴛ ᴅʀᴀɪɴᴇʀ &4🧑🏻", "&7- &f💘<##FF429A> ʜᴇᴀʀᴛʟᴏᴄᴋ &4🤼", "&f", "&7- &f💖<##B8FFFA> ᴄɪʀᴄʟᴇ ᴏғ ʟɪғᴇ &a🧑🏻", "&7- &f💖<##B8FFFA> ᴄɪʀᴄʟᴇ ᴏғ ʟɪғᴇ &a🤼" with custom model data 4 
				enchant {Bliss.Life.T2.%arg-1%} with mending 1
				give {Bliss.Life.T2.%arg-1%} to arg-1
		if arg-2 is "FluxT2":
			if {Bliss.Energy.%arg-1%} is 1:
				set {Bliss.Flux.T2.%arg-1%} to prismarine shard named "<##009ac9>§lꜰʟᴜx <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&8Broken Gem" and "&f&lᴜꜱᴇʟᴇꜱꜱ" with custom model data 96
				give {Bliss.Flux.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 2:
				set {Bliss.Flux.T2.%arg-1%} to prismarine shard named "<##009ac9>§lꜰʟᴜx <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&cRuined Gem" and "&f&lᴇᴠᴇʀʏᴛʜɪɴɢ ɪs ᴀ ғʟᴜᴄᴛᴜᴀᴛɪᴏɴ", "<##03EAFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Flow State", "&7- Shocking Chance", "&7- Tireless", "&7- Conduction", "&7- Charged", "&f", "<##03EAFF>🔮 <##82F3FF>&l ᴀʙɪʟɪᴛʏ", "&7- <##03EAFF>Static Burst", "&f", "<##03EAFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- ☄ <##03EAFF>ᴇɴᴇʀɢʏ ʙᴇᴀᴍ &4🧑🏻", "&7- ☄ <##03EAFF>ɢʀᴏᴜɴᴅ &7 &4🤼", "&f" and "&7- 🌀 <##03EAFF>Kinetic Overdrive &a🤼" with custom model data 178
				give {Bliss.Flux.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 3:
				set {Bliss.Flux.T2.%arg-1%} to prismarine shard named "<##009ac9>§lꜰʟᴜx <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&eDamaged Gem" and "&f&lᴇᴠᴇʀʏᴛʜɪɴɢ ɪs ᴀ ғʟᴜᴄᴛᴜᴀᴛɪᴏɴ", "<##03EAFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Flow State", "&7- Shocking Chance", "&7- Tireless", "&7- Conduction", "&7- Charged", "&f", "<##03EAFF>🔮 <##82F3FF>&l ᴀʙɪʟɪᴛʏ", "&7- <##03EAFF>Static Burst", "&f", "<##03EAFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- ☄ <##03EAFF>ᴇɴᴇʀɢʏ ʙᴇᴀᴍ &4🧑🏻", "&7- ☄ <##03EAFF>ɢʀᴏᴜɴᴅ &7 &4🤼", "&f" and "&7- 🌀 <##03EAFF>Kinetic Overdrive &a🤼" with custom model data 158
				give {Bliss.Flux.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 4:
				set {Bliss.Flux.T2.%arg-1%} to prismarine shard named "<##009ac9>§lꜰʟᴜx <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aCracked Gem" and "&f&lᴇᴠᴇʀʏᴛʜɪɴɢ ɪs ᴀ ғʟᴜᴄᴛᴜᴀᴛɪᴏɴ", "<##03EAFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Flow State", "&7- Shocking Chance", "&7- Tireless", "&7- Conduction", "&7- Charged", "&f", "<##03EAFF>🔮 <##82F3FF>&l ᴀʙɪʟɪᴛʏ", "&7- <##03EAFF>Static Burst", "&f", "<##03EAFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- ☄ <##03EAFF>ᴇɴᴇʀɢʏ ʙᴇᴀᴍ &4🧑🏻", "&7- ☄ <##03EAFF>ɢʀᴏᴜɴᴅ &7 &4🤼", "&f" and "&7- 🌀 <##03EAFF>Kinetic Overdrive &a🤼" with custom model data 138
				give {Bliss.Flux.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 5:
				set {Bliss.Flux.T2.%arg-1%} to prismarine shard named "<##009ac9>§lꜰʟᴜx <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aScratched Gem" and "&f&lᴇᴠᴇʀʏᴛʜɪɴɢ ɪs ᴀ ғʟᴜᴄᴛᴜᴀᴛɪᴏɴ", "<##03EAFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Flow State", "&7- Shocking Chance", "&7- Tireless", "&7- Conduction", "&7- Charged", "&f", "<##03EAFF>🔮 <##82F3FF>&l ᴀʙɪʟɪᴛʏ", "&7- <##03EAFF>Static Burst", "&f", "<##03EAFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- ☄ <##03EAFF>ᴇɴᴇʀɢʏ ʙᴇᴀᴍ &4🧑🏻", "&7- ☄ <##03EAFF>ɢʀᴏᴜɴᴅ &7 &4🤼", "&f" and "&7- 🌀 <##03EAFF>Kinetic Overdrive &a🤼" with custom model data 118
				give {Bliss.Flux.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 6:
				set {Bliss.Flux.T2.%arg-1%} to prismarine shard named "<##009ac9>§lꜰʟᴜx <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine" and "&f&lᴇᴠᴇʀʏᴛʜɪɴɢ ɪs ᴀ ғʟᴜᴄᴛᴜᴀᴛɪᴏɴ", "<##03EAFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Flow State", "&7- Shocking Chance", "&7- Tireless", "&7- Conduction", "&7- Charged", "&f", "<##03EAFF>🔮 <##82F3FF>&l ᴀʙɪʟɪᴛʏ", "&7- <##03EAFF>Static Burst", "&f", "<##03EAFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- ☄ <##03EAFF>ᴇɴᴇʀɢʏ ʙᴇᴀᴍ &4🧑🏻", "&7- ☄ <##03EAFF>ɢʀᴏᴜɴᴅ &7 &4🤼", "&f" and "&7- 🌀 <##03EAFF>Kinetic Overdrive &a🤼" with custom model data 98
				give {Bliss.Flux.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 7:
				set {Bliss.Flux.T2.%arg-1%} to prismarine shard named "<##009ac9>§lꜰʟᴜx <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 1 Gem" and "&f&lᴇᴠᴇʀʏᴛʜɪɴɢ ɪs ᴀ ғʟᴜᴄᴛᴜᴀᴛɪᴏɴ", "<##03EAFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Flow State", "&7- Shocking Chance", "&7- Tireless", "&7- Conduction", "&7- Charged", "&f", "<##03EAFF>🔮 <##82F3FF>&l ᴀʙɪʟɪᴛʏ", "&7- <##03EAFF>Static Burst", "&f", "<##03EAFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- ☄ <##03EAFF>ᴇɴᴇʀɢʏ ʙᴇᴀᴍ &4🧑🏻", "&7- ☄ <##03EAFF>ɢʀᴏᴜɴᴅ &7 &4🤼", "&f" and "&7- 🌀 <##03EAFF>Kinetic Overdrive &a🤼" with custom model data 98
				give {Bliss.Flux.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 8:
				set {Bliss.Flux.T2.%arg-1%} to prismarine shard named "<##009ac9>§lꜰʟᴜx <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 2 Gem" and "&f&lᴇᴠᴇʀʏᴛʜɪɴɢ ɪs ᴀ ғʟᴜᴄᴛᴜᴀᴛɪᴏɴ", "<##03EAFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Flow State", "&7- Shocking Chance", "&7- Tireless", "&7- Conduction", "&7- Charged", "&f", "<##03EAFF>🔮 <##82F3FF>&l ᴀʙɪʟɪᴛʏ", "&7- <##03EAFF>Static Burst", "&f", "<##03EAFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- ☄ <##03EAFF>ᴇɴᴇʀɢʏ ʙᴇᴀᴍ &4🧑🏻", "&7- ☄ <##03EAFF>ɢʀᴏᴜɴᴅ &7 &4🤼", "&f" and "&7- 🌀 <##03EAFF>Kinetic Overdrive &a🤼" with custom model data 98
				give {Bliss.Flux.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 9:
				set {Bliss.Flux.T2.%arg-1%} to prismarine shard named "<##009ac9>§lꜰʟᴜx <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 3 Gem" and "&f&lᴇᴠᴇʀʏᴛʜɪɴɢ ɪs ᴀ ғʟᴜᴄᴛᴜᴀᴛɪᴏɴ", "<##03EAFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Flow State", "&7- Shocking Chance", "&7- Tireless", "&7- Conduction", "&7- Charged", "&f", "<##03EAFF>🔮 <##82F3FF>&l ᴀʙɪʟɪᴛʏ", "&7- <##03EAFF>Static Burst", "&f", "<##03EAFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- ☄ <##03EAFF>ᴇɴᴇʀɢʏ ʙᴇᴀᴍ &4🧑🏻", "&7- ☄ <##03EAFF>ɢʀᴏᴜɴᴅ &7 &4🤼", "&f" and "&7- 🌀 <##03EAFF>Kinetic Overdrive &a🤼" with custom model data 98
				give {Bliss.Flux.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 10:
				set {Bliss.Flux.T2.%arg-1%} to prismarine shard named "<##009ac9>§lꜰʟᴜx <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 4 Gem" and "&f&lᴇᴠᴇʀʏᴛʜɪɴɢ ɪs ᴀ ғʟᴜᴄᴛᴜᴀᴛɪᴏɴ", "<##03EAFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Flow State", "&7- Shocking Chance", "&7- Tireless", "&7- Conduction", "&7- Charged", "&f", "<##03EAFF>🔮 <##82F3FF>&l ᴀʙɪʟɪᴛʏ", "&7- <##03EAFF>Static Burst", "&f", "<##03EAFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- ☄ <##03EAFF>ᴇɴᴇʀɢʏ ʙᴇᴀᴍ &4🧑🏻", "&7- ☄ <##03EAFF>ɢʀᴏᴜɴᴅ &7 &4🤼", "&f" and "&7- 🌀 <##03EAFF>Kinetic Overdrive &a🤼" with custom model data 98
				give {Bliss.Flux.T2.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 11:
				set {Bliss.Flux.T2.%arg-1%} to prismarine shard named "<##009ac9>§lꜰʟᴜx <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 5 Gem" and "&f&lᴇᴠᴇʀʏᴛʜɪɴɢ ɪs ᴀ ғʟᴜᴄᴛᴜᴀᴛɪᴏɴ", "<##03EAFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Flow State", "&7- Shocking Chance", "&7- Tireless", "&7- Conduction", "&7- Charged", "&f", "<##03EAFF>🔮 <##82F3FF>&l ᴀʙɪʟɪᴛʏ", "&7- <##03EAFF>Static Burst", "&f", "<##03EAFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&7- ☄ <##03EAFF>ᴇɴᴇʀɢʏ ʙᴇᴀᴍ &4🧑🏻", "&7- ☄ <##03EAFF>ɢʀᴏᴜɴᴅ &7 &4🤼", "&f" and "&7- 🌀 <##03EAFF>Kinetic Overdrive &a🤼"  with custom model data 98 
				enchant {Bliss.Flux.T2.%arg-1%} with mending 1
				give {Bliss.Flux.T2.%arg-1%} to arg-1
		if arg-2 is "StrengthT1": # --- Tier 1 ---
			if {Bliss.Energy.%arg-1%} is 1:
				set {Bliss.Strength.T1.%arg-1%} to amethyst shard named "&4&lꜱᴛʀᴇɴɢᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&8Broken Gem" and "&f&lᴜꜱᴇʟᴇꜱꜱ" with custom model data 96
				give {Bliss.Strength.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 2:
				set {Bliss.Strength.T1.%arg-1%} to amethyst shard named "&4&lꜱᴛʀᴇɴɢᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&cRuined Gem" and "&f&lʜᴀᴠᴇ ᴛʜᴇ sᴛʀᴇɴɢᴛʜ ᴏғ ᴀ ᴀʀᴍʏ", "&f", "<##F10303>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- &7Strength", "&7- Enchants Sharpness", "&7- Bloodthorns", "&f", "<##F10303>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##F10303>Bounty Hunter", "&f", "<##F10303>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 89
				give {Bliss.Strength.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 3:
				set {Bliss.Strength.T1.%arg-1%} to amethyst shard named "&4&lꜱᴛʀᴇɴɢᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&eDamaged Gem" and "&f&lʜᴀᴠᴇ ᴛʜᴇ sᴛʀᴇɴɢᴛʜ ᴏғ ᴀ ᴀʀᴍʏ", "&f", "<##F10303>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- &7Strength", "&7- Enchants Sharpness", "&7- Bloodthorns", "&f", "<##F10303>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##F10303>Bounty Hunter", "&f", "<##F10303>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 69
				give {Bliss.Strength.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 4:
				set {Bliss.Strength.T1.%arg-1%} to amethyst shard named "&4&lꜱᴛʀᴇɴɢᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aCracked Gem" and "&f&lʜᴀᴠᴇ ᴛʜᴇ sᴛʀᴇɴɢᴛʜ ᴏғ ᴀ ᴀʀᴍʏ", "&f", "<##F10303>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- &7Strength", "&7- Enchants Sharpness", "&7- Bloodthorns", "&f", "<##F10303>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##F10303>Bounty Hunter", "&f", "<##F10303>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 49
				give {Bliss.Strength.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 5:
				set {Bliss.Strength.T1.%arg-1%} to amethyst shard named "&4&lꜱᴛʀᴇɴɢᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aScratched Gem" and "&f&lʜᴀᴠᴇ ᴛʜᴇ sᴛʀᴇɴɢᴛʜ ᴏғ ᴀ ᴀʀᴍʏ", "&f", "<##F10303>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- &7Strength", "&7- Enchants Sharpness", "&7- Bloodthorns", "&f", "<##F10303>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##F10303>Bounty Hunter", "&f", "<##F10303>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 29
				give {Bliss.Strength.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 6:
				set {Bliss.Strength.T1.%arg-1%} to amethyst shard named "&4&lꜱᴛʀᴇɴɢᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine Gem" and "&f&lʜᴀᴠᴇ ᴛʜᴇ sᴛʀᴇɴɢᴛʜ ᴏғ ᴀ ᴀʀᴍʏ", "&f", "<##F10303>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- &7Strength", "&7- Enchants Sharpness", "&7- Bloodthorns", "&f", "<##F10303>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##F10303>Bounty Hunter", "&f", "<##F10303>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 9
				give {Bliss.Strength.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 7:
				set {Bliss.Strength.T1.%arg-1%} to amethyst shard named "&4&lꜱᴛʀᴇɴɢᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 1 Gem" and "&f&lʜᴀᴠᴇ ᴛʜᴇ sᴛʀᴇɴɢᴛʜ ᴏғ ᴀ ᴀʀᴍʏ", "&f", "<##F10303>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- &7Strength", "&7- Enchants Sharpness", "&7- Bloodthorns", "&f", "<##F10303>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##F10303>Bounty Hunter", "&f", "<##F10303>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 9
				give {Bliss.Strength.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 8:
				set {Bliss.Strength.T1.%arg-1%} to amethyst shard named "&4&lꜱᴛʀᴇɴɢᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 2 Gem" and "&f&lʜᴀᴠᴇ ᴛʜᴇ sᴛʀᴇɴɢᴛʜ ᴏғ ᴀ ᴀʀᴍʏ", "&f", "<##F10303>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- &7Strength", "&7- Enchants Sharpness", "&7- Bloodthorns", "&f", "<##F10303>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##F10303>Bounty Hunter", "&f", "<##F10303>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 9
				give {Bliss.Strength.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 9:
				set {Bliss.Strength.T1.%arg-1%} to amethyst shard named "&4&lꜱᴛʀᴇɴɢᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 3 Gem" and "&f&lʜᴀᴠᴇ ᴛʜᴇ sᴛʀᴇɴɢᴛʜ ᴏғ ᴀ ᴀʀᴍʏ", "&f", "<##F10303>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- &7Strength", "&7- Enchants Sharpness", "&7- Bloodthorns", "&f", "<##F10303>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##F10303>Bounty Hunter", "&f", "<##F10303>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 9
				give {Bliss.Strength.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 10:
				set {Bliss.Strength.T1.%arg-1%} to amethyst shard named "&4&lꜱᴛʀᴇɴɢᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 4 Gem" and "&f&lʜᴀᴠᴇ ᴛʜᴇ sᴛʀᴇɴɢᴛʜ ᴏғ ᴀ ᴀʀᴍʏ", "&f", "<##F10303>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- &7Strength", "&7- Enchants Sharpness", "&7- Bloodthorns", "&f", "<##F10303>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##F10303>Bounty Hunter", "&f", "<##F10303>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 9
				give {Bliss.Strength.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} > 10:
				set {Bliss.Strength.T1.%arg-1%} to amethyst shard named "&4&lꜱᴛʀᴇɴɢᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 5 Gem" and "&f&lʜᴀᴠᴇ ᴛʜᴇ sᴛʀᴇɴɢᴛʜ ᴏғ ᴀ ᴀʀᴍʏ", "&f", "<##F10303>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- &7Strength", "&7- Enchants Sharpness", "&7- Bloodthorns", "&f", "<##F10303>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##F10303>Bounty Hunter", "&f", "<##F10303>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 9
				enchant {Bliss.Strength.T1.%arg-1%} with mending 1
				give {Bliss.Strength.T1.%arg-1%} to arg-1
		if arg-2 is "FireT1":
			if {Bliss.Energy.%arg-1%} is 1:
				set {Bliss.Fire.T1.%arg-1%} to amethyst shard named "§6§lꜰɪʀᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&8Broken Gem" and "&f&lᴜꜱᴇʟᴇꜱꜱ" with custom model data 96
				give {Bliss.Fire.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 2:
				set {Bliss.Fire.T1.%arg-1%} to amethyst shard named "§6§lꜰɪʀᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&cRuined Gem" and "&f&lᴍᴀɴɪᴘᴜʟᴀᴛᴇ ғɪʀᴇ", "&f", "<##FE8120>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fire Resistance", "&7- Autosmelt", "&7- Flamestrike", "&7- Fireshot", "&f ", "<##FE8120>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE8120>Crisp", "&f", "<##FE8120>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs" and "&f&lUnknown" with custom model data 81
				give {Bliss.Fire.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 3:
				set {Bliss.Fire.T1.%arg-1%} to amethyst shard named "§6§lꜰɪʀᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&eDamaged Gem" and "&f&lᴍᴀɴɪᴘᴜʟᴀᴛᴇ ғɪʀᴇ", "&f", "<##FE8120>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fire Resistance", "&7- Autosmelt", "&7- Flamestrike", "&7- Fireshot", "&f ", "<##FE8120>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE8120>Crisp", "&f", "<##FE8120>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs" and "&f&lUnknown" with custom model data 61
				give {Bliss.Fire.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 4:
				set {Bliss.Fire.T1.%arg-1%} to amethyst shard named "§6§lꜰɪʀᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aCracked Gem" and "&f&lᴍᴀɴɪᴘᴜʟᴀᴛᴇ ғɪʀᴇ", "&f", "<##FE8120>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fire Resistance", "&7- Autosmelt", "&7- Flamestrike", "&7- Fireshot", "&f ", "<##FE8120>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE8120>Crisp", "&f", "<##FE8120>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs" and "&f&lUnknown" with custom model data 41
				give {Bliss.Fire.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 5:
				set {Bliss.Fire.T1.%arg-1%} to amethyst shard named "§6§lꜰɪʀᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aScratched Gem" and "&f&lᴍᴀɴɪᴘᴜʟᴀᴛᴇ ғɪʀᴇ", "&f", "<##FE8120>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fire Resistance", "&7- Autosmelt", "&7- Flamestrike", "&7- Fireshot", "&f ", "<##FE8120>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE8120>Crisp", "&f", "<##FE8120>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs" and "&f&lUnknown"  with custom model data 21
				give {Bliss.Fire.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 6:
				set {Bliss.Fire.T1.%arg-1%} to amethyst shard named "§6§lꜰɪʀᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine Gem" and "&f&lᴍᴀɴɪᴘᴜʟᴀᴛᴇ ғɪʀᴇ", "&f", "<##FE8120>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fire Resistance", "&7- Autosmelt", "&7- Flamestrike", "&7- Fireshot", "&f ", "<##FE8120>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE8120>Crisp", "&f", "<##FE8120>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs" and "&f&lUnknown"  with custom model data 1
				give {Bliss.Fire.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 7:
				set {Bliss.Fire.T1.%arg-1%} to amethyst shard named "§6§lꜰɪʀᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 1 Gem" and "&f&lᴍᴀɴɪᴘᴜʟᴀᴛᴇ ғɪʀᴇ", "&f", "<##FE8120>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fire Resistance", "&7- Autosmelt", "&7- Flamestrike", "&7- Fireshot", "&f ", "<##FE8120>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE8120>Crisp", "&f", "<##FE8120>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs" and "&f&lUnknown" with custom model data 1
				give {Bliss.Fire.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 8:
				set {Bliss.Fire.T1.%arg-1%} to amethyst shard named "§6§lꜰɪʀᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 2 Gem" and "&f&lᴍᴀɴɪᴘᴜʟᴀᴛᴇ ғɪʀᴇ", "&f", "<##FE8120>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fire Resistance", "&7- Autosmelt", "&7- Flamestrike", "&7- Fireshot", "&f ", "<##FE8120>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE8120>Crisp", "&f", "<##FE8120>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs" and "&f&lUnknown" with custom model data 1
				give {Bliss.Fire.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 9:
				set {Bliss.Fire.T1.%arg-1%} to amethyst shard named "§6§lꜰɪʀᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 3 Gem" and "&f&lᴍᴀɴɪᴘᴜʟᴀᴛᴇ ғɪʀᴇ", "&f", "<##FE8120>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fire Resistance", "&7- Autosmelt", "&7- Flamestrike", "&7- Fireshot", "&f ", "<##FE8120>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE8120>Crisp", "&f", "<##FE8120>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs" and "&f&lUnknown" with custom model data 1
				give {Bliss.Fire.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 10:
				set {Bliss.Fire.T1.%arg-1%} to amethyst shard named "§6§lꜰɪʀᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 4 Gem" and "&f&lᴍᴀɴɪᴘᴜʟᴀᴛᴇ ғɪʀᴇ", "&f", "<##FE8120>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fire Resistance", "&7- Autosmelt", "&7- Flamestrike", "&7- Fireshot", "&f ", "<##FE8120>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE8120>Crisp", "&f", "<##FE8120>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs" and "&f&lUnknown" with custom model data 1
				give {Bliss.Fire.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} > 10:
				set {Bliss.Fire.T1.%arg-1%} to amethyst shard named "§6§lꜰɪʀᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 5 Gem" and "&f&lᴍᴀɴɪᴘᴜʟᴀᴛᴇ ғɪʀᴇ", "&f", "<##FE8120>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fire Resistance", "&7- Autosmelt", "&7- Flamestrike", "&7- Fireshot", "&f ", "<##FE8120>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE8120>Crisp", "&f", "<##FE8120>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs" and "&f&lUnknown" with custom model data 1
				enchant {Bliss.Fire.T1.%arg-1%} with mending 1
				give {Bliss.Fire.T1.%arg-1%} to arg-1
		if arg-2 is "WealthT1":
			if {Bliss.Energy.%arg-1%} is 1:
				set {Bliss.Wealth.T1.%arg-1%} to amethyst shard named "§2§lᴡᴇᴀʟᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&8Broken Gem" and "&f&lᴜꜱᴇʟᴇꜱꜱ" with custom model data 96
				give {Bliss.Wealth.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 2:
				set {Bliss.Wealth.T1.%arg-1%} to amethyst shard named "§2§lᴡᴇᴀʟᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&cRuined Gem" and "&f&lғᴜᴇʟ ᴀ ᴇᴍᴘɪʀᴇ", "&f", "<##0EC912>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Hero of the Village", "&7- Luck", "&7- Enchants Mending", "&7- Enchants Fortune", "&7- Enchants Looting", "&7- Bonus Ores", "&7- Extra EXP", "&7- Durability Chip", "&7- Double Debris", "&f", "<##0EC912>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##0EC912>Pockets", "&f", "<##0EC912>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 91
				give {Bliss.Wealth.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 3:
				set {Bliss.Wealth.T1.%arg-1%} to amethyst shard named "§2§lᴡᴇᴀʟᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&eDamaged Gem" and "&f&lғᴜᴇʟ ᴀ ᴇᴍᴘɪʀᴇ", "&f", "<##0EC912>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Hero of the Village", "&7- Luck", "&7- Enchants Mending", "&7- Enchants Fortune", "&7- Enchants Looting", "&7- Bonus Ores", "&7- Extra EXP", "&7- Durability Chip", "&7- Double Debris", "&f", "<##0EC912>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##0EC912>Pockets", "&f", "<##0EC912>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 71
				give {Bliss.Wealth.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 4:
				set {Bliss.Wealth.T1.%arg-1%} to amethyst shard named "§2§lᴡᴇᴀʟᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aCracked Gem" and "&f&lғᴜᴇʟ ᴀ ᴇᴍᴘɪʀᴇ", "&f", "<##0EC912>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Hero of the Village", "&7- Luck", "&7- Enchants Mending", "&7- Enchants Fortune", "&7- Enchants Looting", "&7- Bonus Ores", "&7- Extra EXP", "&7- Durability Chip", "&7- Double Debris", "&f", "<##0EC912>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##0EC912>Pockets", "&f", "<##0EC912>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 51
				give {Bliss.Wealth.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 5:
				set {Bliss.Wealth.T1.%arg-1%} to amethyst shard named "§2§lᴡᴇᴀʟᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aScratched Gem" and "&f&lғᴜᴇʟ ᴀ ᴇᴍᴘɪʀᴇ", "&f", "<##0EC912>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Hero of the Village", "&7- Luck", "&7- Enchants Mending", "&7- Enchants Fortune", "&7- Enchants Looting", "&7- Bonus Ores", "&7- Extra EXP", "&7- Durability Chip", "&7- Double Debris", "&f", "<##0EC912>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##0EC912>Pockets", "&f", "<##0EC912>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 31
				give {Bliss.Wealth.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 6:
				set {Bliss.Wealth.T1.%arg-1%} to amethyst shard named "§2§lᴡᴇᴀʟᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine Gem" and "&f&lғᴜᴇʟ ᴀ ᴇᴍᴘɪʀᴇ", "&f", "<##0EC912>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Hero of the Village", "&7- Luck", "&7- Enchants Mending", "&7- Enchants Fortune", "&7- Enchants Looting", "&7- Bonus Ores", "&7- Extra EXP", "&7- Durability Chip", "&7- Double Debris", "&f", "<##0EC912>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##0EC912>Pockets", "&f", "<##0EC912>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 11
				give {Bliss.Wealth.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 7:
				set {Bliss.Wealth.T1.%arg-1%} to amethyst shard named "§2§lᴡᴇᴀʟᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 1 Gem" and "&f&lғᴜᴇʟ ᴀ ᴇᴍᴘɪʀᴇ", "&f", "<##0EC912>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Hero of the Village", "&7- Luck", "&7- Enchants Mending", "&7- Enchants Fortune", "&7- Enchants Looting", "&7- Bonus Ores", "&7- Extra EXP", "&7- Durability Chip", "&7- Double Debris", "&f", "<##0EC912>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##0EC912>Pockets", "&f", "<##0EC912>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 11
				give {Bliss.Wealth.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 8:
				set {Bliss.Wealth.T1.%arg-1%} to amethyst shard named "§2§lᴡᴇᴀʟᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 2 Gem" and "&f&lғᴜᴇʟ ᴀ ᴇᴍᴘɪʀᴇ", "&f", "<##0EC912>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Hero of the Village", "&7- Luck", "&7- Enchants Mending", "&7- Enchants Fortune", "&7- Enchants Looting", "&7- Bonus Ores", "&7- Extra EXP", "&7- Durability Chip", "&7- Double Debris", "&f", "<##0EC912>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##0EC912>Pockets", "&f", "<##0EC912>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 11
				give {Bliss.Wealth.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 9:
				set {Bliss.Wealth.T1.%arg-1%} to amethyst shard named "§2§lᴡᴇᴀʟᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 3 Gem" and "&f&lғᴜᴇʟ ᴀ ᴇᴍᴘɪʀᴇ", "&f", "<##0EC912>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Hero of the Village", "&7- Luck", "&7- Enchants Mending", "&7- Enchants Fortune", "&7- Enchants Looting", "&7- Bonus Ores", "&7- Extra EXP", "&7- Durability Chip", "&7- Double Debris", "&f", "<##0EC912>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##0EC912>Pockets", "&f", "<##0EC912>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 11
				give {Bliss.Wealth.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 10:
				set {Bliss.Wealth.T1.%arg-1%} to amethyst shard named "§2§lᴡᴇᴀʟᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 4 Gem" and "&f&lғᴜᴇʟ ᴀ ᴇᴍᴘɪʀᴇ", "&f", "<##0EC912>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Hero of the Village", "&7- Luck", "&7- Enchants Mending", "&7- Enchants Fortune", "&7- Enchants Looting", "&7- Bonus Ores", "&7- Extra EXP", "&7- Durability Chip", "&7- Double Debris", "&f", "<##0EC912>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##0EC912>Pockets", "&f", "<##0EC912>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 11
				give {Bliss.Wealth.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} > 10:
				set {Bliss.Wealth.T1.%arg-1%} to amethyst shard named "§2§lᴡᴇᴀʟᴛʜ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 5 Gem" and "&f&lғᴜᴇʟ ᴀ ᴇᴍᴘɪʀᴇ", "&f", "<##0EC912>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Hero of the Village", "&7- Luck", "&7- Enchants Mending", "&7- Enchants Fortune", "&7- Enchants Looting", "&7- Bonus Ores", "&7- Extra EXP", "&7- Durability Chip", "&7- Double Debris", "&f", "<##0EC912>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##0EC912>Pockets", "&f", "<##0EC912>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 11
				enchant {Bliss.Wealth.T1.%arg-1%} with mending 1
				give {Bliss.Wealth.T1.%arg-1%} to arg-1
		if arg-2 is "SpeedT1":
			if {Bliss.Energy.%arg-1%} is 1:
				set {Bliss.Speed.T1.%arg-1%} to amethyst shard named "§e§lꜱᴘᴇᴇᴅ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&8Broken Gem" and "&f&lᴜꜱᴇʟᴇꜱꜱ" with custom model data 96
				give {Bliss.Speed.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 2:
				set {Bliss.Speed.T1.%arg-1%} to amethyst shard named "§e§lꜱᴘᴇᴇᴅ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&cRuined Gem" and "&f&lᴡᴀᴛᴄʜ ᴛʜᴇ ᴡᴏʀʟᴅ ᴀʀᴏᴜɴᴅ ʏᴏᴜ ᴛᴜʀɴ ɪɴᴛᴏ ᴀ ʙʟᴜʀ ", "&f", "&7<##FEFD17>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Speed", "&7- Dolphins grace", "&7- Enchants Efficiency", "&7- Enchants Soul Speed", "&f", "<##FEFD17>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FEFD17> Terminal Velocity", "&f", "<##FEFD17>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&f&lUnknown" with custom model data 87
				give {Bliss.Speed.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 3:
				set {Bliss.Speed.T1.%arg-1%} to amethyst shard named "§e§lꜱᴘᴇᴇᴅ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&eDamaged Gem" and "&f&lᴡᴀᴛᴄʜ ᴛʜᴇ ᴡᴏʀʟᴅ ᴀʀᴏᴜɴᴅ ʏᴏᴜ ᴛᴜʀɴ ɪɴᴛᴏ ᴀ ʙʟᴜʀ ", "&f", "&7<##FEFD17>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Speed", "&7- Dolphins grace", "&7- Enchants Efficiency", "&7- Enchants Soul Speed", "&f", "<##FEFD17>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FEFD17> Terminal Velocity", "&f", "<##FEFD17>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&f&lUnknown" with custom model data 67
				give {Bliss.Speed.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 4:
				set {Bliss.Speed.T1.%arg-1%} to amethyst shard named "§e§lꜱᴘᴇᴇᴅ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aCracked Gem" and "&f&lᴡᴀᴛᴄʜ ᴛʜᴇ ᴡᴏʀʟᴅ ᴀʀᴏᴜɴᴅ ʏᴏᴜ ᴛᴜʀɴ ɪɴᴛᴏ ᴀ ʙʟᴜʀ ", "&f", "&7<##FEFD17>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Speed", "&7- Dolphins grace", "&7- Enchants Efficiency", "&7- Enchants Soul Speed", "&f", "<##FEFD17>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FEFD17> Terminal Velocity", "&f", "<##FEFD17>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&f&lUnknown" with custom model data 47
				give {Bliss.Speed.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 5:
				set {Bliss.Speed.T1.%arg-1%} to amethyst shard named "§e§lꜱᴘᴇᴇᴅ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aScratched Gem" and "&f&lᴡᴀᴛᴄʜ ᴛʜᴇ ᴡᴏʀʟᴅ ᴀʀᴏᴜɴᴅ ʏᴏᴜ ᴛᴜʀɴ ɪɴᴛᴏ ᴀ ʙʟᴜʀ ", "&f", "&7<##FEFD17>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Speed", "&7- Dolphins grace", "&7- Enchants Efficiency", "&7- Enchants Soul Speed", "&f", "<##FEFD17>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FEFD17> Terminal Velocity", "&f", "<##FEFD17>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&f&lUnknown" with custom model data 27
				give {Bliss.Speed.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 6:
				set {Bliss.Speed.T1.%arg-1%} to amethyst shard named "§e§lꜱᴘᴇᴇᴅ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine Gem" and "&f&lᴡᴀᴛᴄʜ ᴛʜᴇ ᴡᴏʀʟᴅ ᴀʀᴏᴜɴᴅ ʏᴏᴜ ᴛᴜʀɴ ɪɴᴛᴏ ᴀ ʙʟᴜʀ ", "&f", "&7<##FEFD17>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Speed", "&7- Dolphins grace", "&7- Enchants Efficiency", "&7- Enchants Soul Speed", "&f", "<##FEFD17>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FEFD17> Terminal Velocity", "&f", "<##FEFD17>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&f&lUnknown" with custom model data 7
				give {Bliss.Speed.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 7:
				set {Bliss.Speed.T1.%arg-1%} to amethyst shard named "§e§lꜱᴘᴇᴇᴅ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 1 Gem" and "&f&lᴡᴀᴛᴄʜ ᴛʜᴇ ᴡᴏʀʟᴅ ᴀʀᴏᴜɴᴅ ʏᴏᴜ ᴛᴜʀɴ ɪɴᴛᴏ ᴀ ʙʟᴜʀ ", "&f", "&7<##FEFD17>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Speed", "&7- Dolphins grace", "&7- Enchants Efficiency", "&7- Enchants Soul Speed", "&f", "<##FEFD17>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FEFD17> Terminal Velocity", "&f", "<##FEFD17>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&f&lUnknown" with custom model data 7
				give {Bliss.Speed.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 8:
				set {Bliss.Speed.T1.%arg-1%} to amethyst shard named "§e§lꜱᴘᴇᴇᴅ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 2 Gem" and "&f&lᴡᴀᴛᴄʜ ᴛʜᴇ ᴡᴏʀʟᴅ ᴀʀᴏᴜɴᴅ ʏᴏᴜ ᴛᴜʀɴ ɪɴᴛᴏ ᴀ ʙʟᴜʀ ", "&f", "&7<##FEFD17>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Speed", "&7- Dolphins grace", "&7- Enchants Efficiency", "&7- Enchants Soul Speed", "&f", "<##FEFD17>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FEFD17> Terminal Velocity", "&f", "<##FEFD17>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&f&lUnknown" with custom model data 7
				give {Bliss.Speed.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 9:
				set {Bliss.Speed.T1.%arg-1%} to amethyst shard named "§e§lꜱᴘᴇᴇᴅ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 3 Gem" and "&f&lᴡᴀᴛᴄʜ ᴛʜᴇ ᴡᴏʀʟᴅ ᴀʀᴏᴜɴᴅ ʏᴏᴜ ᴛᴜʀɴ ɪɴᴛᴏ ᴀ ʙʟᴜʀ ", "&f", "&7<##FEFD17>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Speed", "&7- Dolphins grace", "&7- Enchants Efficiency", "&7- Enchants Soul Speed", "&f", "<##FEFD17>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FEFD17> Terminal Velocity", "&f", "<##FEFD17>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&f&lUnknown" with custom model data 7
				give {Bliss.Speed.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 10:
				set {Bliss.Speed.T1.%arg-1%} to amethyst shard named "§e§lꜱᴘᴇᴇᴅ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 4 Gem" and "&f&lᴡᴀᴛᴄʜ ᴛʜᴇ ᴡᴏʀʟᴅ ᴀʀᴏᴜɴᴅ ʏᴏᴜ ᴛᴜʀɴ ɪɴᴛᴏ ᴀ ʙʟᴜʀ ", "&f", "&7<##FEFD17>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Speed", "&7- Dolphins grace", "&7- Enchants Efficiency", "&7- Enchants Soul Speed", "&f", "<##FEFD17>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FEFD17> Terminal Velocity", "&f", "<##FEFD17>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&f&lUnknown" with custom model data 7
				give {Bliss.Speed.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} > 10:
				set {Bliss.Speed.T1.%arg-1%} to amethyst shard named "§e§lꜱᴘᴇᴇᴅ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "§bPristine + 5 Gem" and "&f&lᴡᴀᴛᴄʜ ᴛʜᴇ ᴡᴏʀʟᴅ ᴀʀᴏᴜɴᴅ ʏᴏᴜ ᴛᴜʀɴ ɪɴᴛᴏ ᴀ ʙʟᴜʀ ", "&f", "&7<##FEFD17>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Speed", "&7- Dolphins grace", "&7- Enchants Efficiency", "&7- Enchants Soul Speed", "&f", "<##FEFD17>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FEFD17> Terminal Velocity", "&f", "<##FEFD17>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&f&lUnknown" with custom model data 7
				enchant {Bliss.Speed.T1.%arg-1%} with mending 1
				give {Bliss.Speed.T1.%arg-1%} to arg-1
		if arg-2 is "PuffT1":
			if {Bliss.Energy.%arg-1%} is 1:
				set {Bliss.Puff.T1.%arg-1%} to amethyst shard named "§f§lᴘᴜꜰꜰ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&8Broken Gem" and "&f&lᴜꜱᴇʟᴇꜱꜱ" with custom model data 96
				give {Bliss.Puff.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 2:
				set {Bliss.Puff.T1.%arg-1%} to amethyst shard named "§f§lᴘᴜꜰꜰ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&cRuined Gem" and "&f&lʙᴇ ᴛʜᴇ ʙɪɢɢᴇsᴛ ʙɪʀᴅ", "&f", "&f🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fall Damage immunity", "&7- Enchants Power", "&7- Enchants Punch", "&7- Sculk Silence", "&7- Crop Tramp-Less", "&f", "&f🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- &fDouble Jump", "&f", "&f🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&f&lUnknown" with custom model data 85
				give {Bliss.Puff.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 3:
				set {Bliss.Puff.T1.%arg-1%} to amethyst shard named "§f§lᴘᴜꜰꜰ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&eDamaged Gem" and "&f&lʙᴇ ᴛʜᴇ ʙɪɢɢᴇsᴛ ʙɪʀᴅ", "&f", "&f🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fall Damage immunity", "&7- Enchants Power", "&7- Enchants Punch", "&7- Sculk Silence", "&7- Crop Tramp-Less", "&f", "&f🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- &fDouble Jump", "&f", "&f🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&f&lUnknown" with custom model data 65
				give {Bliss.Puff.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 4:
				set {Bliss.Puff.T1.%arg-1%} to amethyst shard named "§f§lᴘᴜꜰꜰ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aCracked Gem" and "&f&lʙᴇ ᴛʜᴇ ʙɪɢɢᴇsᴛ ʙɪʀᴅ", "&f", "&f🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fall Damage immunity", "&7- Enchants Power", "&7- Enchants Punch", "&7- Sculk Silence", "&7- Crop Tramp-Less", "&f", "&f🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- &fDouble Jump", "&f", "&f🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&f&lUnknown" with custom model data 45
				give {Bliss.Puff.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 5:
				set {Bliss.Puff.T1.%arg-1%} to amethyst shard named "§f§lᴘᴜꜰꜰ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aScratched Gem" and "&f&lʙᴇ ᴛʜᴇ ʙɪɢɢᴇsᴛ ʙɪʀᴅ", "&f", "&f🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fall Damage immunity", "&7- Enchants Power", "&7- Enchants Punch", "&7- Sculk Silence", "&7- Crop Tramp-Less", "&f", "&f🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- &fDouble Jump", "&f", "&f🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&f&lUnknown" with custom model data 25
				give {Bliss.Puff.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 6:
				set {Bliss.Puff.T1.%arg-1%} to amethyst shard named "§f§lᴘᴜꜰꜰ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "§bPristine" and "&f&lʙᴇ ᴛʜᴇ ʙɪɢɢᴇsᴛ ʙɪʀᴅ", "&f", "&f🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fall Damage immunity", "&7- Enchants Power", "&7- Enchants Punch", "&7- Sculk Silence", "&7- Crop Tramp-Less", "&f", "&f🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- &fDouble Jump", "&f", "&f🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&f&lUnknown" with custom model data 5
				give {Bliss.Puff.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 7:
				set {Bliss.Puff.T1.%arg-1%} to amethyst shard named "§f§lᴘᴜꜰꜰ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "§bPristine + 1 Gem" and "&f&lʙᴇ ᴛʜᴇ ʙɪɢɢᴇsᴛ ʙɪʀᴅ", "&f", "&f🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fall Damage immunity", "&7- Enchants Power", "&7- Enchants Punch", "&7- Sculk Silence", "&7- Crop Tramp-Less", "&f", "&f🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- &fDouble Jump", "&f", "&f🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&f&lUnknown" with custom model data 5
				give {Bliss.Puff.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 8:
				set {Bliss.Puff.T1.%arg-1%} to amethyst shard named "§f§lᴘᴜꜰꜰ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "§bPristine + 2 Gem" and "&f&lʙᴇ ᴛʜᴇ ʙɪɢɢᴇsᴛ ʙɪʀᴅ", "&f", "&f🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fall Damage immunity", "&7- Enchants Power", "&7- Enchants Punch", "&7- Sculk Silence", "&7- Crop Tramp-Less", "&f", "&f🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- &fDouble Jump", "&f", "&f🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&f&lUnknown" with custom model data 5
				give {Bliss.Puff.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 9:
				set {Bliss.Puff.T1.%arg-1%} to amethyst shard named "§f§lᴘᴜꜰꜰ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "§bPristine + 3 Gem" and "&f&lʙᴇ ᴛʜᴇ ʙɪɢɢᴇsᴛ ʙɪʀᴅ", "&f", "&f🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fall Damage immunity", "&7- Enchants Power", "&7- Enchants Punch", "&7- Sculk Silence", "&7- Crop Tramp-Less", "&f", "&f🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- &fDouble Jump", "&f", "&f🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&f&lUnknown" with custom model data 5
				give {Bliss.Puff.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 10:
				set {Bliss.Puff.T1.%arg-1%} to amethyst shard named "§f§lᴘᴜꜰꜰ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "§bPristine + 4 Gem" and "&f&lʙᴇ ᴛʜᴇ ʙɪɢɢᴇsᴛ ʙɪʀᴅ", "&f", "&f🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fall Damage immunity", "&7- Enchants Power", "&7- Enchants Punch", "&7- Sculk Silence", "&7- Crop Tramp-Less", "&f", "&f🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- &fDouble Jump", "&f", "&f🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&f&lUnknown" with custom model data 5
				give {Bliss.Puff.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} > 10:
				set {Bliss.Puff.T1.%arg-1%} to amethyst shard named "§f§lᴘᴜꜰꜰ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "§bPristine + 5 Gem" and "&f&lʙᴇ ᴛʜᴇ ʙɪɢɢᴇsᴛ ʙɪʀᴅ", "&f", "&f🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Fall Damage immunity", "&7- Enchants Power", "&7- Enchants Punch", "&7- Sculk Silence", "&7- Crop Tramp-Less", "&f", "&f🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- &fDouble Jump", "&f", "&f🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", and "&f&lUnknown" with custom model data 5
				enchant {Bliss.Puff.T1.%arg-1%} with mending 1
				give {Bliss.Puff.T1.%arg-1%} to arg-1
		if arg-2 is "AstraT1":
			if {Bliss.Energy.%arg-1%} is 1:
				set {Bliss.Astra.T1.%arg-1%} to amethyst shard named "§5§lᴀꜱᴛʀᴀ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&8Broken Gem" and "&f&lᴜꜱᴇʟᴇꜱꜱ" with custom model data 96
				give {Bliss.Astra.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 2:
				set {Bliss.Astra.T1.%arg-1%} to amethyst shard named "§5§lᴀꜱᴛʀᴀ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&cRuined Gem" and "&f&lᴍᴀɴᴀɢᴇ ᴛʜᴇ ᴛɪᴅᴇs ᴏғ ᴛʜᴇ ᴄᴏsᴍᴏs ", "<##A01FFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Phasing", "&7- Soul Healing", "&7- Soul Capture", "<##A01FFF>", "&7", "<##A01FFF>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##A01FFF>Dimensional Drift", "&f", "<##A01FFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 93
				give {Bliss.Astra.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 3:
				set {Bliss.Astra.T1.%arg-1%} to amethyst shard named "§5§lᴀꜱᴛʀᴀ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&eDamaged Gem" and "&f&lᴍᴀɴᴀɢᴇ ᴛʜᴇ ᴛɪᴅᴇs ᴏғ ᴛʜᴇ ᴄᴏsᴍᴏs ", "<##A01FFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Phasing", "&7- Soul Healing", "&7- Soul Capture", "<##A01FFF>", "&7", "<##A01FFF>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##A01FFF>Dimensional Drift", "&f", "<##A01FFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 73
				give {Bliss.Astra.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 4:
				set {Bliss.Astra.T1.%arg-1%} to amethyst shard named "§5§lᴀꜱᴛʀᴀ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aCracked Gem" and "&f&lᴍᴀɴᴀɢᴇ ᴛʜᴇ ᴛɪᴅᴇs ᴏғ ᴛʜᴇ ᴄᴏsᴍᴏs ", "<##A01FFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Phasing", "&7- Soul Healing", "&7- Soul Capture", "<##A01FFF>", "&7", "<##A01FFF>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##A01FFF>Dimensional Drift", "&f", "<##A01FFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 53
				give {Bliss.Astra.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 5:
				set {Bliss.Astra.T1.%arg-1%} to amethyst shard named "§5§lᴀꜱᴛʀᴀ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aScratched Gem" and "&f&lᴍᴀɴᴀɢᴇ ᴛʜᴇ ᴛɪᴅᴇs ᴏғ ᴛʜᴇ ᴄᴏsᴍᴏs ", "<##A01FFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Phasing", "&7- Soul Healing", "&7- Soul Capture", "<##A01FFF>", "&7", "<##A01FFF>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##A01FFF>Dimensional Drift", "&f", "<##A01FFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 33
				give {Bliss.Astra.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 6:
				set {Bliss.Astra.T1.%arg-1%} to amethyst shard named "§5§lᴀꜱᴛʀᴀ <##FFD773>ɢᴇᴍ" with lore "§bPristine" and "&f&lᴍᴀɴᴀɢᴇ ᴛʜᴇ ᴛɪᴅᴇs ᴏғ ᴛʜᴇ ᴄᴏsᴍᴏs ", "<##A01FFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Phasing", "&7- Soul Healing", "&7- Soul Capture", "<##A01FFF>", "&7", "<##A01FFF>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##A01FFF>Dimensional Drift", "&f", "<##A01FFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 13
				give {Bliss.Astra.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 7:
				set {Bliss.Astra.T1.%arg-1%} to amethyst shard named "§5§lᴀꜱᴛʀᴀ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "§bPristine + 1 Gem" and "&f&lᴍᴀɴᴀɢᴇ ᴛʜᴇ ᴛɪᴅᴇs ᴏғ ᴛʜᴇ ᴄᴏsᴍᴏs ", "<##A01FFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Phasing", "&7- Soul Healing", "&7- Soul Capture", "<##A01FFF>", "&7", "<##A01FFF>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##A01FFF>Dimensional Drift", "&f", "<##A01FFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 13
				give {Bliss.Astra.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 8:
				set {Bliss.Astra.T1.%arg-1%} to amethyst shard named "§5§lᴀꜱᴛʀᴀ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "§bPristine + 2 Gem" and "&f&lᴍᴀɴᴀɢᴇ ᴛʜᴇ ᴛɪᴅᴇs ᴏғ ᴛʜᴇ ᴄᴏsᴍᴏs ", "<##A01FFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Phasing", "&7- Soul Healing", "&7- Soul Capture", "<##A01FFF>", "&7", "<##A01FFF>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##A01FFF>Dimensional Drift", "&f", "<##A01FFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 13
				give {Bliss.Astra.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 9:
				set {Bliss.Astra.T1.%arg-1%} to amethyst shard named "§5§lᴀꜱᴛʀᴀ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "§bPristine + 3 Gem" and "&f&lᴍᴀɴᴀɢᴇ ᴛʜᴇ ᴛɪᴅᴇs ᴏғ ᴛʜᴇ ᴄᴏsᴍᴏs ", "<##A01FFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Phasing", "&7- Soul Healing", "&7- Soul Capture", "<##A01FFF>", "&7", "<##A01FFF>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##A01FFF>Dimensional Drift", "&f", "<##A01FFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 13
				give {Bliss.Astra.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 10:
				set {Bliss.Astra.T1.%arg-1%} to amethyst shard named "§5§lᴀꜱᴛʀᴀ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "§bPristine + 4 Gem" and "&f&lᴍᴀɴᴀɢᴇ ᴛʜᴇ ᴛɪᴅᴇs ᴏғ ᴛʜᴇ ᴄᴏsᴍᴏs ", "<##A01FFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Phasing", "&7- Soul Healing", "&7- Soul Capture", "<##A01FFF>", "&7", "<##A01FFF>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##A01FFF>Dimensional Drift", "&f", "<##A01FFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 13
				give {Bliss.Astra.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} > 10:
				set {Bliss.Astra.T1.%arg-1%} to amethyst shard named "§5§lᴀꜱᴛʀᴀ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "§bPristine + 5 Gem" and "&f&lᴍᴀɴᴀɢᴇ ᴛʜᴇ ᴛɪᴅᴇs ᴏғ ᴛʜᴇ ᴄᴏsᴍᴏs ", "<##A01FFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Phasing", "&7- Soul Healing", "&7- Soul Capture", "<##A01FFF>", "&7", "<##A01FFF>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##A01FFF>Dimensional Drift", "&f", "<##A01FFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 13
				enchant {Bliss.Astra.T1.%arg-1%} with mending 1
				give {Bliss.Astra.T1.%arg-1%} to arg-1
		if arg-2 is "LifeT1":
			if {Bliss.Energy.%arg-1%} is 1:
				set {Bliss.Life.T1.%arg-1%} to amethyst shard named "§d§lʟɪꜰᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&8Broken Gem" and "&f&lᴜꜱᴇʟᴇꜱꜱ" with custom model data 96
				give {Bliss.Life.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 2:
				set {Bliss.Life.T1.%arg-1%} to amethyst shard named "§d§lʟɪꜰᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&cRuined Gem" and "&f&lᴄᴏɴᴛʀᴏʟ ᴛʜᴇ ʙᴀʟᴀɴᴄᴇ ᴏғ ʟɪғᴇ", "&f", "<##FE04B4>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Green Thumb", "&7- Radiant Fist", "&7- Bonus Saturation", "&7- Bonus Absorption", "&7- Wither Immune", "&f", "<##FE04B4>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE04B4>Vitality Vortex", "&f", "<##FE04B4>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 83
				give {Bliss.Life.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 3:
				set {Bliss.Life.T1.%arg-1%} to amethyst shard named "§d§lʟɪꜰᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&eDamaged Gem" and "&f&lᴄᴏɴᴛʀᴏʟ ᴛʜᴇ ʙᴀʟᴀɴᴄᴇ ᴏғ ʟɪғᴇ", "&f", "<##FE04B4>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Green Thumb", "&7- Radiant Fist", "&7- Bonus Saturation", "&7- Bonus Absorption", "&7- Wither Immune", "&f", "<##FE04B4>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE04B4>Vitality Vortex", "&f", "<##FE04B4>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 63
				give {Bliss.Life.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 4:
				set {Bliss.Life.T1.%arg-1%} to amethyst shard named "§d§lʟɪꜰᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aCracked Gem" and "&f&lᴄᴏɴᴛʀᴏʟ ᴛʜᴇ ʙᴀʟᴀɴᴄᴇ ᴏғ ʟɪғᴇ", "&f", "<##FE04B4>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Green Thumb", "&7- Radiant Fist", "&7- Bonus Saturation", "&7- Bonus Absorption", "&7- Wither Immune", "&f", "<##FE04B4>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE04B4>Vitality Vortex", "&f", "<##FE04B4>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 43
				give {Bliss.Life.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 5:
				set {Bliss.Life.T1.%arg-1%} to amethyst shard named "§d§lʟɪꜰᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aScratched Gem" and "&f&lᴄᴏɴᴛʀᴏʟ ᴛʜᴇ ʙᴀʟᴀɴᴄᴇ ᴏғ ʟɪғᴇ", "&f", "<##FE04B4>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Green Thumb", "&7- Radiant Fist", "&7- Bonus Saturation", "&7- Bonus Absorption", "&7- Wither Immune", "&f", "<##FE04B4>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE04B4>Vitality Vortex", "&f", "<##FE04B4>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 23
				give {Bliss.Life.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 6:
				set {Bliss.Life.T1.%arg-1%} to amethyst shard named "§d§lʟɪꜰᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine Gem" and "&f&lᴄᴏɴᴛʀᴏʟ ᴛʜᴇ ʙᴀʟᴀɴᴄᴇ ᴏғ ʟɪғᴇ", "&f", "<##FE04B4>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Green Thumb", "&7- Radiant Fist", "&7- Bonus Saturation", "&7- Bonus Absorption", "&7- Wither Immune", "&f", "<##FE04B4>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE04B4>Vitality Vortex", "&f", "<##FE04B4>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 3
				give {Bliss.Life.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 7:
				set {Bliss.Life.T1.%arg-1%} to amethyst shard named "§d§lʟɪꜰᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 1 Gem" and "&f&lᴄᴏɴᴛʀᴏʟ ᴛʜᴇ ʙᴀʟᴀɴᴄᴇ ᴏғ ʟɪғᴇ", "&f", "<##FE04B4>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Green Thumb", "&7- Radiant Fist", "&7- Bonus Saturation", "&7- Bonus Absorption", "&7- Wither Immune", "&f", "<##FE04B4>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE04B4>Vitality Vortex", "&f", "<##FE04B4>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 3
				give {Bliss.Life.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 8:
				set {Bliss.Life.T1.%arg-1%} to amethyst shard named "§d§lʟɪꜰᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 2 Gem" and "&f&lᴄᴏɴᴛʀᴏʟ ᴛʜᴇ ʙᴀʟᴀɴᴄᴇ ᴏғ ʟɪғᴇ", "&f", "<##FE04B4>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Green Thumb", "&7- Radiant Fist", "&7- Bonus Saturation", "&7- Bonus Absorption", "&7- Wither Immune", "&f", "<##FE04B4>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE04B4>Vitality Vortex", "&f", "<##FE04B4>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 3
				give {Bliss.Life.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 9:
				set {Bliss.Life.T1.%arg-1%} to amethyst shard named "§d§lʟɪꜰᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 3 Gem" and "&f&lᴄᴏɴᴛʀᴏʟ ᴛʜᴇ ʙᴀʟᴀɴᴄᴇ ᴏғ ʟɪғᴇ", "&f", "<##FE04B4>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Green Thumb", "&7- Radiant Fist", "&7- Bonus Saturation", "&7- Bonus Absorption", "&7- Wither Immune", "&f", "<##FE04B4>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE04B4>Vitality Vortex", "&f", "<##FE04B4>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 3
				give {Bliss.Life.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 10:
				set {Bliss.Life.T1.%arg-1%} to amethyst shard named "§d§lʟɪꜰᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 4 Gem" and "&f&lᴄᴏɴᴛʀᴏʟ ᴛʜᴇ ʙᴀʟᴀɴᴄᴇ ᴏғ ʟɪғᴇ", "&f", "<##FE04B4>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Green Thumb", "&7- Radiant Fist", "&7- Bonus Saturation", "&7- Bonus Absorption", "&7- Wither Immune", "&f", "<##FE04B4>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE04B4>Vitality Vortex", "&f", "<##FE04B4>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 3
				give {Bliss.Life.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 11:
				set {Bliss.Life.T1.%arg-1%} to amethyst shard named "§d§lʟɪꜰᴇ <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 5 Gem" and "&f&lᴄᴏɴᴛʀᴏʟ ᴛʜᴇ ʙᴀʟᴀɴᴄᴇ ᴏғ ʟɪғᴇ", "&f", "<##FE04B4>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Green Thumb", "&7- Radiant Fist", "&7- Bonus Saturation", "&7- Bonus Absorption", "&7- Wither Immune", "&f", "<##FE04B4>🔮 <##82F3FF>&lᴀʙɪʟɪᴛʏ", "&7- <##FE04B4>Vitality Vortex", "&f", "<##FE04B4>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 3
				enchant {Bliss.Life.T1.%arg-1%} with mending 1
				give {Bliss.Life.T1.%arg-1%} to arg-1
		if arg-2 is "FluxT1":
			if {Bliss.Energy.%arg-1%} is 1:
				set {Bliss.Flux.T1.%arg-1%} to amethyst shard named "<##009ac9>§lꜰʟᴜx <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&8Broken Gem" and "&f&lᴜꜱᴇʟᴇꜱꜱ" with custom model data 96
				give {Bliss.Flux.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 2:
				set {Bliss.Flux.T1.%arg-1%} to amethyst shard named "<##009ac9>§lꜰʟᴜx <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&cRuined Gem" and "&f&lᴇᴠᴇʀʏᴛʜɪɴɢ ɪs ᴀ ғʟᴜᴄᴛᴜᴀᴛɪᴏɴ", "<##03EAFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Flow State", "&7- Shocking Chance", "&7- Tireless", "&7- Conduction", "&7- Charged", "&f", "<##03EAFF>🔮 <##82F3FF>&l ᴀʙɪʟɪᴛʏ", "&7- <##03EAFF>Static Burst", "&f", "<##03EAFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 105
				give {Bliss.Flux.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 3:
				set {Bliss.Flux.T1.%arg-1%} to amethyst shard named "<##009ac9>§lꜰʟᴜx <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&eDamaged Gem" and "&f&lᴇᴠᴇʀʏᴛʜɪɴɢ ɪs ᴀ ғʟᴜᴄᴛᴜᴀᴛɪᴏɴ", "<##03EAFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Flow State", "&7- Shocking Chance", "&7- Tireless", "&7- Conduction", "&7- Charged", "&f", "<##03EAFF>🔮 <##82F3FF>&l ᴀʙɪʟɪᴛʏ", "&7- <##03EAFF>Static Burst", "&f", "<##03EAFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 103
				give {Bliss.Flux.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 4:
				set {Bliss.Flux.T1.%arg-1%} to amethyst shard named "<##009ac9>§lꜰʟᴜx <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aCracked Gem" and "&f&lᴇᴠᴇʀʏᴛʜɪɴɢ ɪs ᴀ ғʟᴜᴄᴛᴜᴀᴛɪᴏɴ", "<##03EAFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Flow State", "&7- Shocking Chance", "&7- Tireless", "&7- Conduction", "&7- Charged", "&f", "<##03EAFF>🔮 <##82F3FF>&l ᴀʙɪʟɪᴛʏ", "&7- <##03EAFF>Static Burst", "&f", "<##03EAFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 101
				give {Bliss.Flux.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 5:
				set {Bliss.Flux.T1.%arg-1%} to amethyst shard named "<##009ac9>§lꜰʟᴜx <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&aScratched Gem" and "&f&lᴇᴠᴇʀʏᴛʜɪɴɢ ɪs ᴀ ғʟᴜᴄᴛᴜᴀᴛɪᴏɴ", "<##03EAFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Flow State", "&7- Shocking Chance", "&7- Tireless", "&7- Conduction", "&7- Charged", "&f", "<##03EAFF>🔮 <##82F3FF>&l ᴀʙɪʟɪᴛʏ", "&7- <##03EAFF>Static Burst", "&f", "<##03EAFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 99
				give {Bliss.Flux.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 6:
				set {Bliss.Flux.T1.%arg-1%} to amethyst shard named "<##009ac9>§lꜰʟᴜx <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine" and "&f&lᴇᴠᴇʀʏᴛʜɪɴɢ ɪs ᴀ ғʟᴜᴄᴛᴜᴀᴛɪᴏɴ", "<##03EAFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Flow State", "&7- Shocking Chance", "&7- Tireless", "&7- Conduction", "&7- Charged", "&f", "<##03EAFF>🔮 <##82F3FF>&l ᴀʙɪʟɪᴛʏ", "&7- <##03EAFF>Static Burst", "&f", "<##03EAFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 97
				give {Bliss.Flux.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 7:
				set {Bliss.Flux.T1.%arg-1%} to amethyst shard named "<##009ac9>§lꜰʟᴜx <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 1 Gem" and "&f&lᴇᴠᴇʀʏᴛʜɪɴɢ ɪs ᴀ ғʟᴜᴄᴛᴜᴀᴛɪᴏɴ", "<##03EAFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Flow State", "&7- Shocking Chance", "&7- Tireless", "&7- Conduction", "&7- Charged", "&f", "<##03EAFF>🔮 <##82F3FF>&l ᴀʙɪʟɪᴛʏ", "&7- <##03EAFF>Static Burst", "&f", "<##03EAFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 97
				give {Bliss.Flux.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 8:
				set {Bliss.Flux.T1.%arg-1%} to amethyst shard named "<##009ac9>§lꜰʟᴜx <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 2 Gem" and "&f&lᴇᴠᴇʀʏᴛʜɪɴɢ ɪs ᴀ ғʟᴜᴄᴛᴜᴀᴛɪᴏɴ", "<##03EAFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Flow State", "&7- Shocking Chance", "&7- Tireless", "&7- Conduction", "&7- Charged", "&f", "<##03EAFF>🔮 <##82F3FF>&l ᴀʙɪʟɪᴛʏ", "&7- <##03EAFF>Static Burst", "&f", "<##03EAFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 97
				give {Bliss.Flux.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 9:
				set {Bliss.Flux.T1.%arg-1%} to amethyst shard named "<##009ac9>§lꜰʟᴜx <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 3 Gem" and "&f&lᴇᴠᴇʀʏᴛʜɪɴɢ ɪs ᴀ ғʟᴜᴄᴛᴜᴀᴛɪᴏɴ", "<##03EAFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Flow State", "&7- Shocking Chance", "&7- Tireless", "&7- Conduction", "&7- Charged", "&f", "<##03EAFF>🔮 <##82F3FF>&l ᴀʙɪʟɪᴛʏ", "&7- <##03EAFF>Static Burst", "&f", "<##03EAFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 97
				give {Bliss.Flux.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 10:
				set {Bliss.Flux.T1.%arg-1%} to amethyst shard named "<##009ac9>§lꜰʟᴜx <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 4 Gem" and "&f&lᴇᴠᴇʀʏᴛʜɪɴɢ ɪs ᴀ ғʟᴜᴄᴛᴜᴀᴛɪᴏɴ", "<##03EAFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Flow State", "&7- Shocking Chance", "&7- Tireless", "&7- Conduction", "&7- Charged", "&f", "<##03EAFF>🔮 <##82F3FF>&l ᴀʙɪʟɪᴛʏ", "&7- <##03EAFF>Static Burst", "&f", "<##03EAFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown" with custom model data 97
				give {Bliss.Flux.T1.%arg-1%} to arg-1
			if {Bliss.Energy.%arg-1%} is 11:
				set {Bliss.Flux.T1.%arg-1%} to amethyst shard named "<##009ac9>§lꜰʟᴜx <##FFD773>ɢᴇᴍ" with lore "&bEnergy:" and "&bPristine + 5 Gem" and "&f&lᴇᴠᴇʀʏᴛʜɪɴɢ ɪs ᴀ ғʟᴜᴄᴛᴜᴀᴛɪᴏɴ", "<##03EAFF>🔮 <##FFE4AB>ᴘᴀssɪᴠᴇs", "&7- Flow State", "&7- Shocking Chance", "&7- Tireless", "&7- Conduction", "&7- Charged", "&f", "<##03EAFF>🔮 <##82F3FF>&l ᴀʙɪʟɪᴛʏ", "&7- <##03EAFF>Static Burst", "&f", "<##03EAFF>🔮 <##B8FFFB>&lᴘᴏᴡᴇʀs", "&f&lUnknown"  with custom model data 97
				enchant {Bliss.Flux.T1.%arg-1%} with mending 1
				give {Bliss.Flux.T1.%arg-1%} to arg-1
on tab complete for "/bliss:givegem":
	set tab completions for position 2 to "StrengthT1" and "StrengthT2" and "FireT1" and "FireT2" and "WealthT1" and "WealthT2" and "SpeedT1" and "SpeedT2" and "PuffT1" and "PuffT2" and "AstraT1" and "AstraT2" and "LifeT1" and "LifeT2" and "FluxT1" and "FluxT2"


	#[<-----------------Gem Powers----------------->]

#[<-----------------Astra----------------->]


every 5 ticks:
	loop all players:
		loop-player's gamemode is creative:
			allow flight to loop-player
		if {Bliss.Energy.%loop-player%} > 1:
			if {HeartLocked.%loop-player%} is not true: # Hearts Limits
				if {Life.Drained.Group.Time.%loop-player%} < 0:
					if {Life.Drained.Solo.Time.%loop-player%} < 0:
						if {Life.CoL.Group.Time.%loop-player%} < 0:
							set loop-player's max health to 10
						if {Life.CoL.Group.Time.%loop-player%} > 1:
							set loop-player's max health to 15
					if {Life.Drained.Solo.Time.%loop-player%} > 1:
						if {Life.CoL.Group.Time.%loop-player%} < 0:
							set loop-player's max health to 6
						if {Life.CoL.Group.Time.%loop-player%} > 1:
							set loop-player's max health to 10
				if {Life.Drained.Group.Time.%loop-player%} > 1:
					if {Life.Drained.Solo.Time.%loop-player%} < 0:
						if {Life.CoL.Group.Time.%loop-player%} < 0:
							set loop-player's max health to 8
						if {Life.CoL.Group.Time.%loop-player%} > 1:
							set loop-player's max health to 12
					if {Life.Drained.Solo.Time.%loop-player%} > 1:
						if {Life.CoL.Group.Time.%loop-player%} < 0:
							set loop-player's max health to 6
						if {Life.CoL.Group.Time.%loop-player%} > 1:
							set loop-player's max health to 10
			if {Tag..%loop-player%} < 1: # Life Cooldowns
				if {LifeMin.%loop-player%} < 1:
					if {LifeSec.%loop-player%} > 0:
						set {Life1.%loop-player%} to "%{LifeSec.%loop-player%}%s"
					if {LifeSec.%loop-player%} < 1:
						set {Life1.%loop-player%} to "&aReady!"
				if {LifeMin.%loop-player%} < 0:
					set {Life1.%loop-player%} to "&aReady!"
				if {LifeMin.%loop-player%} > 0:
					if {LifeSec.%loop-player%} < 1:
						set {Life1.%loop-player%} to "%{LifeMin.%loop-player%}%m"
					if {LifeSec.%loop-player%} > 0:
						set {Life1.%loop-player%} to "%{LifeMin.%loop-player%}%m %{LifeSec.%loop-player%}%s"
				if {LifeMin2.%loop-player%} < 1:
					if {LifeSec2.%loop-player%} > 0:
						set {Life2.%loop-player%} to "%{LifeSec2.%loop-player%}%s"
					if {LifeSec2.%loop-player%} < 1:
						set {Life2.%loop-player%} to "&aReady!"
				if {LifeMin2.%loop-player%} < 0:
					set {Life2.%loop-player%} to "&aReady!"
				if {LifeMin2.%loop-player%} > 0:
					if {LifeSec2.%loop-player%} < 1:
						set {Life2.%loop-player%} to "%{LifeMin2.%loop-player%}%m"
					if {LifeSec2.%loop-player%} > 0:
						set {Life2.%loop-player%} to "%{LifeMin2.%loop-player%}%m %{LifeSec2.%loop-player%}%s"
				if {LifeMin3.%loop-player%} < 1:
					if {LifeSec3.%loop-player%} > 0:
						set {Life3.%loop-player%} to "%{LifeSec3.%loop-player%}%s"
					if {LifeSec3.%loop-player%} < 1:
						set {Life3.%loop-player%} to "&aReady!"
				if {LifeMin3.%loop-player%} < 0:
					set {Life3.%loop-player%} to "&aReady!"
				if {LifeMin3.%loop-player%} > 0:
					if {LifeSec3.%loop-player%} < 1:
						set {Life3.%loop-player%} to "%{LifeMin3.%loop-player%}%m"
					if {LifeSec3.%loop-player%} > 0:
						set {Life3.%loop-player%} to "%{LifeMin3.%loop-player%}%m %{LifeSec3.%loop-player%}%s"
				if {LifeMin4.%loop-player%} < 1:
					if {LifeSec4.%loop-player%} > 0:
						if {LifeSec4.%loop-player%} < 31:
							set {Life4.%loop-player%} to "%{LifeSec4.%loop-player%}%s"
						if {LifeSec4.%loop-player%} > 30:
							set {Life4.%loop-player%} to "&cActive.."
					if {LifeSec4.%loop-player%} < 1:
						set {Life4.%loop-player%} to "&aReady!"
				if {LifeMin4.%loop-player%} < 0:
					set {Life4.%loop-player%} to "&aReady!"
				if {LifeMin4.%loop-player%} > 0:
					if {LifeSec4.%loop-player%} < 1:
						set {Life4.%loop-player%} to "%{LifeMin4.%loop-player%}%m"
					if {LifeSec4.%loop-player%} > 0:
						set {Life4.%loop-player%} to "%{LifeMin4.%loop-player%}%m %{LifeSec4.%loop-player%}%s"
			if loop-player's health is not 0:
				if loop-player's off hand item is {Bliss.Life.T1.%loop-player%}:
					send action bar "&d🔺 &b%{Life4.%loop-player%}%" to loop-player
					remove wither from potion effects of loop-player
					if {LifeSec.%loop-player%} < 2:
						heal the loop-player by 0.5 hearts
						set {LifeSec.%loop-player%} to 9
						set {LifeMin.%loop-player%} to 0
				if loop-player is holding {Bliss.Life.T1.%loop-player%}:
					send action bar "&d🔺 &b%{Life4.%loop-player%}%" to loop-player
					remove wither from potion effects of loop-player
					if {LifeSec.%loop-player%} < 2:
						heal the loop-player by 0.5 hearts
						set {LifeSec.%loop-player%} to 9
						set {LifeMin.%loop-player%} to 0
				if loop-player's off hand item is {Bliss.Life.T2.%loop-player%}:
					send action bar "💘 &b%{Life3.%loop-player%}% &d🔮 &b%{Life4.%loop-player%}% &d💖 &b%{Life2.%loop-player%}%" to loop-player
					remove wither from potion effects of loop-player
					if {LifeSec.%loop-player%} < 2:
						heal the loop-player by 0.5 hearts
						set {LifeSec.%loop-player%} to 6
						set {LifeMin.%loop-player%} to 0
				if loop-player's held item is {Bliss.Life.T2.%loop-player%}:
					send action bar "💘 &b%{Life3.%loop-player%}% &d🔮 &b%{Life4.%loop-player%}% &d💖 &b%{Life2.%loop-player%}%" to loop-player
					remove wither from potion effects of loop-player 
					# Animal Breeding Function
					#spawn armor stand at player with nbt from "{Tags:[""%player%""],Invisible:1b}"
						#set {life.armorstand.%player%} to last spawned armor stand
					#if {life.armorstand.%loop-player%} is not false:
						#teleport {life.armorstand.%loop-player%} to location and 0.2 metres below loop-player
					if {LifeSec.%loop-player%} < 2:
						heal the loop-player by 0.5 hearts
						set {LifeSec.%loop-player%} to 6
						set {LifeMin.%loop-player%} to 0
				if {FluxMin.%loop-player%} < 1: # Flux Cooldowns
					if {FluxSec.%loop-player%} > 0:
						set {Flux1.%loop-player%} to "%{FluxSec.%loop-player%}%s"
					if {FluxSec.%loop-player%} < 1:
						set {Flux1.%loop-player%} to "%{damage::%loop-player's uuid%}%"
				if {FluxMin.%loop-player%} < 0:
					set {Flux1.%loop-player%} to "%{damage::%loop-player's uuid%}%"
				if {FluxMin.%loop-player%} > 0:
					if {FluxSec.%loop-player%} < 1:
						set {Flux1.%loop-player%} to "%{FluxMin.%loop-player%}%m"
					if {FluxSec.%loop-player%} > 0:
						set {Flux1.%loop-player%} to "%{FluxMin.%loop-player%}%m %{FluxSec.%loop-player%}%s"
				if {FluxMin2.%loop-player%} < 1:
					if {FluxSec2.%loop-player%} > 0:
						set {Flux2.%loop-player%} to "%{FluxSec2.%loop-player%}%s"
					if {FluxSec2.%loop-player%} < 1:
						set {Flux2.%loop-player%} to "&aReady!"
				if {FluxMin2.%loop-player%} < 0:
					set {Flux2.%loop-player%} to "&aReady!"
				if {FluxMin2.%loop-player%} > 0:
					if {FluxSec2.%loop-player%} < 1:
						set {Flux2.%loop-player%} to "%{FluxMin2.%loop-player%}%m"
					if {FluxSec2.%loop-player%} > 0:
						set {Flux2.%loop-player%} to "%{FluxMin2.%loop-player%}%m %{FluxSec2.%loop-player%}%s"
				if {FluxMin3.%loop-player%} < 1:
					if {FluxSec3.%loop-player%} > 0:
						set {Flux3.%loop-player%} to "%{FluxSec3.%loop-player%}%s"
					if {FluxSec3.%loop-player%} < 1:
						set {Flux3.%loop-player%} to "&aReady!"
				if {FluxMin3.%loop-player%} < 0:
					set {Flux3.%loop-player%} to "&aReady!"
				if {FluxMin3.%loop-player%} > 0:
					if {FluxSec3.%loop-player%} < 1:
						set {Flux3.%loop-player%} to "%{FluxMin3.%loop-player%}%m"
					if {FluxSec3.%loop-player%} > 0:
						set {Flux3.%loop-player%} to "%{FluxMin3.%loop-player%}%m %{FluxSec3.%loop-player%}%s"
				if loop-player's off hand item is {Bliss.Flux.T1.%loop-player%}:
					send action bar "<##009ac9>🔺 &b%Format({Flux1.%loop-player%})%" to loop-player
					if {Tag..%loop-player%} < 1:
						if {Bliss.Energy.%loop-player%} > 1:
							if loop-player has potion slowness:
								remove slowness from potion effects of loop-player
							if loop-player has potion hunger:
								remove hunger from potion effects of loop-player
							if loop-player has potion effect weakness:
								remove weakness from potion effects of loop-player
				if loop-player is holding {Bliss.Flux.T1.%loop-player%}:
					send action bar "<##009ac9>🔺 &b%Format({Flux1.%loop-player%})%" to loop-player
					if {Tag..%loop-player%} < 1:
						if {Bliss.Energy.%loop-player%} > 1:
							if loop-player has potion slowness:
								remove slowness from potion effects of loop-player
							if loop-player has potion hunger:
								remove hunger from potion effects of loop-player
							if loop-player has potion effect weakness:
								remove weakness from potion effects of loop-player
				if loop-player is holding {Bliss.Flux.T2.%loop-player%}:
					send action bar "&7☄ &b%{Flux2.%loop-player%}%  <##5ED7FF>🔮 &b%Format({Flux1.%loop-player%})% <##5ED7FF>🔮 &b%Format({-fluxKinetic::%loop-player's uuid%})% &7🌀 &b%{Flux3.%loop-player%}%" to loop-player
					if {Tag..%loop-player%} < 1:
						if {Bliss.Energy.%loop-player%} > 1:
							if loop-player has potion slowness:
								remove slowness from potion effects of loop-player
							if loop-player has potion hunger:
								remove hunger from potion effects of loop-player
							if loop-player has potion effect weakness:
								remove weakness from potion effects of loop-player
				if loop-player's off hand item is {Bliss.Flux.T2.%loop-player%}:
					send action bar "&7☄ &b%{Flux2.%loop-player%}%  <##5ED7FF>🔮 &b%Format({Flux1.%loop-player%})% <##5ED7FF>🔮 &b%Format({-fluxKinetic::%loop-player's uuid%})% &7🌀 &b%{Flux3.%loop-player%}%" to loop-player
					if {Tag..%loop-player%} < 1:
						if {Bliss.Energy.%loop-player%} > 1:
							if loop-player has potion slowness:
								remove slowness from potion effects of loop-player
							if loop-player has potion hunger:
								remove hunger from potion effects of loop-player
							if loop-player has potion effect weakness:
								remove weakness from potion effects of loop-player
				if {WealthMin.%loop-player%} < 1: # Wealth Cooldowns
					if {WealthSec.%loop-player%} > 0:
						set {Wealth1.%loop-player%} to "%{WealthSec.%loop-player%}%s"
					if {WealthSec.%loop-player%} < 1:
						set {Wealth1.%loop-player%} to "&aReady!"
				if {WealthMin.%loop-player%} < 0:
					set {Wealth1.%loop-player%} to "&aReady!"
				if {WealthMin.%loop-player%} > 0:
					if {WealthSec.%loop-player%} < 1:
						set {Wealth1.%loop-player%} to "%{WealthMin.%loop-player%}%m"
					if {WealthSec.%loop-player%} > 0:
						set {Wealth1.%loop-player%} to "%{WealthMin.%loop-player%}%m %{WealthSec.%loop-player%}%s"
				if {WealthMin2.%loop-player%} < 1:
					if {WealthSec2.%loop-player%} > 0:
						set {Wealth2.%loop-player%} to "%{WealthSec2.%loop-player%}%s"
					if {WealthSec2.%loop-player%} < 1:
						set {Wealth2.%loop-player%} to "&aReady!"
				if {WealthMin2.%loop-player%} < 0:
					set {Wealth2.%loop-player%} to "&aReady!"
				if {WealthMin2.%loop-player%} > 0:
					if {WealthSec2.%loop-player%} < 1:
						set {Wealth2.%loop-player%} to "%{WealthMin2.%loop-player%}%m"
					if {WealthSec2.%loop-player%} > 0:
						set {Wealth2.%loop-player%} to "%{WealthMin2.%loop-player%}%m %{WealthSec2.%loop-player%}%s"
				if {WealthMin3.%loop-player%} < 1:
					if {WealthSec3.%loop-player%} > 0:
						set {Wealth3.%loop-player%} to "%{WealthSec3.%loop-player%}%s"
					if {WealthSec3.%loop-player%} < 1:
						set {Wealth3.%loop-player%} to "&aReady!"
				if {WealthMin3.%loop-player%} < 0:
					set {Wealth3.%loop-player%} to "&aReady!"
				if {WealthMin3.%loop-player%} > 0:
					if {WealthSec3.%loop-player%} < 1:
						set {Wealth3.%loop-player%} to "%{WealthMin3.%loop-player%}%m"
					if {WealthSec3.%loop-player%} > 0:
						set {Wealth3.%loop-player%} to "%{WealthMin3.%loop-player%}%m %{WealthSec3.%loop-player%}%s"
				if loop-player's off hand item is {Bliss.Wealth.T1.%loop-player%}:
					send action bar "&2🔺" to loop-player
					apply hero of the village 1 without particles whilst hiding the potion icon to loop-player for 60 seconds replacing the existing effect
					apply luck 1 without particles whilst hiding the potion icon to loop-player for 60 seconds replacing the existing effect
				if loop-player is holding {Bliss.Wealth.T1.%loop-player%}:
					send action bar "&2🔺" to loop-player
					apply hero of the village 1 without particles whilst hiding the potion icon to loop-player for 60 seconds replacing the existing effect
					apply luck 1 without particles whilst hiding the potion icon to loop-player for 60 seconds replacing the existing effect
				if loop-player's off hand item is {Bliss.Wealth.T2.%loop-player%}:
					send action bar "&a🍀 &b%{Wealth3.%loop-player%}%  &2🔮 &a💸 &b%{Wealth2.%loop-player%}%" to loop-player
					apply hero of the village 2 without particles whilst hiding the potion icon to loop-player for 60 seconds replacing the existing effect
					apply luck 2 without particles whilst hiding the potion icon to loop-player for 60 seconds replacing the existing effect
				if loop-player's held item is {Bliss.Wealth.T2.%loop-player%}:
					send action bar "&a🍀 &b%{Wealth3.%loop-player%}%  &2🔮 &a💸 &b%{Wealth2.%loop-player%}%" to loop-player
					apply hero of the village 2 without particles whilst hiding the potion icon to loop-player for 60 seconds replacing the existing effect
					apply luck 2 without particles whilst hiding the potion icon to loop-player for 60 seconds replacing the existing effect
				if loop-player is holding {Bliss.Wealth.T1.%loop-player%}:
					if {wealth.cooldown.%loop-player%} is false:
						#send "&2🔺 &bAuto Enchanting" to loop-player
						loop all items in loop-player's inventory:
							loop-item is not enchanted with fortune:
								loop-item is not enchanted with silk touch:
									if loop-item is any pickaxe:
										enchant the loop-item with fortune 1
									if loop-item is any axe:
										enchant the loop-item with fortune 1
							loop-item is not enchanted with looting:
								if loop-item is any sword:
									enchant the loop-item with looting 1
						set {WealthMin.%loop-player%} to 0
						set {WealthSec.%loop-player%} to 59
						set {wealth.cooldown.%loop-player%} to true
				if loop-player is holding {Bliss.Wealth.T2.%loop-player%}:
					if {wealth.cooldown.%loop-player%} is false:
						#send "&2🔮 &bAuto Enchanting" to loop-player
						loop all items in loop-player's inventory:
							if loop-item is not enchanted with fortune:
								if loop-item is not enchanted with silk touch:
									if loop-item is any pickaxe:
										enchant the loop-item with fortune 3
									if loop-item is any axe:
										enchant the loop-item with fortune 3
							if loop-item is any sword:
								enchant the loop-item with looting 3
							if loop-item is not enchanted with mending:
								if loop-item is any sword:
									enchant the loop-item with mending 1
								if loop-item is any pickaxe:
									enchant the loop-item with mending 1
								if loop-item is any axe:
									enchant the loop-item with mending 1
								if loop-item is any helmet:
									enchant the loop-item with mending 1
								if loop-item is any chestplate:
									enchant the loop-item with mending 1
								if loop-item is any leggings:
									enchant the loop-item with mending 1
								if loop-item is any boots:
									enchant the loop-item with mending 1
								if loop-item is any shovel:
									enchant the loop-item with mending 1
								if loop-item is any hoe:
									enchant the loop-item with mending 1
						set {WealthMin.%loop-player%} to 0
						set {WealthSec.%loop-player%} to 59
						set {wealth.cooldown.%loop-player%} to true
				if {StrengthMin.%loop-player%} < 1: # Strength Cooldowns
					if {StrengthSec.%loop-player%} > 0:
						set {Strength1.%loop-player%} to "%{StrengthSec.%loop-player%}%s"
					if {StrengthSec.%loop-player%} < 1:
						set {Strength1.%loop-player%} to "&aReady!"
				if {StrengthMin.%loop-player%} < 0:
					set {Strength1.%loop-player%} to "&aReady!"
				if {StrengthMin.%loop-player%} > 0:
					if {StrengthSec.%loop-player%} < 1:
						set {Strength1.%loop-player%} to "%{StrengthMin.%loop-player%}%m"
					if {StrengthSec.%loop-player%} > 0:
						set {Strength1.%loop-player%} to "%{StrengthMin.%loop-player%}%m %{StrengthSec.%loop-player%}%s"
				if {StrengthMin2.%loop-player%} < 1:
					if {StrengthSec2.%loop-player%} > 0:
						set {Strength2.%loop-player%} to "%{StrengthSec2.%loop-player%}%s"
					if {StrengthSec2.%loop-player%} < 1:
						set {Strength2.%loop-player%} to "&aReady!"
				if {StrengthMin2.%loop-player%} < 0:
					set {Strength2.%loop-player%} to "&aReady!"
				if {StrengthMin2.%loop-player%} > 0:
					if {StrengthSec2.%loop-player%} < 1:
						set {Strength2.%loop-player%} to "%{StrengthMin2.%loop-player%}%m"
					if {StrengthSec2.%loop-player%} > 0:
						set {Strength2.%loop-player%} to "%{StrengthMin2.%loop-player%}%m %{StrengthSec2.%loop-player%}%s"
				if {StrengthMin3.%loop-player%} < 1:
					if {StrengthSec3.%loop-player%} > 0:
						set {Strength3.%loop-player%} to "%{StrengthSec3.%loop-player%}%s"
					if {StrengthSec3.%loop-player%} < 1:
						set {Strength3.%loop-player%} to "&aReady!"
				if {StrengthMin3.%loop-player%} < 0:
					set {Strength3.%loop-player%} to "&aReady!"
				if {StrengthMin3.%loop-player%} > 0:
					if {StrengthSec3.%loop-player%} < 1:
						set {Strength3.%loop-player%} to "%{StrengthMin3.%loop-player%}%m"
					if {StrengthSec3.%loop-player%} > 0:
						set {Strength3.%loop-player%} to "%{StrengthMin3.%loop-player%}%m %{StrengthSec3.%loop-player%}%s"
				if {StrengthMin4.%loop-player%} < 1:
					if {StrengthSec4.%loop-player%} > 0:
						set {Strength4.%loop-player%} to "%{StrengthSec4.%loop-player%}%s"
					if {StrengthSec4.%loop-player%} < 1:
						set {Strength4.%loop-player%} to "&aReady!"
				if {StrengthMin4.%loop-player%} < 0:
					set {Strength4.%loop-player%} to "&aReady!"
				if {StrengthMin4.%loop-player%} > 0:
					if {StrengthSec4.%loop-player%} < 1:
						set {Strength4.%loop-player%} to "%{StrengthMin4.%loop-player%}%m"
					if {StrengthSec4.%loop-player%} > 0:
						set {Strength4.%loop-player%} to "%{StrengthMin4.%loop-player%}%m %{StrengthSec4.%loop-player%}%s"
				if loop-player's off hand item is {Bliss.Strength.T1.%loop-player%}:
					if {strength.cooldown.%loop-player%} is false:
						send action bar "&4🔺 %{Strength4.%loop-player%}%" to loop-player
					if {strength.cooldown.%loop-player%} is true:
						send action bar "&4🔺 %{Strength4.%loop-player%}%" to loop-player
					apply strength 1 without particles whilst hiding the potion icon to loop-player for 2 seconds replacing the existing effect
				if loop-player is holding {Bliss.Strength.T1.%loop-player%}:
					if {strength.cooldown.%loop-player%} is false:
						send action bar "&4🔺%{Strength4.%loop-player%}%" to loop-player
					if {strength.cooldown.%loop-player%} is true:
						send action bar "&4🔺%{Strength4.%loop-player%}%" to loop-player
					apply strength 1 without particles whilst hiding the potion icon to loop-player for 2 seconds replacing the existing effect
				if loop-player is holding {Bliss.Strength.T2.%loop-player%}:
					apply strength 1 without particles whilst hiding the potion icon to loop-player for 2 seconds replacing the existing effect
					send action bar "&4🤺 &b%{Strength2.%loop-player%}%  &4🔮 %{Strength4.%loop-player%}% &4⚔ &b%{Strength3.%loop-player%}%" to loop-player
				if loop-player's off hand item is {Bliss.Strength.T2.%loop-player%}:
					apply strength 1 without particles whilst hiding the potion icon to loop-player for 2 seconds replacing the existing effect
					send action bar "&4🤺 &b%{Strength2.%loop-player%}%  &4🔮 %{Strength4.%loop-player%}% &4⚔ &b%{Strength3.%loop-player%}%" to loop-player
				if loop-player's off hand item is {Bliss.Strength.T1.%loop-player%}:
					if {strength.cooldown.%loop-player%} is false:
						#send "&4🔺 &bAuto Enchanting" to loop-player
						loop all items in loop-player's inventory:
							if loop-item is any sword:
								loop-item is not enchanted with sharpness:
									enchant the loop-item with sharpness 2
							if loop-item is any axe:
								loop-item is not enchanted with sharpness:
									enchant the loop-item with sharpness 2
						set {StrengthMin.%loop-player%} to 0
						set {StrengthSec.%loop-player%} to 59
						set {strength.cooldown.%loop-player%} to true
				if loop-player's off hand item is {Bliss.Strength.T2.%loop-player%}:
					if {strength.cooldown.%loop-player%} is false:
						#send "&4🔮 &bAuto Enchanting" to loop-player
						loop all items in loop-player's inventory:
							if loop-item is any sword:
								enchant the loop-item with sharpness 5
							if loop-item is any axe:
								enchant the loop-item with sharpness 5
						set {StrengthMin.%loop-player%} to 0
						set {StrengthSec.%loop-player%} to 59
						set {strength.cooldown.%loop-player%} to true
				if loop-player is holding {Bliss.Strength.T1.%loop-player%}:
					if {strength.cooldown.%loop-player%} is false:
						#send "&4🔺 &bAuto Enchanting" to loop-player
						loop all items in loop-player's inventory:
							if loop-item is any sword:
								loop-item is not enchanted with sharpness:
									enchant the loop-item with sharpness 2
							if loop-item is any axe:
								loop-item is not enchanted with sharpness:
									enchant the loop-item with sharpness 2
						set {StrengthMin.%loop-player%} to 0
						set {StrengthSec.%loop-player%} to 59
						set {strength.cooldown.%loop-player%} to true
				if loop-player is holding {Bliss.Strength.T2.%loop-player%}:
					if {strength.cooldown.%loop-player%} is false:
						#send "&4🔮 &bAuto Enchanting" to loop-player
						loop all items in loop-player's inventory:
							if loop-item is any sword:
								enchant the loop-item with sharpness 5
							if loop-item is any axe:
								enchant the loop-item with sharpness 5
						set {StrengthMin.%loop-player%} to 0
						set {StrengthSec.%loop-player%} to 59
						set {strength.cooldown.%loop-player%} to true
				if {SpeedMin.%loop-player%} < 1: # Speed Cooldowns
					if {SpeedSec.%loop-player%} > 0:
						set {Speed1.%loop-player%} to "%{SpeedSec.%loop-player%}%s"
					if {SpeedSec.%loop-player%} < 1:
						set {Speed1.%loop-player%} to "&aReady!"
				if {SpeedMin.%loop-player%} < 0:
					set {Speed1.%loop-player%} to "&aReady!"
				if {SpeedMin.%loop-player%} > 0:
					if {SpeedSec.%loop-player%} < 1:
						set {Speed1.%loop-player%} to "%{SpeedMin.%loop-player%}%m"
					if {SpeedSec.%loop-player%} > 0:
						set {Speed1.%loop-player%} to "%{SpeedMin.%loop-player%}%m %{SpeedSec.%loop-player%}%s"
				if {SpeedMin2.%loop-player%} < 1:
					if {SpeedSec2.%loop-player%} > 0:
						set {Speed2.%loop-player%} to "%{SpeedSec2.%loop-player%}%s"
					if {SpeedSec2.%loop-player%} < 1:
						set {Speed2.%loop-player%} to "&aReady!"
				if {SpeedMin2.%loop-player%} < 0:
					set {Speed2.%loop-player%} to "&aReady!"
				if {SpeedMin2.%loop-player%} > 0:
					if {SpeedSec2.%loop-player%} < 1:
						set {Speed2.%loop-player%} to "%{SpeedMin2.%loop-player%}%m"
					if {SpeedSec2.%loop-player%} > 0:
						set {Speed2.%loop-player%} to "%{SpeedMin2.%loop-player%}%m %{SpeedSec2.%loop-player%}%s"
				if {SpeedMin3.%loop-player%} < 1:
					if {SpeedSec3.%loop-player%} > 0:
						set {Speed3.%loop-player%} to "%{SpeedSec3.%loop-player%}%s"
					if {SpeedSec3.%loop-player%} < 1:
						set {Speed3.%loop-player%} to "&aReady!"
				if {SpeedMin3.%loop-player%} < 0:
					set {Speed3.%loop-player%} to "&aReady!"
				if {SpeedMin3.%loop-player%} > 0:
					if {SpeedSec3.%loop-player%} < 1:
						set {Speed3.%loop-player%} to "%{SpeedMin3.%loop-player%}%m"
					if {SpeedSec3.%loop-player%} > 0:
						set {Speed3.%loop-player%} to "%{SpeedMin3.%loop-player%}%m %{SpeedSec3.%loop-player%}%s"
				if {SpeedMin4.%loop-player%} < 1:
					if {SpeedSec4.%loop-player%} > 0:
						if {SpeedSec4.%loop-player%} > 30:
							set {Speed4.%loop-player%} to "&cActive.."
						if {SpeedSec4.%loop-player%} < 31:
							set {Speed4.%loop-player%} to "%{SpeedSec4.%loop-player%}%s"
					if {SpeedSec4.%loop-player%} < 1:
						set {Speed4.%loop-player%} to "&aReady!"
				if {SpeedMin4.%loop-player%} < 0:
					set {Speed4.%loop-player%} to "&aReady!"
				if {SpeedMin4.%loop-player%} > 0:
					if {SpeedSec4.%loop-player%} < 1:
						set {Speed4.%loop-player%} to "%{SpeedMin4.%loop-player%}%m"
					if {SpeedSec4.%loop-player%} > 0:
						set {Speed4.%loop-player%} to "%{SpeedMin4.%loop-player%}%m %{SpeedSec4.%loop-player%}%s"
				if loop-player's off hand item is {Bliss.Speed.T1.%loop-player%}:
					blissSpeedAutoEnchantT1(loop-player)
					blissSpeedActionBarT1(loop-player)
				if loop-player is holding {Bliss.Speed.T1.%loop-player%}:
					blissSpeedAutoEnchantT1(loop-player)
					blissSpeedActionBarT1(loop-player)
				if loop-player's off hand item is {Bliss.Speed.T2.%loop-player%}:
					blissSpeedAutoEnchantT2(loop-player)
					blissSpeedActionBarT2(loop-player)
				if loop-player is holding {Bliss.Speed.T2.%loop-player%}:
					blissSpeedAutoEnchantT2(loop-player)
					blissSpeedActionBarT2(loop-player)
				if {PuffMin.%loop-player%} < 1: # Puff Cooldowns
					if {PuffSec.%loop-player%} > 0:
						set {Puff1.%loop-player%} to "%{PuffSec.%loop-player%}%s"
					if {PuffSec.%loop-player%} < 1:
						set {Puff1.%loop-player%} to "&aReady!"
				if {PuffMin.%loop-player%} < 0:
					set {Puff1.%loop-player%} to "&aReady!"
				if {PuffMin.%loop-player%} > 0:
					if {PuffSec.%loop-player%} < 1:
						set {Puff1.%loop-player%} to "%{PuffMin.%loop-player%}%m"
					if {PuffSec.%loop-player%} > 0:
						set {Puff1.%loop-player%} to "%{PuffMin.%loop-player%}%m %{PuffSec.%loop-player%}%s"
				if {PuffMin2.%loop-player%} < 1:
					if {PuffSec2.%loop-player%} > 0:
						set {Puff2.%loop-player%} to "%{PuffSec2.%loop-player%}%s"
					if {PuffSec2.%loop-player%} < 1:
						set {Puff2.%loop-player%} to "&aReady!"
				if {PuffMin2.%loop-player%} < 0:
					set {Puff2.%loop-player%} to "&aReady!"
				if {PuffMin2.%loop-player%} > 0:
					if {PuffSec2.%loop-player%} < 1:
						set {Puff2.%loop-player%} to "%{PuffMin2.%loop-player%}%m"
					if {PuffSec2.%loop-player%} > 0:
						set {Puff2.%loop-player%} to "%{PuffMin2.%loop-player%}%m %{PuffSec2.%loop-player%}%s"
				if {PuffMin3.%loop-player%} < 1:
					if {PuffSec3.%loop-player%} > 0:
						set {Puff3.%loop-player%} to "%{PuffSec3.%loop-player%}%s"
					if {PuffSec3.%loop-player%} < 1:
						set {Puff3.%loop-player%} to "&aReady!"
				if {PuffMin3.%loop-player%} < 0:
					set {Puff3.%loop-player%} to "&aReady!"
				if {PuffMin3.%loop-player%} > 0:
					if {PuffSec3.%loop-player%} < 1:
						set {Puff3.%loop-player%} to "%{PuffMin3.%loop-player%}%m"
					if {PuffSec3.%loop-player%} > 0:
						set {Puff3.%loop-player%} to "%{PuffMin3.%loop-player%}%m %{PuffSec3.%loop-player%}%s"
				if {PuffDJSec.%loop-player%} > 0:
					if {PuffDJSec.%loop-player%} > 5:
						set {Puff4.%loop-player%} to "&cActive.."
					if {PuffDJSec.%loop-player%} < 6:
						set {Puff4.%loop-player%} to "%{PuffDJSec.%loop-player%}%s"
				if {PuffDJSec.%loop-player%} < 1:
					set {Puff4.%loop-player%} to "&aReady!"
				if loop-player's off hand item is {Bliss.Puff.T1.%loop-player%}:
					blissPuffAutoEnchantT1(loop-player)
					blissPuffActionBarT1(loop-player)
					if {puffDJ.cooldown.%loop-player%} is not true:
						allow flight to loop-player
				if loop-player is holding {Bliss.Puff.T1.%loop-player%}:
					blissPuffAutoEnchantT1(loop-player)
					blissPuffActionBarT1(loop-player)
					if {puffDJ.cooldown.%loop-player%} is not true:
						allow flight to loop-player
				if loop-player's off hand item is {Bliss.Puff.T2.%loop-player%}:
					blissPuffAutoEnchantT2(loop-player)
					blissPuffActionBarT2(loop-player)
					if {puffDJ.cooldown.%loop-player%} is not true:
						allow flight to loop-player
				if loop-player is holding {Bliss.Puff.T2.%loop-player%}:
					blissPuffAutoEnchantT2(loop-player)
					blissPuffActionBarT2(loop-player)
					if {puffDJ.cooldown.%loop-player%} is not true:
						allow flight to loop-player
			if {fireball.%loop-player%} > 0: # Fireball Particles
				set {_bliss.fireball.charge::circle} to a disc of radius 0.5
				set particle of {_bliss.fireball.charge::*} to dust particle using dustOption(orange, 1.5) with force
				draw shapes {_bliss.fireball.charge::circle} at loop-player's location

			if {Bliss.Projection.%loop-player%} is true: # Astra Projection Particles
				set {_astra.ghost.idk.%loop-player%} to location 1.2 metres above and 0.5 metres forward and 0.5 metres left loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
				set {_astra.ghost.idk.%loop-player%} to location 1.2 metres above and -0.5 metres forward and -0.5 metres left loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
				set {_astra.ghost.idk.%loop-player%} to location 1.2 metres above and -0.5 metres forward and 0.5 metres left loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
				set {_astra.ghost.idk.%loop-player%} to location 1.2 metres above and 0.5 metres forward and -0.5 metres left loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
				set {_astra.ghost.idk.%loop-player%} to location 0.4 metres above and 0.3 metres forward and 0.3 metres left loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
				set {_astra.ghost.idk.%loop-player%} to location 0.4 metres above and -0.3 metres forward and -0.3 metres left loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
				set {_astra.ghost.idk.%loop-player%} to location 0.4 metres above and -0.3 metres forward and 0.3 metres left loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
				set {_astra.ghost.idk.%loop-player%} to location 0.4 metres above and 0.3 metres forward and -0.3 metres left loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
				set {_astra.ghost.idk.%loop-player%} to location 1.6 metres above and 0.3 metres forward and 0.3 metres left loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
				set {_astra.ghost.idk.%loop-player%} to location 1.6 metres above and -0.3 metres forward and -0.3 metres left loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
				set {_astra.ghost.idk.%loop-player%} to location 1.6 metres above and -0.3 metres forward and 0.3 metres left loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
				set {_astra.ghost.idk.%loop-player%} to location 1.6 metres above and 0.3 metres forward and -0.3 metres left loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
				set {_astra.ghost.idk.%loop-player%} to location at loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
			if {Bliss.Ghost.IDK.%loop-player%} is true:
				set {_astra.ghost.idk.%loop-player%} to location 1.2 metres above and 0.5 metres forward and 0.5 metres left loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
				set {_astra.ghost.idk.%loop-player%} to location 1.2 metres above and -0.5 metres forward and -0.5 metres left loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
				set {_astra.ghost.idk.%loop-player%} to location 1.2 metres above and -0.5 metres forward and 0.5 metres left loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
				set {_astra.ghost.idk.%loop-player%} to location 1.2 metres above and 0.5 metres forward and -0.5 metres left loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
				set {_astra.ghost.idk.%loop-player%} to location 0.4 metres above and 0.3 metres forward and 0.3 metres left loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
				set {_astra.ghost.idk.%loop-player%} to location 0.4 metres above and -0.3 metres forward and -0.3 metres left loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
				set {_astra.ghost.idk.%loop-player%} to location 0.4 metres above and -0.3 metres forward and 0.3 metres left loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
				set {_astra.ghost.idk.%loop-player%} to location 0.4 metres above and 0.3 metres forward and -0.3 metres left loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
				set {_astra.ghost.idk.%loop-player%} to location 1.6 metres above and 0.3 metres forward and 0.3 metres left loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
				set {_astra.ghost.idk.%loop-player%} to location 1.6 metres above and -0.3 metres forward and -0.3 metres left loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
				set {_astra.ghost.idk.%loop-player%} to location 1.6 metres above and -0.3 metres forward and 0.3 metres left loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
				set {_astra.ghost.idk.%loop-player%} to location 1.6 metres above and 0.3 metres forward and -0.3 metres left loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
				set {_astra.ghost.idk.%loop-player%} to location at loop-player
				draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%loop-player%} with extra 0 with force
				wait 1 tick
			if {ChadStrength..%loop-player%} is true:
				if {Test.Double.%loop-player%} is 0:
					set {_strength.dot.1.%loop-player%} to location 1.2 metres above and 1 metres infront and 1 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.1.%loop-player%} with extra 0 with force

					set {_strength.dot.2.%loop-player%} to location 1.2 metres above and 1.4 metres infront loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.2.%loop-player%} with extra 0 with force

					set {_strength.dot.3.%loop-player%} to location 1.2 metres above and 1 metres infront and 1 metres right loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.3.%loop-player%} with extra 0 with force

				if {Test.Double.%loop-player%} is 1:
					set {_strength.dot.1.%loop-player%} to location 1.2 metres above and 1 metres infront and 1 metres left loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.1.%loop-player%} with extra 0 with force

					set {_strength.dot.2.%loop-player%} to location 1.2 metres above and 1.4 metres infront loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.2.%loop-player%} with extra 0 with force

					set {_strength.dot.3.%loop-player%} to location 1.2 metres above and 1 metres infront and 1 metres right loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.3.%loop-player%} with extra 0 with force

				if {Test.Double.%loop-player%} is 2:
					set {_strength.dot.1.%loop-player%} to location 1.2 metres above and 1 metres infront and 1 metres left loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.1.%loop-player%} with extra 0 with force

					set {_strength.dot.2.%loop-player%} to location 1.2 metres above and 1.4 metres infront loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.2.%loop-player%} with extra 0 with force

					set {_strength.dot.3.%loop-player%} to location 1.2 metres above and 1 metres infront and 1 metres right loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.3.%loop-player%} with extra 0 with force

				if {Test.Double.%loop-player%} is 3:
					set {_strength.dot.1.%loop-player%} to location 1.2 metres above and 1 metres infront and 1 metres left loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.1.%loop-player%} with extra 0 with force

					set {_strength.dot.2.%loop-player%} to location 1.2 metres above and 1.4 metres infront loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.2.%loop-player%} with extra 0 with force

					set {_strength.dot.3.%loop-player%} to location 1.2 metres above and 1 metres infront and 1 metres right loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.3.%loop-player%} with extra 0 with force
				
			if {ChadStrengthGroup..%loop-player%} is true:
				if {Test.DoubleGroup.%loop-player%} is 0:
					set {_strength.dot.group.1.%loop-player%} to location 0.7 metres above and 1 metres infront loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.1.%loop-player%} with extra 0 with force

					set {_strength.dot.group.2.%loop-player%} to location 0.7 metres above and -1 metres infront loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.2.%loop-player%} with extra 0 with force

					set {_strength.dot.group.3.%loop-player%} to location 0.7 metres above and 0.7 metres infront and -1 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.3.%loop-player%} with extra 0 with force

					set {_strength.dot.group.4.%loop-player%} to location 0.7 metres above and -0.7 metres infront and -1 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.4.%loop-player%} with extra 0 with force

					set {_strength.dot.group.5.%loop-player%} to location 0.7 metres above and 0.7 metres infront and 1 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.5.%loop-player%} with extra 0 with force

					set {_strength.dot.group.6.%loop-player%} to location 0.7 metres above and -0.7 metres infront and 1 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.6.%loop-player%} with extra 0 with force

					set {_strength.dot.group.7.%loop-player%} to location 0.7 metres above and 0 metres infront and 1.5 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.7.%loop-player%} with extra 0 with force

					set {_strength.dot.group.8.%loop-player%} to location 0.7 metres above and 0 metres infront and -1.5 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.8.%loop-player%} with extra 0 with force

				if {Test.DoubleGroup.%loop-player%} is 1:
					set {_strength.dot.group.1.%loop-player%} to location 0.7 metres above and 1 metres infront loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.1.%loop-player%} with extra 0 with force

					set {_strength.dot.group.2.%loop-player%} to location 0.7 metres above and -1 metres infront loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.2.%loop-player%} with extra 0 with force

					set {_strength.dot.group.3.%loop-player%} to location 0.7 metres above and 0.7 metres infront and -1 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.3.%loop-player%} with extra 0 with force

					set {_strength.dot.group.4.%loop-player%} to location 0.7 metres above and -0.7 metres infront and -1 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.4.%loop-player%} with extra 0 with force

					set {_strength.dot.group.5.%loop-player%} to location 0.7 metres above and 0.7 metres infront and 1 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.5.%loop-player%} with extra 0 with force

					set {_strength.dot.group.6.%loop-player%} to location 0.7 metres above and -0.7 metres infront and 1 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.6.%loop-player%} with extra 0 with force

					set {_strength.dot.group.7.%loop-player%} to location 0.7 metres above and 0 metres infront and 1.5 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.7.%loop-player%} with extra 0 with force

					set {_strength.dot.group.8.%loop-player%} to location 0.7 metres above and 0 metres infront and -1.5 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.8.%loop-player%} with extra 0 with force

				if {Test.DoubleGroup.%loop-player%} is 2:
					set {_strength.dot.group.1.%loop-player%} to location 0.7 metres above and 1 metres infront loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.1.%loop-player%} with extra 0 with force

					set {_strength.dot.group.2.%loop-player%} to location 0.7 metres above and -1 metres infront loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.2.%loop-player%} with extra 0 with force

					set {_strength.dot.group.3.%loop-player%} to location 0.7 metres above and 0.7 metres infront and -1 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.3.%loop-player%} with extra 0 with force

					set {_strength.dot.group.4.%loop-player%} to location 0.7 metres above and -0.7 metres infront and -1 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.4.%loop-player%} with extra 0 with force

					set {_strength.dot.group.5.%loop-player%} to location 0.7 metres above and 0.7 metres infront and 1 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.5.%loop-player%} with extra 0 with force

					set {_strength.dot.group.6.%loop-player%} to location 0.7 metres above and -0.7 metres infront and 1 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.6.%loop-player%} with extra 0 with force

					set {_strength.dot.group.7.%loop-player%} to location 0.7 metres above and 0 metres infront and 1.5 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.7.%loop-player%} with extra 0 with force

					set {_strength.dot.group.8.%loop-player%} to location 0.7 metres above and 0 metres infront and -1.5 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.8.%loop-player%} with extra 0 with force

				if {Test.DoubleGroup.%loop-player%} is 3:
					set {_strength.dot.group.1.%loop-player%} to location 0.7 metres above and 1 metres infront loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.1.%loop-player%} with extra 0 with force

					set {_strength.dot.group.2.%loop-player%} to location 0.7 metres above and -1 metres infront loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.2.%loop-player%} with extra 0 with force

					set {_strength.dot.group.3.%loop-player%} to location 0.7 metres above and 0.7 metres infront and -1 metres left loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.3.%loop-player%} with extra 0 with force

					set {_strength.dot.group.4.%loop-player%} to location 0.7 metres above and -0.7 metres infront and -1 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.4.%loop-player%} with extra 0 with force

					set {_strength.dot.group.5.%loop-player%} to location 0.7 metres above and 0.7 metres infront and 1 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.5.%loop-player%} with extra 0 with force

					set {_strength.dot.group.6.%loop-player%} to location 0.7 metres above and -0.7 metres infront and 1 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.6.%loop-player%} with extra 0 with force

					set {_strength.dot.group.7.%loop-player%} to location 0.7 metres above and 0 metres infront and 1.5 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.7.%loop-player%} with extra 0 with force

					set {_strength.dot.group.8.%loop-player%} to location 0.7 metres above and 0 metres infront and -1.5 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.8.%loop-player%} with extra 0 with force

				if {Test.DoubleGroup.%loop-player%} is 4:
					set {_strength.dot.group.1.%loop-player%} to location 0.7 metres above and 1 metres infront loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.1.%loop-player%} with extra 0 with force

					set {_strength.dot.group.2.%loop-player%} to location 0.7 metres above and -1 metres infront loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.2.%loop-player%} with extra 0 with force

					set {_strength.dot.group.3.%loop-player%} to location 0.7 metres above and 0.7 metres infront and -1 metres left loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.3.%loop-player%} with extra 0 with force

					set {_strength.dot.group.4.%loop-player%} to location 0.7 metres above and -0.7 metres infront and -1 metres left loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.4.%loop-player%} with extra 0 with force

					set {_strength.dot.group.5.%loop-player%} to location 0.7 metres above and 0.7 metres infront and 1 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.5.%loop-player%} with extra 0 with force

					set {_strength.dot.group.6.%loop-player%} to location 0.7 metres above and -0.7 metres infront and 1 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.6.%loop-player%} with extra 0 with force

					set {_strength.dot.group.7.%loop-player%} to location 0.7 metres above and 0 metres infront and 1.5 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.7.%loop-player%} with extra 0 with force

					set {_strength.dot.group.8.%loop-player%} to location 0.7 metres above and 0 metres infront and -1.5 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.8.%loop-player%} with extra 0 with force

				if {Test.DoubleGroup.%loop-player%} is 5:
					set {_strength.dot.group.1.%loop-player%} to location 0.7 metres above and 1 metres infront loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.1.%loop-player%} with extra 0 with force

					set {_strength.dot.group.2.%loop-player%} to location 0.7 metres above and -1 metres infront loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.2.%loop-player%} with extra 0 with force

					set {_strength.dot.group.3.%loop-player%} to location 0.7 metres above and 0.7 metres infront and -1 metres left loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.3.%loop-player%} with extra 0 with force

					set {_strength.dot.group.4.%loop-player%} to location 0.7 metres above and -0.7 metres infront and -1 metres left loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.4.%loop-player%} with extra 0 with force

					set {_strength.dot.group.5.%loop-player%} to location 0.7 metres above and 0.7 metres infront and 1 metres left loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.5.%loop-player%} with extra 0 with force

					set {_strength.dot.group.6.%loop-player%} to location 0.7 metres above and -0.7 metres infront and 1 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.6.%loop-player%} with extra 0 with force

					set {_strength.dot.group.7.%loop-player%} to location 0.7 metres above and 0 metres infront and 1.5 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.7.%loop-player%} with extra 0 with force

					set {_strength.dot.group.8.%loop-player%} to location 0.7 metres above and 0 metres infront and -1.5 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.8.%loop-player%} with extra 0 with force

				if {Test.DoubleGroup.%loop-player%} is 6:
					set {_strength.dot.group.1.%loop-player%} to location 0.7 metres above and 1 metres infront loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.1.%loop-player%} with extra 0 with force

					set {_strength.dot.group.2.%loop-player%} to location 0.7 metres above and -1 metres infront loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.2.%loop-player%} with extra 0 with force

					set {_strength.dot.group.3.%loop-player%} to location 0.7 metres above and 0.7 metres infront and -1 metres left loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.3.%loop-player%} with extra 0 with force

					set {_strength.dot.group.4.%loop-player%} to location 0.7 metres above and -0.7 metres infront and -1 metres left loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.4.%loop-player%} with extra 0 with force

					set {_strength.dot.group.5.%loop-player%} to location 0.7 metres above and 0.7 metres infront and 1 metres left loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.5.%loop-player%} with extra 0 with force

					set {_strength.dot.group.6.%loop-player%} to location 0.7 metres above and -0.7 metres infront and 1 metres left loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.6.%loop-player%} with extra 0 with force

					set {_strength.dot.group.7.%loop-player%} to location 0.7 metres above and 0 metres infront and 1.5 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.7.%loop-player%} with extra 0 with force

					set {_strength.dot.group.8.%loop-player%} to location 0.7 metres above and 0 metres infront and -1.5 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.8.%loop-player%} with extra 0 with force

				if {Test.DoubleGroup.%loop-player%} is 7:
					set {_strength.dot.group.1.%loop-player%} to location 0.7 metres above and 1 metres infront loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.1.%loop-player%} with extra 0 with force

					set {_strength.dot.group.2.%loop-player%} to location 0.7 metres above and -1 metres infront loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.2.%loop-player%} with extra 0 with force

					set {_strength.dot.group.3.%loop-player%} to location 0.7 metres above and 0.7 metres infront and -1 metres left loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.3.%loop-player%} with extra 0 with force

					set {_strength.dot.group.4.%loop-player%} to location 0.7 metres above and -0.7 metres infront and -1 metres left loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.4.%loop-player%} with extra 0 with force

					set {_strength.dot.group.5.%loop-player%} to location 0.7 metres above and 0.7 metres infront and 1 metres left loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.5.%loop-player%} with extra 0 with force

					set {_strength.dot.group.6.%loop-player%} to location 0.7 metres above and -0.7 metres infront and 1 metres left loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.6.%loop-player%} with extra 0 with force

					set {_strength.dot.group.7.%loop-player%} to location 0.7 metres above and 0 metres infront and 1.5 metres left loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.7.%loop-player%} with extra 0 with force

					set {_strength.dot.group.8.%loop-player%} to location 0.7 metres above and 0 metres infront and -1.5 metres left loop-player
					draw 3 dust using dustOption(rgb(15, 15, 15), 1) at {_strength.dot.group.8.%loop-player%} with extra 0 with force

				if {Test.DoubleGroup.%loop-player%} is 8:
					set {_strength.dot.group.1.%loop-player%} to location 0.7 metres above and 1 metres infront loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.1.%loop-player%} with extra 0 with force

					set {_strength.dot.group.2.%loop-player%} to location 0.7 metres above and -1 metres infront loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.2.%loop-player%} with extra 0 with force

					set {_strength.dot.group.3.%loop-player%} to location 0.7 metres above and 0.7 metres infront and -1 metres left loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.3.%loop-player%} with extra 0 with force

					set {_strength.dot.group.4.%loop-player%} to location 0.7 metres above and -0.7 metres infront and -1 metres left loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.4.%loop-player%} with extra 0 with force

					set {_strength.dot.group.5.%loop-player%} to location 0.7 metres above and 0.7 metres infront and 1 metres left loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.5.%loop-player%} with extra 0 with force

					set {_strength.dot.group.6.%loop-player%} to location 0.7 metres above and -0.7 metres infront and 1 metres left loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.6.%loop-player%} with extra 0 with force

					set {_strength.dot.group.7.%loop-player%} to location 0.7 metres above and 0 metres infront and 1.5 metres left loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.7.%loop-player%} with extra 0 with force

					set {_strength.dot.group.8.%loop-player%} to location 0.7 metres above and 0 metres infront and -1.5 metres left loop-player
					draw 3 dust using dustOption(rgb(199, 0, 10), 1) at {_strength.dot.group.8.%loop-player%} with extra 0 with force


			if {Tag..%loop-player%} > 0: # Disabled Display
				send action bar "🔒 &8&lᴅɪꜱᴀʙʟᴇᴅ: %{Tag..%loop-player%}%s" to loop-player
			if {AstraMin.%loop-player%} < 1: # Astra Cooldowns
				if {AstraSec.%loop-player%} > 0:
					if {AstraSec.%loop-player%} < 35:
						set {Astra1.%loop-player%} to "%{AstraSec.%loop-player%}%s"
					if {AstraSec.%loop-player%} > 34:
						set {Astra1.%loop-player%} to "&cActive.."
				if {AstraSec.%loop-player%} < 1:
					set {Astra1.%loop-player%} to "&aReady!"
					set {astra.cooldown.%loop-player%} to false
			if {AstraMin.%loop-player%} < 0:
				set {Astra1.%loop-player%} to "&aReady!"
				set {astra.cooldown.%loop-player%} to false
			if {AstraMin.%loop-player%} > 0:
				if {AstraSec.%loop-player%} < 1:
					set {Astra1.%loop-player%} to "%{AstraMin.%loop-player%}%m"
				if {AstraSec.%loop-player%} > 0:
					set {Astra1.%loop-player%} to "%{AstraMin.%loop-player%}%m %{AstraSec.%loop-player%}%s"
			if {AstraMin2.%loop-player%} < 1:
				if {AstraSec2.%loop-player%} > 0:
					set {Astra2.%loop-player%} to "%{AstraSec2.%loop-player%}%s"
				if {AstraSec2.%loop-player%} < 1:
					set {Astra2.%loop-player%} to "&aReady!"
			if {AstraMin2.%loop-player%} < 0:
				set {Astra2.%loop-player%} to "&aReady!"
			if {AstraMin2.%loop-player%} > 0:
				if {AstraSec2.%loop-player%} < 1:
					set {Astra2.%loop-player%} to "%{AstraMin2.%loop-player%}%m"
				if {AstraSec2.%loop-player%} > 0:
					set {Astra2.%loop-player%} to "%{AstraMin2.%loop-player%}%m %{AstraSec2.%loop-player%}%s"
			if {AstraMin3.%loop-player%} < 1:
				if {AstraSec3.%loop-player%} > 0:
					set {Astra3.%loop-player%} to "%{AstraSec3.%loop-player%}%s"
				if {AstraSec3.%loop-player%} < 1:
					set {Astra3.%loop-player%} to "&aReady!"
					set {astra.cooldown3.%loop-player%} to false
			if {AstraMin3.%loop-player%} < 0:
				set {Astra3.%loop-player%} to "&aReady!"
				set {astra.cooldown3.%loop-player%} to false
			if {AstraMin3.%loop-player%} > 0:
				if {AstraSec3.%loop-player%} < 1:
					set {Astra3.%loop-player%} to "%{AstraMin3.%loop-player%}%m"
				if {AstraSec3.%loop-player%} > 0:
					set {Astra3.%loop-player%} to "%{AstraMin3.%loop-player%}%m %{AstraSec3.%loop-player%}%s"
			if {Tag..%loop-player%} < 1:
				if loop-player's off hand item is {Bliss.Astra.T1.%loop-player%}:
					blissAstraActionBarT1(loop-player)
				if loop-player is holding {Bliss.Astra.T1.%loop-player%}:
					blissAstraActionBarT1(loop-player)
				if loop-player's off hand item is {Bliss.Astra.T2.%loop-player%}:
					blissAstraActionBarT2(loop-player)
				if loop-player is holding {Bliss.Astra.T2.%loop-player%}:
					blissAstraActionBarT2(loop-player)
			#if {Tag..%loop-player%} > 1:
				#apply darkness 1 without particles whilst hiding the potion icon to loop-player for 2 seconds replacing the existing effect

#Functions
function blissAstraActionBarT2(p: player):
	if {Bliss.Energy.%{_p}%} > 1:
		if {ghoost...%{_p}%} is true:
			send action bar "🧊 &bSPOOK  &5🔮   &r🌟 &bTAG" to {_p}
		else:
			send action bar "🔪 &b%{Astra2.%{_p}%}%  &5🔮 &b%{Astra1.%{_p}%}%  &f👻 &b%{Astra3.%{_p}%}%" to {_p}
function blissAstraActionBarT1(p: player):
	if {Bliss.Energy.%{_p}%} > 1:
		send action bar "&5🔮 &b%{Astra1.%{_p}%}%" to {_p}
function blissAstraPorjectionOff(p: player):
	if {AstraProjection.%{_p}%} is true:
		teleport {_p} to {astra.location::%{_p}%}
		set {AstraProjection.%{_p}%} to false
		set {Bliss.Ghost.IDK.%{_p}%} to false
		set the walk speed of {_p} to 0.2
		remove invisibility from {_p}
		clear {_p}'s inventory
		set {ghoost...%{_p}%} to false
		set {_slot} to 0
		if {dragonegg.%{_p}%} is not true:
			set {AstraSec3.%{_p}%} to 0
			set {AstraMin3.%{_p}%} to 2
		else:
			set {AstraSec3.%{_p}%} to 0
			set {AstraMin3.%{_p}%} to 1
		loop 41 times:
			set slot {_slot} of {_p}'s inventory to {Astra.Projection.Inventory.%{_p}%.Indexes.%{_slot}%}
			add 1 to {_slot}
		kill {astra.location::%{_p}%}

every 1 second: # 1 second loops below
	loop all players:
		if loop-player is within 4 blocks around {Fire.Crisp.Location::*}: # Crisp
			if loop-player is not within 4 blocks around {Fire.Crisp.Location::%loop-player%}:
				damage loop-player by 2 hearts
		if loop-player is within 4 blocks around {Fire.Cozy.Location::%loop-player%}:
			heal the loop-player by 0.5 hearts
		if loop-player is within 4 blocks around {Fire.Cozy.Location::*}:
			light loop-player on fire
		if {Tag..%loop-player%} < 1: # Flux Haste Passive
			if {Bliss.Energy.%loop-player%} > 1:
				if {-fluxBroken::%loop-player's uuid%} > 5:
					apply haste 1 without particles to loop-player for 2 seconds replacing the existing effect
				if {-fluxBroken::%loop-player's uuid%} > 10:
					apply haste 2 without particles to loop-player for 2 seconds replacing the existing effect
				if {-fluxBroken::%loop-player's uuid%} > 15:
					apply haste 3 without particles to loop-player for 2 seconds replacing the existing effect
				if {-fluxBroken::%loop-player's uuid%} > 20:
					apply haste 4 without particles to loop-player for 2 seconds replacing the existing effect
				if {-fluxBroken::%loop-player's uuid%} > 25:
					apply haste 5 without particles to loop-player for 2 seconds replacing the existing effect
				if {-fluxBroken::%loop-player's uuid%} > 30:
					apply haste 6 without particles to loop-player for 2 seconds replacing the existing effect
				if {-fluxBroken::%loop-player's uuid%} > 35:
					apply haste 7 without particles to loop-player for 2 seconds replacing the existing effect
				if {-fluxBroken::%loop-player's uuid%} > 40:
					apply haste 8 without particles to loop-player for 2 seconds replacing the existing effect
				if {-fluxBroken::%loop-player's uuid%} > 45:
					apply haste 9 without particles to loop-player for 2 seconds replacing the existing effect
				if {-fluxBroken::%loop-player's uuid%} > 50:
					apply haste 10 without particles to loop-player for 2 seconds replacing the existing effect
		if {-fluxBrokenTimer::%loop-player's uuid%} > 0: # Flux Damage & Speed Passives
			remove 1 from {-fluxBrokenTimer::%loop-player's uuid%}
		if {-fluxBrokenTimer::%loop-player's uuid%} is 0:
			set {-fluxBroken::%loop-player's uuid%} to 0
			
		if {-fluxDamagedTimer::%loop-player's uuid%} > 0:
			remove 1 from {-fluxDamagedTimer::%loop-player's uuid%}
		if {-fluxDamagedTimer::%loop-player's uuid%} is 0:
			set {-fluxDamaged::%loop-player's uuid%} to 0
			
		if {-fluxMovedTimer::%loop-player's uuid%} > 0:
			remove 1 from {-fluxMovedTimer::%loop-player's uuid%}
		if {-fluxMovedTimer::%loop-player's uuid%} is 0:
			set {-fluxMoved::%loop-player's uuid%} to 0
			set {-fluxSpeed1::%loop-player's uuid%} to false
			set {-fluxSpeed2::%loop-player's uuid%} to false
			set {-fluxSpeed3::%loop-player's uuid%} to false
			set {-fluxSpeed4::%loop-player's uuid%} to false
			set {-fluxSpeed5::%loop-player's uuid%} to false
			set {-fluxSpeed6::%loop-player's uuid%} to false
			set {-fluxSpeed7::%loop-player's uuid%} to false
			set {-fluxSpeed8::%loop-player's uuid%} to false
			set {-fluxSpeed9::%loop-player's uuid%} to false
			set {-fluxSpeed10::%loop-player's uuid%} to false
		#if {Tag..%loop-player%} < 1: # Flux Stun Passive
			#if loop-player is holding {Bliss.Flux.T2.%loop-player%}:
				#chance of 5%:
					#loop all entities within 2 blocks of loop-player:
						#if {Trusted.%loop-entity-2%.%loop-player-1%} is not true:
							#set {Flux.Freeze.%loop-entity-2%} to 2
							#damage loop-entity-2 by 2.5 hearts
							#push loop-entity-2 up at speed 0.3
							#loop 2 times:
								#loop 10 times:
									#set {_loop-player-1} to location 0.5 metres above loop-player-1
									#set {_loop-entity-2} to location 0.5 metres above loop-entity-2
									#set {_trail} to a line from {_loop-entity-2} to {_loop-player-1}
									#set particle of {_trail} to glow
									#draw shapes {_trail} at {_loop-entity-2}
									#wait 0.1 seconds
			#else if loop-player's offhand item is {Bliss.Flux.T2.%loop-player%}:
				#chance of 5%:
					#loop all entities within 2 blocks of loop-player:
						#if {Trusted.%loop-entity-2%.%loop-player-1%} is not true:
							#set {Flux.Freeze.%loop-entity-2%} to 2
							#damage loop-entity-2 by 2.5 hearts
							#loop 2 times:
								#loop 10 times:
									#set {_loop-player-1} to location 0.5 metres above loop-player-1
									#set {_loop-entity-2} to location 0.5 metres above loop-entity-2
									#set {_trail} to a line from {_loop-entity-2} to {_loop-player-1}
									#set particle of {_trail} to glow
									#draw shapes {_trail} at {_loop-entity-2}
									#wait 0.1 seconds
			#else if loop-player is holding {Bliss.Flux.T1.%loop-player%}:
				#chance of 5%:
					#loop all entities within 2 blocks of loop-player:
						#if {Trusted.%loop-entity-2%.%loop-player-1%} is not true:
							#set {Flux.Freeze.%loop-entity-2%} to 2
							#damage loop-entity-2 by 2.5 hearts
							#loop 2 times:
								#loop 10 times:
									#set {_loop-player-1} to location 0.5 metres above loop-player-1
									#set {_loop-entity-2} to location 0.5 metres above loop-entity-2
									#set {_trail} to a line from {_loop-entity-2} to {_loop-player-1}
									#set particle of {_trail} to glow
									#draw shapes {_trail} at {_loop-entity-2}
									#wait 0.1 seconds
			#else if loop-player's offhand item is {Bliss.Flux.T1.%loop-player%}:
				#chance of 5%:
					#loop all entities within 2 blocks of loop-player:
						#if {Trusted.%loop-entity-2%.%loop-player-1%} is not true:
							#set {Flux.Freeze.%loop-entity-2%} to 2
							#damage loop-entity-2 by 2.5 hearts
							#loop 2 times:
								#loop 10 times:
									#set {_loop-player-1} to location 0.5 metres above loop-player-1
									#set {_loop-entity-2} to location 0.5 metres above loop-entity-2
									#set {_trail} to a line from {_loop-entity-2} to {_loop-player-1}
									#set particle of {_trail} to glow
									#draw shapes {_trail} at {_loop-entity-2}
									#wait 0.1 seconds
		remove 1 from {FluxSec.%loop-player%} # Flux
		remove 1 from {FluxSec2.%loop-player%}
		remove 1 from {FluxSec3.%loop-player%}
		if {Flux.Freeze.%loop-player%} > 0:
			remove 1 from {Flux.Freeze.%loop-player%}
			apply glowing 1 without particles whilst hiding the potion icon to loop-player for 1 seconds replacing the existing effect
		if {FluxSec.%loop-player%} is -1:
			remove 1 from {FluxMin.%loop-player%}
			set {FluxSec.%loop-player%} to 59
			if {FluxMin.%loop-player%} is -1:
				set {flux.cooldown.%loop-player%} to false
		if {FluxSec2.%loop-player%} is -1:
			remove 1 from {FluxMin2.%loop-player%}
			set {FluxSec2.%loop-player%} to 59
			if {FluxMin2.%loop-player%} is -1:
				set {flux.cooldown2.%loop-player%} to false
		if {FluxSec3.%loop-player%} is -1:
			remove 1 from {FluxMin3.%loop-player%}
			set {FluxSec3.%loop-player%} to 59
			if {FluxMin3.%loop-player%} is -1:
				set {flux.cooldown3.%loop-player%} to false
		remove 1 from {WealthSec.%loop-player%} # Wealth
		remove 1 from {WealthSec2.%loop-player%}
		remove 1 from {WealthSec3.%loop-player%}
		if {WealthSec.%loop-player%} is -1:
			remove 1 from {WealthMin.%loop-player%}
			set {WealthSec.%loop-player%} to 59
			if {WealthMin.%loop-player%} is -1:
				set {wealth.cooldown.%loop-player%} to false
		if {WealthSec2.%loop-player%} is -1:
			remove 1 from {WealthMin2.%loop-player%}
			set {WealthSec2.%loop-player%} to 59
			if {WealthMin2.%loop-player%} is -1:
				set {wealth.cooldown2.%loop-player%} to false
		if {WealthSec3.%loop-player%} is -1:
			remove 1 from {WealthMin3.%loop-player%}
			set {WealthSec3.%loop-player%} to 59
			if {WealthMin3.%loop-player%} is -1:
				set {wealth.cooldown3.%loop-player%} to false
		remove 1 from {StrengthSec.%loop-player%} # Strength
		remove 1 from {StrengthSec2.%loop-player%}
		remove 1 from {StrengthSec3.%loop-player%}
		remove 1 from {StrengthSec4.%loop-player%}
		if {StrengthSec.%loop-player%} is -1:
			remove 1 from {StrengthMin.%loop-player%}
			set {StrengthSec.%loop-player%} to 59
			if {StrengthMin.%loop-player%} is -1:
				set {strength.cooldown.%loop-player%} to false
		if {StrengthSec2.%loop-player%} is -1:
			remove 1 from {StrengthMin2.%loop-player%}
			set {StrengthSec2.%loop-player%} to 59
			if {StrengthMin2.%loop-player%} is -1:
				set {strength.cooldown2.%loop-player%} to false
		if {StrengthSec3.%loop-player%} is -1:
			remove 1 from {StrengthMin3.%loop-player%}
			set {StrengthSec3.%loop-player%} to 59
			if {StrengthMin3.%loop-player%} is -1:
				set {strength.cooldown3.%loop-player%} to false
		if {StrengthSec4.%loop-player%} is -1:
			remove 1 from {StrengthMin4.%loop-player%}
			set {StrengthSec4.%loop-player%} to 59
			if {StrengthMin4.%loop-player%} is -1:
				set {strength.cooldown4.%loop-player%} to false
		remove 1 from {Speed.storm.striked::%uuid of loop-player%} # Speed
		remove 1 from {Bliss.Speed.Frailer.%loop-player%}
		remove 1 from {Bliss.Speed.Frailer.Group.%loop-player%}
		remove 1 from {Bliss.Speed.Attack.Trusted.%loop-player%}
		remove 1 from {Bliss.Speed.Attack.Trusted.Storm.%loop-player%}
		if {Bliss.Speed.Attack.Trusted.%loop-player%} < 1:
			set loop-entity's attack speed attribute to 4
		if {Bliss.Speed.Attack.Trusted.%loop-player%} > 0:
			set loop-entity's attack speed attribute to 5
		if {Bliss.Speed.Attack.Trusted.Storm.%loop-player%} > 0:
			set loop-entity's attack speed attribute to 7
		if {Bliss.Speed.Frailer.Group.%loop-player%} > 0:
			set loop-entity's attack speed attribute to 3.4
		if {Bliss.Speed.Frailer.%loop-player%} > 0:
			set loop-entity's attack speed attribute to 3
		remove 1 from {SpeedSec.%loop-player%}
		remove 1 from {SpeedSec2.%loop-player%}
		remove 1 from {SpeedSec3.%loop-player%}
		remove 1 from {SpeedSec4.%loop-player%}
		if {SpeedSec.%loop-player%} is -1:
			remove 1 from {SpeedMin.%loop-player%}
			set {SpeedSec.%loop-player%} to 59
			if {SpeedMin.%loop-player%} is -1:
				set {speed.cooldown.%loop-player%} to false
		if {SpeedSec2.%loop-player%} is -1:
			remove 1 from {SpeedMin2.%loop-player%}
			set {SpeedSec2.%loop-player%} to 59
			if {SpeedMin2.%loop-player%} is -1:
				set {speed.cooldown2.%loop-player%} to false
		if {SpeedSec3.%loop-player%} is -1:
			remove 1 from {SpeedMin3.%loop-player%}
			set {SpeedSec3.%loop-player%} to 59
			if {SpeedMin3.%loop-player%} is -1:
				set {speed.cooldown3.%loop-player%} to false
		if {SpeedSec4.%loop-player%} is -1:
			remove 1 from {SpeedMin4.%loop-player%}
			set {SpeedSec4.%loop-player%} to 59
			if {SpeedMin4.%loop-player%} is -1:
				set {speed.cooldown4.%loop-player%} to false
		remove 1 from {PuffDJSec.%loop-player%} # Puff
		remove 1 from {PuffSec.%loop-player%}
		remove 1 from {PuffSec2.%loop-player%}
		remove 1 from {PuffSec3.%loop-player%}
		if {PuffSec.%loop-player%} is -1:
			remove 1 from {PuffMin.%loop-player%}
			set {PuffSec.%loop-player%} to 59
			if {PuffMin.%loop-player%} is -1:
				set {puff.cooldown.%loop-player%} to false
		if {PuffSec2.%loop-player%} is -1:
			remove 1 from {PuffMin2.%loop-player%}
			set {PuffSec2.%loop-player%} to 59
			if {PuffMin2.%loop-player%} is -1:
				set {puff.cooldown2.%loop-player%} to false
		if {PuffSec3.%loop-player%} is -1:
			remove 1 from {PuffMin3.%loop-player%}
			set {PuffSec3.%loop-player%} to 59
			if {PuffMin3.%loop-player%} is -1:
				set {puff.cooldown3.%loop-player%} to false
		if {PuffDJSec.%loop-player%} < 0:
			set {puffDJ.cooldown.%loop-player%} to false
		remove 1 from {LifeSec.%loop-player%} # Life
		remove 1 from {LifeSec2.%loop-player%}
		remove 1 from {LifeSec3.%loop-player%}
		remove 1 from {LifeSec4.%loop-player%}
		remove 1 from {Life.CoL.Group.Time.%loop-player%}
		remove 1 from {Life.Drained.Solo.Time.%loop-player%}	
		remove 1 from {Life.Drained.Group.Time.%loop-player%}
		if {LifeSec.%loop-player%} is 0:
			remove 1 from {LifeMin.%loop-player%}
			set {LifeSec.%loop-player%} to 5
			if {LifeMin.%loop-player%} is -1:
				set {life.cooldown.%loop-player%} to true
				set {LifeSec.%loop-player%} to 5
				set {LifeMin.%loop-player%} to 0
		if {LifeSec2.%loop-player%} is -1:
			remove 1 from {LifeMin2.%loop-player%}
			set {LifeSec2.%loop-player%} to 59
			if {LifeMin2.%loop-player%} is -1:
				set {life.cooldown2.%loop-player%} to false
		if {LifeSec3.%loop-player%} < 0:
			remove 1 from {LifeMin3.%loop-player%}
			set {LifeSec3.%loop-player%} to 59
			if {LifeMin3.%loop-player%} is -1:
				set {life.cooldown3.%loop-player%} to false
		if {LifeSec4.%loop-player%} < 0:
			remove 1 from {LifeMin4.%loop-player%}
			set {LifeSec4.%loop-player%} to 59
			if {LifeMin4.%loop-player%} is -1:
				set {life.cooldown4.%loop-player%} to false
		remove 1 from {FireSec.%loop-player%} # Fire
		remove 1 from {FireSec2.%loop-player%}
		remove 1 from {FireSec3.%loop-player%}
		remove 1 from {FireSec4.%loop-player%}
		if {FireSec.%loop-player%} is -1:
			remove 1 from {FireMin.%loop-player%}
			set {FireSec.%loop-player%} to 59
			if {FireMin.%loop-player%} is -1:
				set {fire.cooldown.%loop-player%} to false
		if {FireSec2.%loop-player%} is -1:
			remove 1 from {FireMin2.%loop-player%}
			set {FireSec2.%loop-player%} to 59
			if {FireMin2.%loop-player%} is -1:
				set {Fire.cooldown2.%loop-player%} to false
		if {FireSec3.%loop-player%} is -1:
			remove 1 from {FireMin3.%loop-player%}
			set {FireSec3.%loop-player%} to 59
			if {FireMin3.%loop-player%} is -1:
				set {fire.cooldown3.%loop-player%} to false
		if {FireSec4.%loop-player%} is -1:
			remove 1 from {FireMin4.%loop-player%}
			set {FireSec4.%loop-player%} to 59
			if {FireMin4.%loop-player%} is -1:
				set {fire.cooldown4.%loop-player%} to false
		remove 1 from {AstraSec.%loop-player%} # Astra
		remove 1 from {AstraSec2.%loop-player%}
		remove 1 from {AstraSec3.%loop-player%}
		if {AstraSec.%loop-player%} is -1:
			remove 1 from {AstraMin.%loop-player%}
			set {AstraSec.%loop-player%} to 59
			if {AstraMin.%loop-player%} is -1:
				set {astra.cooldown.%loop-player%} to false
		if {AstraSec2.%loop-player%} is -1:
			remove 1 from {AstraMin2.%loop-player%}
			set {AstraSec2.%loop-player%} to 59
			if {AstraMin2.%loop-player%} is -1:
				set {astra.cooldown2.%loop-player%} to false
		if {AstraSec3.%loop-player%} is -1:
			remove 1 from {AstraMin3.%loop-player%}
			set {AstraSec3.%loop-player%} to 59
			if {AstraMin3.%loop-player%} is -1:
				set {astra.cooldown3.%loop-player%} to false
		if {Tag..%loop-player%} > 0:
			remove 1 from {Tag..%loop-player%}

on right click on entity:
	if {ghoost...%player%} is true:
		if player's held item is {Bliss.Astra.T2.%player%}:
			if {AstraProjection.%player%} is true:
				blissAstraPorjectionOff(player)
				if {Tag..%event-entity%} > 1:
					add 10 to {Tag..%event-entity%}
				if {Tag..%event-entity%} < 1:
					set {Tag..%event-entity%} to 10
				send "&5🔮 &bSpooked &e%event-entity% &bfor &e10s" to player

on right click:
	if player's off hand item is {Bliss.Astra.T2.%player%}:
		if player is not sneaking:
			if {Bliss.Energy.%player%} > 1:
				if {AstraDodge.%player%} is not true:
					if player's held item is a sword or air or an axe:
						if {astra.cooldown.%player%} is true:
							send "<##A01FFF>🔮 <##FF686F>Your <##C7C7C7>Dimensional Drift <##FF686F>skill is on cooldown for <##A01FFF>%{Astra1.%player%}%" to player
						if {astra.cooldown.%player%} is not true:
							if {-DoubleClick::%player's uuid%} is not set:
								set {-DoubleClick::%player's uuid%} to true
							else:
								delete {-DoubleClick::%player's uuid%}
								send "<##A01FFF>🔮 <##FF686F>You used <##C7C7C7>Dimensional Drift" to player
								set {AstraSec.%player%} to 40
								set {AstraMin.%player%} to 0
								set {astra.cooldown.%player%} to true
								set {DriftUsage.%player%} to true

								summon horse at player
								set {Astra.Horse::%player's uuid%} to last spawned entity
								#set {Astra.Horse::%player's uuid%}'s movement speed attribute to 0.243
								set {Astra.Horse::%player's uuid%}'s movement speed attribute to 0.3
								set {Astra.Horse::%player's uuid%}'s jump strength attribute to 1.2
								set {Astra.Horse::%player's uuid%}'s max health to 53
								set {Astra.Horse::%player's uuid%}'s health to 53

								tame {Astra.Horse::%player's uuid%} to the player
								make {Astra.Horse::%player's uuid%} invisible
								make {Astra.Horse::%player's uuid%} invincible
								equip {Astra.Horse::%player's uuid%} with a saddle
								make player ride {Astra.Horse::%player's uuid%}
								set {AstraDodge.%player%} to true
								apply invisibility 1 without particles whilst hiding the potion icon to player for 5 seconds replacing the existing effect

								if player's helmet is not air:
									set {_helm} to player's helmet
									set player's helmet to crimson button
									loop enchantments of {_helm}:
										enchant player's helmet with loop-value

								if player's chestplate is not air:
									set {_chest} to player's chestplate
									set player's chestplate to crimson button
									loop enchantments of {_chest}:
										enchant player's chestplate with loop-value

								if player's leggings is not air:
									set {_legs} to player's leggings
									set player's leggings to crimson button
									loop enchantments of {_legs}:
										enchant player's leggings with loop-value

								if player's boots is not air:
									set {_boots} to player's boots
									set player's boots to crimson button
									loop enchantments of {_boots}:
										enchant player's boots with loop-value

								loop 20 times:
									wait 5 ticks
									if loop-iteration is not 20:
										if {DriftUsage.%player%} is not true:
											set player's helmet to {_helm}
											set player's chestplate to {_chest}
											set player's leggings to {_legs}
											set player's boots to {_boots}

											#remove invisibility from potion effects of player
											kill {Astra.Horse::%player's uuid%}
											set {AstraDodge.%player%} to false
											stop
									else:
										set player's helmet to {_helm}
										set player's chestplate to {_chest}
										set player's leggings to {_legs }
										set player's boots to {_boots}

										#remove invisibility from potion effects of player
										set {DriftUsage.%player%} to false
										kill {Astra.Horse::%player's uuid%}
										set {AstraDodge.%player%} to false
										stop

on right click:
	if player's off hand item is {Bliss.Astra.T1.%player%}:
		if player is not sneaking:
			if {Tag..%player%} < 1:
				if {Bliss.Energy.%player%} > 1:
					if {AstraDodge.%player%} is not true:
						if player's held item is a sword or air or an axe:
							if {astra.cooldown.%player%} is true:
								send "<##A01FFF>🔮 <##FF686F>Your <##C7C7C7>Dimensional Drift <##FF686F>skill is on cooldown for <##A01FFF>%{Astra1.%player%}%" to player
							if {astra.cooldown.%player%} is not true:
								if {-DoubleClick::%player's uuid%} is not set:
									set {-DoubleClick::%player's uuid%} to true
								else:
									delete {-DoubleClick::%player's uuid%}
									send "<##A01FFF>🔮 <##FF686F>You used <##C7C7C7>Dimensional Drift" to player
									set {AstraSec.%player%} to 40
									set {AstraMin.%player%} to 0
									set {astra.cooldown.%player%} to true
									set {DriftUsage.%player%} to true

									summon horse at player
									set {Astra.Horse::%player's uuid%} to last spawned entity
									#set {Astra.Horse::%player's uuid%}'s movement speed attribute to 0.243
									set {Astra.Horse::%player's uuid%}'s movement speed attribute to 0.3
									set {Astra.Horse::%player's uuid%}'s jump strength attribute to 1.2
									set {Astra.Horse::%player's uuid%}'s max health to 53
									set {Astra.Horse::%player's uuid%}'s health to 53

									tame {Astra.Horse::%player's uuid%} to the player
									make {Astra.Horse::%player's uuid%} invisible
									make {Astra.Horse::%player's uuid%} invincible
									equip {Astra.Horse::%player's uuid%} with a saddle
									make player ride {Astra.Horse::%player's uuid%}
									set {AstraDodge.%player%} to true
									apply invisibility 1 without particles whilst hiding the potion icon to player for 5 seconds replacing the existing effect

									if player's helmet is not air:
										set {_helm} to player's helmet
										set player's helmet to crimson button
										loop enchantments of {_helm}:
											enchant player's helmet with loop-value

									if player's chestplate is not air:
										set {_chest} to player's chestplate
										set player's chestplate to crimson button
										loop enchantments of {_chest}:
											enchant player's chestplate with loop-value

									if player's leggings is not air:
										set {_legs} to player's leggings
										set player's leggings to crimson button
										loop enchantments of {_legs}:
											enchant player's leggings with loop-value

									if player's boots is not air:
										set {_boots} to player's boots
										set player's boots to crimson button
										loop enchantments of {_boots}:
											enchant player's boots with loop-value

									loop 20 times:
										wait 5 ticks
										if loop-iteration is not 20:
											if {DriftUsage.%player%} is not true:
												set player's helmet to {_helm}
												set player's chestplate to {_chest}
												set player's leggings to {_legs}
												set player's boots to {_boots}

												#remove invisibility from potion effects of player
												kill {Astra.Horse::%player's uuid%}
												set {AstraDodge.%player%} to false
												stop
										else:
											set player's helmet to {_helm}
											set player's chestplate to {_chest}
											set player's leggings to {_legs }
											set player's boots to {_boots}

											#remove invisibility from potion effects of player
											set {DriftUsage.%player%} to false
											kill {Astra.Horse::%player's uuid%}
											set {AstraDodge.%player%} to false
											stop


on sneak toggle:
	if {DriftUsage.%player%} is true:
		#remove invisibility from potion effects of player
		kill {Astra.Horse::%player's uuid%}
		set {DriftUsage.%player%} to false
		set {AstraSec.%player%} to 35
		set {AstraMin.%player%} to 0
		set {AstraDodge.%player%} to false

on damage:
	if {DriftUsage.%victim%} is true:
		cancel event
		#remove invisibility from potion effects of victim
		kill {Astra.Horse::%victim's uuid%}
		set {Usage.%victim%} to false
		set {AstraSec.%victim%} to 35
		set {AstraMin.%victim%} to 0
		set {AstraDodge.%victim%} to false


on right click on entity:
	if player's gamemode is not spectator:
		if {Tag..%player%} < 1:
			if {Bliss.Energy.%player%} > 1:
				#if {ghoost...%player%} is not true:
				if player's held item is {Bliss.Astra.T2.%player%}:
					if {astra.cooldown3.%player%} is not true:
						send "&5🔮 &bYou have activated §7Astral Void" to player
						set {_AstraVoidLoc::%player%} to event-entity's location
						set {_AstraVoidLoc1::%player%} to location 1 blocks above event-entity
						set {_AstraVoidLoc2::%player%} to location 2 blocks above event-entity
						set {_AstraVoidLoc3::%player%} to location 3 blocks above event-entity
						set {_AstraVoidLoc4::%player%} to location 4 blocks above event-entity
						set {_AstraVoidLoc5::%player%} to location 5 blocks above event-entity
						if {dragonegg.%player%} is not true:
							set {AstraSec3.%player%} to 0
							set {AstraMin3.%player%} to 2
						else:
							set {AstraSec3.%player%} to 0
							set {AstraMin3.%player%} to 1
						set {astra.cooldown3.%player%} to true
						set {_astcircles::circle} to a circle of radius 0.75
						set {_astcircles::smallcircle} to a circle of radius 1
						set {_astcircles::smallcircle1} to a circle of radius 1.25
						set {_astcircles::smallcircle2} to a circle of radius 1.5
						set {_astcircles::smallcircle3} to a circle of radius 1.75
						set {_astcircles::mediumcircle} to a circle of radius 2
						set {_astcircles::mediumcircle1} to a circle of radius 2.5
						set {_astcircles::mediumcircle2} to a circle of radius 3
						set {_astcircles::mediumcircle3} to a circle of radius 3.5
						set {_astcircles::largecircle} to a circle of radius 4
						set {_astcircles::largecircle1} to a circle of radius 4.5
						set {_astcircles::largecircle2} to a circle of radius 5
						set {_astcircles::largecircle3} to a circle of radius 5.5
						set {_astcircles::finalcircle} to a circle of radius 6
						set particle of {_astcircles::*} to dust particle using dustOption(rgb(106, 11, 184), 1)
						draw shapes {_astcircles::circle} at {_AstraVoidLoc::%player%}
						draw shapes {_astcircles::smallcircle} at {_AstraVoidLoc::%player%}
						wait 1 tick
						draw shapes {_astcircles::smallcircle1} at {_AstraVoidLoc::%player%}
						draw shapes {_astcircles::smallcircle2} at {_AstraVoidLoc::%player%}
						wait 1 tick
						draw shapes {_astcircles::smallcircle3} at {_AstraVoidLoc::%player%}
						draw shapes {_astcircles::mediumcircle} at {_AstraVoidLoc::%player%}
						wait 1 tick
						draw shapes {_astcircles::mediumcircle1} at {_AstraVoidLoc::%player%}
						draw shapes {_astcircles::mediumcircle2} at {_AstraVoidLoc::%player%}
						wait 1 tick
						draw shapes {_astcircles::mediumcircle3} at {_AstraVoidLoc::%player%}
						draw shapes {_astcircles::largecircle} at {_AstraVoidLoc::%player%}
						wait 1 tick
						draw shapes {_astcircles::largecircle1} at {_AstraVoidLoc::%player%}
						draw shapes {_astcircles::largecircle2} at {_AstraVoidLoc::%player%}
						wait 1 tick
						draw shapes {_astcircles::largecircle3} at {_AstraVoidLoc::%player%}
						draw shapes {_astcircles::finalcircle} at {_AstraVoidLoc::%player%}
						wait 1 tick
						draw shapes {_astcircles::finalcircle} at {_AstraVoidLoc::%player%}
						loop 10 times:
							loop 4 times: # 3 seconds
								draw shapes {_astcircles::finalcircle} at {_AstraVoidLoc::%player%}
								draw shapes {_astcircles::largecircle2} at {_AstraVoidLoc1::%player%}
								draw shapes {_astcircles::largecircle} at {_AstraVoidLoc2::%player%}
								draw shapes {_astcircles::mediumcircle2} at {_AstraVoidLoc3::%player%}
								draw shapes {_astcircles::mediumcircle} at {_AstraVoidLoc4::%player%}
								draw shapes {_astcircles::smallcircle} at {_AstraVoidLoc5::%player%}
								loop all players within 6 blocks of {_AstraVoidLoc::%player%}:
									if loop-player is not player:
										if {Trusted.%player%.%loop-player%} is not true:
											set {Tag..%loop-player%} to 1
											apply darkness 1 without particles whilst hiding the potion icon to loop-player for 2 seconds replacing the existing effect
								wait 15 ticks

on right click:
	if {Tag..%player%} < 1:
		if {Tag..%player%} < 1:
			if {Bliss.Energy.%player%} > 1:
				#if event-entity is not set:
				if player's held item is {Bliss.Astra.T2.%player%}:
					if {astra.cooldown3.%player%} is true:
						send "&5🔮 &cYour &7Astral Projection &cskill is on cooldown for &5%{Astra3.%player%}%" to player
					if {AstraProjection.%player%} is true:
						blissAstraPorjectionOff(player)
						set {astra.cooldown3.%player%} to true
					if {astra.cooldown3.%player%} is not true:
						if {AstraProjection.%player%} is not true:
							if {AstraDodge.%player%} is not true:
								send "&5🔮 &bYou have activated §7Astral Projection" to player
								spawn zombie at location of player
								set {_i} to player's held item
								set {_oi} to player's off hand item
								set {_h} to player's helmet
								set {_c} to player's chestplate
								set {_l} to player's leggings
								set {_b} to player's boots
								set {astra.location::%player%} to last spawned zombie
								set {astra.location::%player%}'s held item to {_i}
								set {astra.location::%player%}'s off hand item to {_oi}
								set {astra.location::%player%}'s helmet to {_h}
								set {astra.location::%player%}'s chestplate to {_c}
								set {astra.location::%player%}'s leggings to {_l}
								set {astra.location::%player%}'s boots to {_b}
								set name of last spawned zombie to "%player%"
								apply slowness 255 without particles whilst hiding the potion icon to last spawned zombie for 999 minutes
								apply resistance 255 without particles whilst hiding the potion icon to last spawned zombie for 999 minutes
								apply fire resistance 255 without particles whilst hiding the potion icon to last spawned zombie for 999 minutes
								apply water breathing 255 without particles whilst hiding the potion icon to last spawned zombie for 999 minutes
								set {AstraProjection.%player%} to true
								set {AstraSec3.%player%} to 0
								set {AstraMin3.%player%} to 5
								set {astra.cooldown3.%player%} to true
								set {_s} to 0
								loop 41 times:
									clear {Astra.Projection.Inventory.%player%.Indexes.%{_s}%}
									add 1 to {_s}
								clear {Astra.Projection.Inventory.%player%::*}
								loop all items in player's inventory:
									set {Astra.Projection.Inventory.%player%.Indexes.%index of loop-item%} to loop-item
								clear player's inventory
								set player's held item to {_i}
								apply invisibility 1 without particles whilst hiding the potion icon to player for 6900 days replacing the existing effect
								set the player's walk speed to 0.35
								set {Bliss.Ghost.IDK.%player%} to true
								set {ghoost...%player%} to true
								kill {dag.%player%}
								kill {dag2.%player%}
								kill {dag3.%player%}
								kill {dag4.%player%}
								kill {dag5.%player%}
				if player's off hand item is {Bliss.Astra.T2.%player%}:
					player is sneaking:
						if clicked block is set:
							if {Entity,%player%} is 2:
								spawn {entity.%player%} 1 block above event-block
								set {Entity,%player%} to 0
								set {astra.cooldown.%player%} to false
							if {Entity,%player%} is 3:
								spawn {entity.%player%} 1 block above event-block
								set {entity.%player%} to {entity2.%player%}
								remove 1 from {Entity,%player%} 
				if player's off hand item is {Bliss.Astra.T1.%player%}:
					player is sneaking:
						if clicked block is set:
							if {Entity,%player%} is 2:
								spawn {entity.%player%} 1 block above event-block
								set {Entity,%player%} to 0
								set {astra.cooldown.%player%} to false
							if {Entity,%player%} is 3:
								spawn {entity.%player%} 1 block above event-block
								set {entity.%player%} to {entity2.%player%}
								remove 1 from {Entity,%player%} 
on disconnect:
	blissAstraPorjectionOff(player)

#Daggers

on teleport:
	if player's gamemode is spectator:
		if {Bliss.Projection.%player%} is true:
			cancel event
			set the player's gamemode to survival
			set {Bliss.Projection.%player%} to false
			loop all players:
				if loop-player is within 1 block around player:
					if loop-player is not player:
						add 30 to {Tag..%loop-player%}
						send "&5🔮 &bYou haunted and disabled §e%loop-player% &bgem for §e30s" to player

every 1 second:
	loop all players:
		if loop-player's gamemode is spectator:
			if {Bliss.Projection.%loop-player%} is true:
				if spectator target of loop-player is not set:
					wait 2 ticks
					if spectator target of loop-player is not set:
						set loop-player's gamemode to survival
						set {Bliss.Projection.%loop-player%} to false




on sneak toggle:
	if {Bliss.Projection.%player%} is true:
		set the player's gamemode to survival
		set {Bliss.Projection.%player%} to false
		loop all players:
			if loop-player is within 1 block around player:
				if loop-player is not player:
					add 30 to {Tag..%loop-player%}
					send "&5🔮 &bYou haunted and disabled §e%loop-player% &bgem for §e30s" to player
on pick up:
	if {ghoost...%player%} is true:
		cancel event

on death:
	loop all players:
		if victim is {astra.location::%loop-player%}:
			cancel event
			blissAstraPorjectionOff(loop-player)
								

on damage:
	if {Bliss.Projection.Person.%victim%} is true:
		loop all players:
			if loop-player is within 1 block around victim:
				if {Bliss.Projection.%loop-player%} is true:
					set {Bliss.Projection.%loop-player%} to false
					set {Bliss.Projection.Person.%victim%} to false
					set the loop-player's gamemode to survival
					add 15 to {Tag..%victim%}
					send "&5🔮 &bYou haunted and disabled §e%victim% &bgem for §e15s" to loop-player
					wait 1 tick
	if {ghoost...%damager%} is not true:
		if damager is not sneaking:
			if {Tag..%damager%} < 1:
				if {Bliss.Energy.%damager%} > 1:
					if {astra.cooldown2.%damager%} is false:
						if damager's held item is {Bliss.Astra.T2.%damager%}:
							send "&5🔮 &bYou have used §7Unbounded &bskill on &a%victim%" to damager
							set {AstraMin2.%damager%} to 1
							set {AstraSec2.%damager%} to 20
							set {astra.cooldown2.%damager%} to true
							set the damager's gamemode to spectator
							set spectator target of damager to victim
							wait 1 second
							set {Bliss.Projection.%damager%} to true
							set {Bliss.Projection.Person.%victim%} to true
	loop all players:
		if victim is {astra.location::%loop-player%}:
			cancel event
			blissAstraPorjectionOff(loop-player)
	if {Tag..%victim%} < 1:
		if {Bliss.Energy.%victim%} > 1:
			if victim's off hand item is {Bliss.Astra.T1.%victim%}:
				chance of 10%
				cancel event
				set {AstraDodge.%victim%} to true
				apply invisibility to victim for 20 ticks
				set {_h} to victim's helmet
				set {_c} to victim's chestplate
				set {_l} to victim's leggings
				set {_b} to victim's boots
				make victim invulnerable
				delete helmet of the victim
				delete chestplate of the victim
				delete leggings of the victim
				delete boots of the victim
				loop 2 times:
					set {_astra.ghost.idk.%victim%} to location 1.2 metres above and 0.5 metres forward and 0.5 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.2 metres above and -0.5 metres forward and -0.5 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.2 metres above and -0.5 metres forward and 0.5 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.2 metres above and 0.5 metres forward and -0.5 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 0.4 metres above and 0.3 metres forward and 0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 0.4 metres above and -0.3 metres forward and -0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 0.4 metres above and -0.3 metres forward and 0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 0.4 metres above and 0.3 metres forward and -0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.6 metres above and 0.3 metres forward and 0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.6 metres above and -0.3 metres forward and -0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.6 metres above and -0.3 metres forward and 0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.6 metres above and 0.3 metres forward and -0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location at victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
				wait 25 ticks
				set victim's helmet to {_h}
				set victim's chestplate to {_c}
				set victim's leggings to {_l}
				set victim's boots to {_b}
				make victim vulnerable
				set {AstraDodge.%victim%} to false
			if victim's held item is {Bliss.Astra.T1.%victim%}:
				chance of 10%
				cancel event
				set {AstraDodge.%victim%} to true
				apply invisibility to victim for 20 ticks
				set {_h} to victim's helmet
				set {_c} to victim's chestplate
				set {_l} to victim's leggings
				set {_b} to victim's boots
				delete helmet of the victim
				delete chestplate of the victim
				delete leggings of the victim
				delete boots of the victim
				make victim invulnerable
				loop 2 times:
					set {_astra.ghost.idk.%victim%} to location 1.2 metres above and 0.5 metres forward and 0.5 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.2 metres above and -0.5 metres forward and -0.5 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.2 metres above and -0.5 metres forward and 0.5 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.2 metres above and 0.5 metres forward and -0.5 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 0.4 metres above and 0.3 metres forward and 0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 0.4 metres above and -0.3 metres forward and -0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 0.4 metres above and -0.3 metres forward and 0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 0.4 metres above and 0.3 metres forward and -0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.6 metres above and 0.3 metres forward and 0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.6 metres above and -0.3 metres forward and -0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.6 metres above and -0.3 metres forward and 0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.6 metres above and 0.3 metres forward and -0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location at victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
				wait 25 ticks
				set victim's helmet to {_h}
				set victim's chestplate to {_c}
				set victim's leggings to {_l}
				set victim's boots to {_b}
				make victim vulnerable
				set {AstraDodge.%victim%} to false
			if victim's off hand item is {Bliss.Astra.T2.%victim%}:
				chance of 15%
				cancel event
				set {AstraDodge.%victim%} to true
				apply invisibility to victim for 20 ticks
				set {_h} to victim's helmet
				set {_c} to victim's chestplate
				set {_l} to victim's leggings
				set {_b} to victim's boots
				make victim invulnerable
				delete helmet of the victim
				delete chestplate of the victim
				delete leggings of the victim
				delete boots of the victim
				loop 2 times:
					set {_astra.ghost.idk.%victim%} to location 1.2 metres above and 0.5 metres forward and 0.5 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.2 metres above and -0.5 metres forward and -0.5 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.2 metres above and -0.5 metres forward and 0.5 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.2 metres above and 0.5 metres forward and -0.5 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 0.4 metres above and 0.3 metres forward and 0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 0.4 metres above and -0.3 metres forward and -0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 0.4 metres above and -0.3 metres forward and 0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 0.4 metres above and 0.3 metres forward and -0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.6 metres above and 0.3 metres forward and 0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.6 metres above and -0.3 metres forward and -0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.6 metres above and -0.3 metres forward and 0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.6 metres above and 0.3 metres forward and -0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location at victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
				wait 25 ticks
				set victim's helmet to {_h}
				set victim's chestplate to {_c}
				set victim's leggings to {_l}
				set victim's boots to {_b}
				make victim vulnerable
				set {AstraDodge.%victim%} to false
			if victim's held item is {Bliss.Astra.T2.%victim%}:
				chance of 15%
				cancel event
				set {AstraDodge.%victim%} to true
				apply invisibility to victim for 20 ticks
				set {_h} to victim's helmet
				set {_c} to victim's chestplate
				set {_l} to victim's leggings
				set {_b} to victim's boots
				make victim invulnerable
				delete helmet of the victim
				delete chestplate of the victim
				delete leggings of the victim
				delete boots of the victim
				loop 2 times:
					set {_astra.ghost.idk.%victim%} to location 1.2 metres above and 0.5 metres forward and 0.5 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.2 metres above and -0.5 metres forward and -0.5 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.2 metres above and -0.5 metres forward and 0.5 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.2 metres above and 0.5 metres forward and -0.5 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 0.4 metres above and 0.3 metres forward and 0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 0.4 metres above and -0.3 metres forward and -0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 0.4 metres above and -0.3 metres forward and 0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 0.4 metres above and 0.3 metres forward and -0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.6 metres above and 0.3 metres forward and 0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.6 metres above and -0.3 metres forward and -0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.6 metres above and -0.3 metres forward and 0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location 1.6 metres above and 0.3 metres forward and -0.3 metres left victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
					set {_astra.ghost.idk.%victim%} to location at victim
					draw 3 dust using dustOption(rgb(106, 11, 184), 1) at {_astra.ghost.idk.%victim%} with extra 0 with force
				wait 25 ticks
				set victim's helmet to {_h}
				set victim's chestplate to {_c}
				set victim's leggings to {_l}
				set victim's boots to {_b}
				make victim vulnerable
				set {AstraDodge.%victim%} to false
	if {ghoost...%damager%} is true:
		cancel event
		if damager's held item is {Bliss.Astra.T2.%damager%}:
			if {AstraProjection.%damager%} is true:
				blissAstraPorjectionOff(damager)
				set {Tag..%damager%} to 1
				if {Tag..%victim%} > 1:
					add 15 to {Tag..%victim%}
				if {Tag..%victim%} < 1:
					set {Tag..%victim%} to 15
				send "&5🔮 &bSpooked &e%victim% &bfor &e15s" to damager
	if {ghoost...%victim%} is true:
		cancel event


on left click:
	if {Tag..%player%} < 1:
		if {Bliss.Energy.%player%} > 1:
			if {ghoost...%player%} is not true:
				if player's held item is {Bliss.Astra.T2.%player%}:
					if {astra.cooldown2.%player%} is true:
						if {Shootdagger..%player%} is false:
							send "&5🔮 &cYour §7Unbounded &cskill is on cooldown for &5%{Astra2.%player%}%" to player
					if {Shootdagger..%player%} is 1:
						teleport {dag.%player%} to player
						teleport {dag.%player%} to location 1.5 metres infront and 0.45 meters above player
						remove bossbar "daggers.%uuid of player%"
						set {Shootdagger..%player%} to false
					if {Shootdagger..%player%} is 2:
						teleport {dag2.%player%} to player
						teleport {dag2.%player%} to location 1.5 metres infront and 0.45 meters above player
						remove 1 from {Shootdagger..%player%}
					if {Shootdagger..%player%} is 3:
						teleport {dag3.%player%} to player
						teleport {dag3.%player%} to location 1.5 metres infront and 0.45 meters above player
						remove 1 from {Shootdagger..%player%}
					if {Shootdagger..%player%} is 4:
						teleport {dag4.%player%} to player
						teleport {dag4.%player%} to location 1.5 metres infront and 0.45 meters above player
						remove 1 from {Shootdagger..%player%}
					if {Shootdagger..%player%} is 5:
						teleport {dag5.%player%} to player
						teleport {dag5.%player%} to location 1.5 metres infront and 0.45 meters above player
						remove 1 from {Shootdagger..%player%}
					if {astra.cooldown2.%player%} is not true:
						#if player is sneaking:
						if {dragonegg.%player%} is not true:
							set {AstraMin2.%player%} to 1
							set {AstraSec2.%player%} to 20
						else:
							set {AstraMin2.%player%} to 0
							set {AstraSec2.%player%} to 45
						set {astra.cooldown2.%player%} to true
						set {Shootdagger..%player%} to 5
						spawn armor stand at player with nbt from "{Small:1b,Invisible:1b,Tags:[""%player%dag"",""dag""],ArmorItems:[{},{},{},{id:nautilus_shell,tag:{CustomModelData:230},Count:1}],ArmorDropChances:[0f,0f,0f,0f]}"
						set {Trusted.%player%.%last spawned armor stand%} to true
						set {dag.%player%} to last spawned armor stand
						set {dag.%player%}'s helmet to {Astra.Dagger}
						spawn armor stand at player with nbt from "{Small:1b,Invisible:1b,Tags:[""%player%dag2"",""dag2""],ArmorItems:[{},{},{},{id:nautilus_shell,tag:{CustomModelData:230},Count:1}],ArmorDropChances:[0f,0f,0f,0f]}"
						set {Trusted.%player%.%last spawned armor stand%} to true
						set {dag2.%player%} to last spawned armor stand
						set {dag2.%player%}'s helmet to {Astra.Dagger}
						spawn armor stand at player with nbt from "{Small:1b,Invisible:1b,Tags:[""%player%dag3"",""dag3""],ArmorItems:[{},{},{},{id:nautilus_shell,tag:{CustomModelData:230},Count:1}],ArmorDropChances:[0f,0f,0f,0f]}"
						set {Trusted.%player%.%last spawned armor stand%} to true
						set {dag3.%player%} to last spawned armor stand
						set {dag3.%player%}'s helmet to {Astra.Dagger}
						spawn armor stand at player with nbt from "{Small:1b,Invisible:1b,Tags:[""%player%dag4"",""dag4""],ArmorItems:[{},{},{},{id:nautilus_shell,tag:{CustomModelData:230},Count:1}],ArmorDropChances:[0f,0f,0f,0f]}"
						set {Trusted.%player%.%last spawned armor stand%} to true
						set {dag4.%player%} to last spawned armor stand
						set {dag4.%player%}'s helmet to {Astra.Dagger}
						spawn armor stand at player with nbt from "{Small:1b,Invisible:1b,Tags:[""%player%dag5"",""dag5""],ArmorItems:[{},{},{},{id:nautilus_shell,tag:{CustomModelData:230},Count:1}],ArmorDropChances:[0f,0f,0f,0f]}"
						set {Trusted.%player%.%last spawned armor stand%} to true
						set {dag5.%player%} to last spawned armor stand
						set {dag5.%player%}'s helmet to {Astra.Dagger}

						create bossbar titled "&fDaggers" and id "daggers.%uuid of player%" for player with progress 0 with colors blue
						set {astra.daggers.bar.%player%} to value of bossbar "daggers.%uuid of player%"
						set {astra.daggers.bar.%player%} to 100
						set bossbar "daggers.%uuid of player%" value to {astra.daggers.bar.%player%}
						wait 1 second
						loop 49 times:
							loop 2 times:
								remove 1 from {astra.daggers.bar.%player%}
								set bossbar "daggers.%uuid of player%" value to {astra.daggers.bar.%player%}
								set {Trusted.%player%.%player%} to true
								loop 5 times:
									wait 1 tick
									loop all entities:
										if {Trusted.%player%.%loop-entity%} is not true:
											if loop-entity is within 1.25 blocks around {dag.%player%}:
												set {DaggerDamage.%loop-entity%} to true
												damage loop-entity by 6 hearts
												add 7 to {Tag..%loop-entity%}
												teleport {dag.%player%} to location 100 meters above loop-entity
												kill {dag.%player%}
												wait 5 ticks
												set {DaggerDamage.%loop-entity%} to false
											if loop-entity is within 1.25 blocks around {dag2.%player%}:
												set {DaggerDamage.%loop-entity%} to true
												damage loop-entity by 6 hearts
												add 7 to {Tag..%loop-entity%}
												teleport {dag2.%player%} to location 100 meters above loop-entity
												kill {dag2.%player%}
												wait 5 ticks
												set {DaggerDamage.%loop-entity%} to false
											if loop-entity is within 1.25 blocks around {dag3.%player%}:
												set {DaggerDamage.%loop-entity%} to true
												damage loop-entity by 6 hearts
												add 7 to {Tag..%loop-entity%}
												teleport {dag3.%player%} to location 100 meters above loop-entity
												kill {dag3.%player%}
												wait 5 ticks
												set {DaggerDamage.%loop-entity%} to false
											if loop-entity is within 1.25 blocks around {dag4.%player%}:
												set {DaggerDamage.%loop-entity%} to true
												damage loop-entity by 6 hearts
												add 7 to {Tag..%loop-entity%}
												teleport {dag4.%player%} to location 100 meters above loop-entity
												kill {dag4.%player%}
												wait 5 ticks
												set {DaggerDamage.%loop-entity%} to false
											if loop-entity is within 1.25 blocks around {dag5.%player%}:
												set {DaggerDamage.%loop-entity%} to true
												damage loop-entity by 6 hearts
												add 7 to {Tag..%loop-entity%}
												teleport {dag5.%player%} to location 100 meters above loop-entity
												kill {dag5.%player%}
												wait 5 ticks
												set {DaggerDamage.%loop-entity%} to false
						set {Shootdagger..%player%} to false
						remove bossbar "daggers.%uuid of player%"
						kill {dag.%player%}
						kill {dag2.%player%}
						kill {dag3.%player%}
						kill {dag4.%player%}
						kill {dag5.%player%}

on death:
	if {DaggerDamage.%victim%} is true:
	#if {Shootdagger..%attacker%} is not false:
		set death message to "%victim% was slain by %attacker's uuid% using &f[<##A01FFF>&lᴀsᴛʀᴀ <##FFD773>ɢᴇᴍ&f]"
on death:
	if {Tag..%attacker%} < 1:
		if {Bliss.Energy.%attacker%} > 1:
			if attacker's off hand item is {Bliss.Astra.T1.%attacker%}:
				if {Entity,%attacker%} is not 3:
					add 1 to {Entity,%attacker%}
				#if {Entity,%attacker%} > 2:
					#set {astra.cooldown.%attacker%} to true
				if victim is a zombified piglin:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to zombified piglin
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to zombified piglin
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to zombified piglin
				if victim is a zombie villager:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to zombie villager
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to zombie villager
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to zombie villager
				if victim is a zombie:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to zombie
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to zombie
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to zombie
				if victim is a zombie horse:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to zombie horse
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to zombie horse
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to zombie horse
				if victim is a zoglin:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to zoglin
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to zoglin
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to zoglin
				if victim is a wolf:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to wolf
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to wolf
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to wolf
				if victim is a wither skeleton:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to wither skeleton
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to wither skeleton
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to wither skeleton
				if victim is a witch:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to witch
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to witch
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to witch
				if victim is a warden:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to warden
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to warden
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to warden
				if victim is a wandering trader:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to wandering trader
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to wandering trader
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to wandering trader
				if victim is a vindicator:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to vindicator
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to vindicator
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to vindicator
				if victim is a villager:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to villager
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to villager
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to villager
				if victim is a vex:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to vex
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to vex
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to vex
				if victim is a turtle:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to turtle
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to turtle
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to turtle
				if victim is a tropical fish:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to tropical fish
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to tropical fish
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to tropical fish
				if victim is a trader llama:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to trader llama
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to trader llama
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to trader llama
				if victim is a tadpole:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to tadpole
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to tadpole
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to tadpole
				if victim is a strider:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to strider
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to strider
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to strider
				if victim is a stray:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to stray
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to stray
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to stray
				if victim is a squid:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to squid
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to squid
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to squid
				if victim is a spider:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to spider
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to spider
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to spider
				if victim is a snow golem:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to snow golem
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to snow golem
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to snow golem
				if victim is a sniffer:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to sniffer
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to sniffer
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to sniffer
				if victim is a slime:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to slime
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to slime
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to slime
				if victim is a pufferfish:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to pufferfish
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to pufferfish
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to pufferfish
				if victim is a rabbit:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to rabbit
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to rabbit
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to rabbit
				if victim is a ravager:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to ravager
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to ravager
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to ravager
				if victim is a salmon:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to salmon
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to salmon
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to salmon
				if victim is a sheep:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to sheep
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to sheep
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to sheep
				if victim is a shulker:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to shulker
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to shulker
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to shulker
				if victim is a silverfish:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to silverfish
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to silverfish
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to silverfish
				if victim is a skeleton:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to skeleton
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to skeleton
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to skeleton
				if victim is a skeleton horse:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to skeleton horse
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to skeleton horse
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to skeleton horse
				if victim is a ocelot:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to ocelot
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to ocelot
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to ocelot
				if victim is a panda:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to panda
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to panda
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to panda
				if victim is a parrot:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to parrot
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to parrot
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to parrot
				if victim is a phantom:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to phantom
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to phantom
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to phantom
				if victim is a pig:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to pig
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to pig
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to pig
				if victim is a piglin:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to piglin
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to piglin
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to piglin
				if victim is a piglin brute:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to piglin brute
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to piglin brute
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to piglin brute
				if victim is a pillager:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to pillager
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to pillager
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to pillager	
				if victim is a polar bear:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to polar bear
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to polar bear
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to polar bear
				if victim is a guardian:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to guardian
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to guardian
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to guardian
				if victim is a hoglin:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to hoglin
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to hoglin
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to hoglin
				if victim is a horse:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to horse
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to horse
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to horse
				if victim is a husk:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to husk
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to husk
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to husk
				if victim is a iron golem:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to iron golem
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to iron golem
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to iron golem
				if victim is a llama:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to llama
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to llama
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to llama
				if victim is a magma cube:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to magma cube
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to magma cube
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to magma cube
				if victim is a mooshroom:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to mooshroom
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to mooshroom
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to mooshroom
				if victim is a mule:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to mule
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to mule
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to mule
				if victim is a goat:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to goat
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to goat
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to goat
				if victim is a glow squid:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to glow squid
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to glow squid
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to glow squid
				if victim is a ghast:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to ghast
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to ghast
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to ghast
				if victim is a frog:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to frog
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to frog
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to frog
				if victim is a fox:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to fox
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to fox
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to fox
				if victim is a endermite:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to endermite
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to endermite
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to endermite
				if victim is a enderman:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to enderman
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to enderman
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to enderman
				if victim is a elder guardian:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to elder guardian
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to elder guardian
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to elder guardian
				if victim is a cat:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to cat
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to cat
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to cat
				if victim is a cave spider:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to cave spider
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to cave spider
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to cave spider
				if victim is a chicken:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to chicken
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to chicken
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to chicken
				if victim is a cod:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to cod
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to cod
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to cod
				if victim is a cow:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to cow
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to cow
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to cow
				if victim is a creeper:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to creeper
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to creeper
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to creeper
				if victim is a dolphin:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to dolphin
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to dolphin
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to dolphin
				if victim is a donkey:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to donkey
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to donkey
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to donkey
				if victim is a drowned:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to drowned
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to drowned
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to drowned
				if victim is a camel:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to camel
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to camel
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to camel
				if victim is a blaze:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to blaze
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to blaze
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to blaze
				if victim is a bee:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to bee
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to bee
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to bee
				if victim is a bat:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to bat
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to bat
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to bat
				if victim is a allay:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to allay
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to allay
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to allay
				if victim is a axolotl:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to axolotl
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to axolotl
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to axolotl
			if attacker's off hand item is {Bliss.Astra.T2.%attacker%}:
				if {Entity,%attacker%} is not 3:
					add 1 to {Entity,%attacker%}
				#if {Entity,%attacker%} > 2:
					#set {astra.cooldown.%attacker%} to true
				if victim is a zombified piglin:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to zombified piglin
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to zombified piglin
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to zombified piglin
				if victim is a zombie villager:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to zombie villager
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to zombie villager
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to zombie villager
				if victim is a zombie:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to zombie
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to zombie
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to zombie
				if victim is a zombie horse:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to zombie horse
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to zombie horse
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to zombie horse
				if victim is a zoglin:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to zoglin
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to zoglin
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to zoglin
				if victim is a wolf:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to wolf
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to wolf
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to wolf
				if victim is a wither skeleton:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to wither skeleton
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to wither skeleton
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to wither skeleton
				if victim is a witch:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to witch
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to witch
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to witch
				if victim is a warden:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to warden
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to warden
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to warden
				if victim is a wandering trader:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to wandering trader
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to wandering trader
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to wandering trader
				if victim is a vindicator:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to vindicator
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to vindicator
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to vindicator
				if victim is a villager:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to villager
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to villager
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to villager
				if victim is a vex:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to vex
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to vex
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to vex
				if victim is a turtle:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to turtle
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to turtle
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to turtle
				if victim is a tropical fish:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to tropical fish
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to tropical fish
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to tropical fish
				if victim is a trader llama:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to trader llama
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to trader llama
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to trader llama
				if victim is a tadpole:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to tadpole
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to tadpole
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to tadpole
				if victim is a strider:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to strider
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to strider
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to strider
				if victim is a stray:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to stray
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to stray
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to stray
				if victim is a squid:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to squid
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to squid
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to squid
				if victim is a spider:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to spider
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to spider
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to spider
				if victim is a snow golem:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to snow golem
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to snow golem
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to snow golem
				if victim is a sniffer:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to sniffer
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to sniffer
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to sniffer
				if victim is a slime:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to slime
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to slime
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to slime
				if victim is a pufferfish:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to pufferfish
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to pufferfish
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to pufferfish
				if victim is a rabbit:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to rabbit
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to rabbit
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to rabbit
				if victim is a ravager:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to ravager
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to ravager
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to ravager
				if victim is a salmon:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to salmon
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to salmon
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to salmon
				if victim is a sheep:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to sheep
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to sheep
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to sheep
				if victim is a shulker:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to shulker
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to shulker
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to shulker
				if victim is a silverfish:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to silverfish
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to silverfish
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to silverfish
				if victim is a skeleton:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to skeleton
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to skeleton
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to skeleton
				if victim is a skeleton horse:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to skeleton horse
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to skeleton horse
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to skeleton horse
				if victim is a ocelot:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to ocelot
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to ocelot
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to ocelot
				if victim is a panda:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to panda
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to panda
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to panda
				if victim is a parrot:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to parrot
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to parrot
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to parrot
				if victim is a phantom:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to phantom
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to phantom
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to phantom
				if victim is a pig:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to pig
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to pig
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to pig
				if victim is a piglin:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to piglin
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to piglin
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to piglin
				if victim is a piglin brute:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to piglin brute
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to piglin brute
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to piglin brute
				if victim is a pillager:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to pillager
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to pillager
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to pillager	
				if victim is a polar bear:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to polar bear
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to polar bear
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to polar bear
				if victim is a guardian:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to guardian
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to guardian
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to guardian
				if victim is a hoglin:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to hoglin
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to hoglin
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to hoglin
				if victim is a horse:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to horse
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to horse
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to horse
				if victim is a husk:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to husk
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to husk
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to husk
				if victim is a iron golem:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to iron golem
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to iron golem
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to iron golem
				if victim is a llama:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to llama
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to llama
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to llama
				if victim is a magma cube:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to magma cube
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to magma cube
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to magma cube
				if victim is a mooshroom:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to mooshroom
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to mooshroom
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to mooshroom
				if victim is a mule:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to mule
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to mule
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to mule
				if victim is a goat:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to goat
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to goat
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to goat
				if victim is a glow squid:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to glow squid
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to glow squid
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to glow squid
				if victim is a ghast:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to ghast
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to ghast
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to ghast
				if victim is a frog:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to frog
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to frog
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to frog
				if victim is a fox:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to fox
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to fox
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to fox
				if victim is a endermite:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to endermite
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to endermite
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to endermite
				if victim is a enderman:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to enderman
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to enderman
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to enderman
				if victim is a elder guardian:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to elder guardian
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to elder guardian
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to elder guardian
				if victim is a cat:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to cat
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to cat
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to cat
				if victim is a cave spider:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to cave spider
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to cave spider
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to cave spider
				if victim is a chicken:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to chicken
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to chicken
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to chicken
				if victim is a cod:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to cod
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to cod
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to cod
				if victim is a cow:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to cow
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to cow
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to cow
				if victim is a creeper:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to creeper
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to creeper
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to creeper
				if victim is a dolphin:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to dolphin
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to dolphin
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to dolphin
				if victim is a donkey:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to donkey
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to donkey
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to donkey
				if victim is a drowned:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to drowned
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to drowned
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to drowned
				if victim is a camel:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to camel
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to camel
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to camel
				if victim is a blaze:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to blaze
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to blaze
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to blaze
				if victim is a bee:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to bee
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to bee
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to bee
				if victim is a bat:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to bat
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to bat
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to bat
				if victim is a allay:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to allay
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to allay
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to allay
				if victim is a axolotl:
					if {Entity,%attacker%} is 1:
						set {entity.%attacker%} to axolotl
					if {Entity,%attacker%} is 2:
						set {entity2.%attacker%} to axolotl
					if {Entity,%attacker%} is 3:
						set {entity3.%attacker%} to axolotl


#[<-----------------Fire----------------->]


every 0.25 seconds:
	loop all players:
		if {Tag..%loop-player%} < 1:
			if {Bliss.Energy.%loop-player%} > 1:
				if {FireMin.%loop-player%} < 1:
					if {FireSec.%loop-player%} > 0:
						set {Fire1.%loop-player%} to "%{FireSec.%loop-player%}%s"
					if {FireSec.%loop-player%} < 1:
						set {Fire1.%loop-player%} to "&aReady!"
				if {FireMin.%loop-player%} < 0:
					set {Fire1.%loop-player%} to "&aReady!"
				if {FireMin.%loop-player%} > 0:
					if {FireSec.%loop-player%} < 1:
						set {Fire1.%loop-player%} to "%{FireMin.%loop-player%}%m"
					if {FireSec.%loop-player%} > 0:
						set {Fire1.%loop-player%} to "%{FireMin.%loop-player%}%m %{FireSec.%loop-player%}%s"
				if {FireMin2.%loop-player%} < 1:
					if {FireSec2.%loop-player%} > 0:
						set {Fire2.%loop-player%} to "%{FireSec2.%loop-player%}%s"
					if {FireSec2.%loop-player%} < 1:
						set {Fire2.%loop-player%} to "&aReady!"
				if {FireMin2.%loop-player%} < 0:
					set {Fire2.%loop-player%} to "&aReady!"
				if {FireMin2.%loop-player%} > 0:
					if {FireSec2.%loop-player%} < 1:
						set {Fire2.%loop-player%} to "%{FireMin2.%loop-player%}%m"
					if {FireSec2.%loop-player%} > 0:
						set {Fire2.%loop-player%} to "%{FireMin2.%loop-player%}%m %{FireSec2.%loop-player%}%s"
				if {FireMin3.%loop-player%} < 1:
					if {FireSec3.%loop-player%} > 0:
						set {Fire3.%loop-player%} to "%{FireSec3.%loop-player%}%s"
					if {FireSec3.%loop-player%} < 1:
						set {Fire3.%loop-player%} to "&aReady!"
				if {FireMin3.%loop-player%} < 0:
					set {Fire3.%loop-player%} to "&aReady!"
				if {FireMin3.%loop-player%} > 0:
					if {FireSec3.%loop-player%} < 1:
						set {Fire3.%loop-player%} to "%{FireMin3.%loop-player%}%m"
					if {FireSec3.%loop-player%} > 0:
						set {Fire3.%loop-player%} to "%{FireMin3.%loop-player%}%m %{FireSec3.%loop-player%}%s"
				if {FireMin4.%loop-player%} < 1:
					if {FireSec4.%loop-player%} > 0:
						if {FireSec4.%loop-player%} < 30:
							set {Fire4.%loop-player%} to "%{FireSec4.%loop-player%}%s"
						if {FireSec4.%loop-player%} > 29:
							set {Fire4.%loop-player%} to "&cActive.."
					if {FireSec4.%loop-player%} < 1:
						set {Fire4.%loop-player%} to "&aReady!"
				if {FireMin4.%loop-player%} < 0:
					set {Fire4.%loop-player%} to "&aReady!"
				if {FireMin4.%loop-player%} > 0:
					if {FireSec4.%loop-player%} < 1:
						set {Fire4.%loop-player%} to "%{FireMin4.%loop-player%}%m"
					if {FireSec4.%loop-player%} > 0:
						set {Fire4.%loop-player%} to "%{FireMin4.%loop-player%}%m %{FireSec4.%loop-player%}%s"
			if loop-player's off hand item is {Bliss.Fire.T1.%loop-player%}:
				blissFireAutoEnchantT1(loop-player)
				blissFireActionBarT1(loop-player)
			if loop-player is holding {Bliss.Fire.T1.%loop-player%}:
				blissFireAutoEnchantT1(loop-player)
				blissFireActionBarT1(loop-player)
			if loop-player's off hand item is {Bliss.Fire.T2.%loop-player%}:
				blissFireAutoEnchantT2(loop-player)
				blissFireActionBarT2(loop-player)
			if loop-player is holding {Bliss.Fire.T2.%loop-player%}:
				blissFireAutoEnchantT2(loop-player)
				blissFireActionBarT2(loop-player)

#Functions
function blissFireAutoEnchantT2(p: player):
	if {fire.cooldown.%{_p}%} is false:
		#send "&6🔮 &bAuto Enchanting" to {_p}
		set {FireMin.%{_p}%} to 1
		set {FireSec.%{_p}%} to 0
		set {fire.cooldown.%{_p}%} to true
		loop all items in {_p}'s inventory:
			if {Prog1} is not true:
				if {Prog2} is not true:
					loop-item is not enchanted with fire aspect:
						if loop-item is any sword:
							enchant the loop-item with fire aspect 2
					loop-item is not enchanted with flame:
						if loop-item is a bow:
							enchant the loop-item with flame

function blissFireAutoEnchantT1(p: player):
	if {fire.cooldown.%{_p}%} is false:
		#send "&6🔺 &bAuto Enchanting" to {_p}
		set {FireMin.%{_p}%} to 1
		set {FireSec.%{_p}%} to 0
		set {fire.cooldown.%{_p}%} to true
		loop all items in {_p}'s inventory:
			if {Prog1} is not true:
				if {Prog2} is not true:
					loop-item is not enchanted with fire aspect:
						if loop-item is any sword:
							enchant the loop-item with fire aspect 1
					loop-item is not enchanted with flame:
						if loop-item is a bow:
							enchant the loop-item with flame
function blissFireActionBarT2(p: player):
	if {Bliss.Energy.%{_p}%} > 1:
		apply fire resistance 1 without particles whilst hiding the potion icon to {_p} for 2 seconds replacing the existing effect
		send action bar "&f🧨 &b%{Fire3.%{_p}%}%  &6🔮 &b%{Fire4.%{_p}%}%  &f🥾 &b%{Fire2.%{_p}%}%" to {_p}
function blissFireActionBarT1(p: player):
	if {Bliss.Energy.%{_p}%} > 1:
		apply fire resistance 1 without particles whilst hiding the potion icon to {_p} for 2 seconds replacing the existing effect
		send action bar "&6🔺 &b%{Fire4.%{_p}%}%" to {_p}

# Autosmelt with Fire

on drop:
	if player is within 5 blocks around {Fire.Crisp.Location::%player%}:
		if event-item is potato:
			set item of event-dropped item to baked potato
			play "BLOCK_FIRE_EXTINGUISH" to player
		if event-item is raw iron:
			set item of event-dropped item to iron ingot
			play "BLOCK_FIRE_EXTINGUISH" to player
		if event-item is raw copper:
			set item of event-dropped item to copper ingot
			play "BLOCK_FIRE_EXTINGUISH" to player
		if event-item is raw gold:
			set item of event-dropped item to gold ingot
			play "BLOCK_FIRE_EXTINGUISH" to player
		if event-item is mutton:
			set item of event-dropped item to cooked mutton
			play "BLOCK_FIRE_EXTINGUISH" to player
		if event-item is beef:
			set item of event-dropped item to cooked beef
			play "BLOCK_FIRE_EXTINGUISH" to player
		if event-item is ancient debris:
			set item of event-dropped item to netherite scrap
			play "BLOCK_FIRE_EXTINGUISH" to player
		if event-item is sand:
			set item of event-dropped item to glass
			play "BLOCK_FIRE_EXTINGUISH" to player
		if event-item is cobblestone:
			set item of event-dropped item to stone
			play "BLOCK_FIRE_EXTINGUISH" to player
		if event-item is cobbled deepslate:
			set item of event-dropped item to deepslate
			play "BLOCK_FIRE_EXTINGUISH" to player
		if event-item is chicken:
			set item of event-dropped item to cooked chicken
		if event-item is pork:
			set item of event-dropped item to cooked pork
			play "BLOCK_FIRE_EXTINGUISH" to player
		if event-item is oak log or spruce log or acacia log or dark oak log or cherry log or birch log or jungle log or mangrove log:
			set item of event-dropped item to charcoal
			play "BLOCK_FIRE_EXTINGUISH" to player
		if event-item is clay:
			set item of event-dropped item to brick
			play "BLOCK_FIRE_EXTINGUISH" to player
			

# Crisp 

on right click:
	if player's off hand item is {Bliss.Fire.T1.%player%}:
		if {Tag..%player%} < 1:
			if {Bliss.Energy.%player%} > 1:
				if player's held item is a sword or air or an axe:
					if {fire.cooldown4.%player%} is true:
						send "&6🔮 &cYour §6Crisp &cskill is on cooldown for &6%{Fire4.%player%}%" to player
					if {fire.cooldown4.%player%} is not true:
						if {-DoubleClick::%player's uuid%} is not set:
							set {-DoubleClick::%player's uuid%} to true
						else:
							delete {-DoubleClick::%player's uuid%}
							send "&6🔮 &cYou have activated §6Crisp" to player
							set {FireMin4.%player%} to 0
							set {FireSec4.%player%} to 42
							set {fire.cooldown4.%player%} to true
							set {Fire.Crisp.Location::%player%} to player's location
							set {_fccircles::circle} to a circle of radius 0.75
							set {_fccircles::smallcircle} to a circle of radius 1
							set {_fccircles::smallcircle1} to a circle of radius 1.25
							set {_fccircles::smallcircle2} to a circle of radius 1.5
							set {_fccircles::smallcircle3} to a circle of radius 1.75
							set {_fccircles::mediumcircle} to a circle of radius 2
							set {_fccircles::mediumcircle1} to a circle of radius 2.25
							set {_fccircles::mediumcircle2} to a circle of radius 2.5
							set {_fccircles::mediumcircle3} to a circle of radius 2.75
							set {_fccircles::largecircle} to a circle of radius 3
							set {_fccircles::largecircle1} to a circle of radius 3.5
							set {_fccircles::largecircle2} to a circle of radius 4
							set {_fccircles::largecircle3} to a circle of radius 4.5
							set {_fccircles::finalcircle} to a circle of radius 5
							set particle of {_fccircles::*} to dust particle using dustOption(rgb(255, 119, 0), 1) with force
							draw shapes {_fccircles::circle} at {Fire.Crisp.Location::%player%}
							draw shapes {_fccircles::smallcircle} at {Fire.Crisp.Location::%player%}
							wait 1 tick
							draw shapes {_fccircles::smallcircle1} at {Fire.Crisp.Location::%player%}
							draw shapes {_fccircles::smallcircle2} at {Fire.Crisp.Location::%player%}
							wait 1 tick
							draw shapes {_fccircles::smallcircle3} at {Fire.Crisp.Location::%player%}
							draw shapes {_fccircles::mediumcircle} at {Fire.Crisp.Location::%player%}
							wait 1 tick
							draw shapes {_fccircles::mediumcircle1} at {Fire.Crisp.Location::%player%}
							draw shapes {_fccircles::mediumcircle2} at {Fire.Crisp.Location::%player%}
							wait 1 tick
							draw shapes {_fccircles::mediumcircle3} at {Fire.Crisp.Location::%player%}
							draw shapes {_fccircles::largecircle} at {Fire.Crisp.Location::%player%}
							wait 1 tick
							draw shapes {_fccircles::largecircle1} at {Fire.Crisp.Location::%player%}
							draw shapes {_fccircles::largecircle2} at {Fire.Crisp.Location::%player%}
							wait 1 tick
							draw shapes {_fccircles::largecircle3} at {Fire.Crisp.Location::%player%}
							draw shapes {_fccircles::finalcircle} at {Fire.Crisp.Location::%player%}
							wait 1 tick
							draw shapes {_fccircles::finalcircle} at {Fire.Crisp.Location::%player%}
							set {_loc} to location of player
							set {_radius} to 5
							set {_blocks::*} to air
							set {_blocks2::*} to air
							set {_blocks3::*} to air
							set {-crispActive} to true
							set {-CrispLoc::%player's uuid%} to location of player

							loop blocks in radius {_radius} around {_loc}:
								set {-unbreakable::%loop-block%} to true
								if loop-block is short grass:
									set {_originalType4} to loop-block's type
									set {_blockLoc4} to loop-block's location
									add {_blockLoc4} to {_blocks4::*}
									set {_blocks4::%{_blockLoc4}%} to {_originalType4}
									set loop-block to crimson root or warped root
								
								if loop-block is tall grass:
									set {_originalType5} to loop-block's type
									set {_blockLoc5} to loop-block's location
									add {_blockLoc5} to {_blocks5::*}
									set {_blocks5::%{_blockLoc5}%} to {_originalType5}
									set loop-block to twisting vine or weeping vine
									
							loop blocks in radius {_radius} around {_loc}:
								set {-unbreakable::%loop-block%} to true
								if loop-block is oak leaves or spruce leaves or birch leaves or acacia leaves or cherry leaves or mangrove leaves or jungle leaves or dark oak leaves:
									set {_originalType3} to loop-block's type
									set {_blockLoc3} to loop-block's location
									add {_blockLoc3} to {_blocks3::*}
									set {_blocks3::%{_blockLoc3}%} to {_originalType3}
									set loop-block to nether wart block or warped wart block
							
								if loop-block is grass block or stone or dirt:
									set {_originalType} to loop-block's type
									set {_blockLoc} to loop-block's location
									add {_blockLoc} to {_blocks::*}
									set {_blocks::%{_blockLoc}%} to {_originalType}
									set loop-block to netherrack or magma or basalt
								
								if loop-block is oak log or spruce log or acacia log or dark oak log or cherry log or birch log or jungle log or mangrove log:
									set {_originalType2} to loop-block's type
									set {_blockLoc2} to loop-block's location
									add {_blockLoc2} to {_blocks2::*}
									set {_blocks2::%{_blockLoc2}%} to {_originalType2}
									set loop-block to crimson stem or warped stem

							loop 10 times: # 10 seconds
								loop 2 times:
									wait 10 ticks
									loop all blocks in radius 5 around {Fire.Crisp.Location::%player%}:
										if loop-block is stationary water or water:
											set loop-block to air
											chance of 30%:
												play sound "BLOCK_FIRE_EXTINGUISH" with volume 0.2 and pitch 1 at loop-block's location
												draw 2 cloud at loop-block's location with offset vector(0.1, 0.1, 0.1) with extra 0

							loop {_blocks::*}:
								set {_blockLoc} to loop-value
								set {_originalType} to {_blocks::%{_blockLoc}%}
								if {_originalType} is not air:
									set {-unbreakable::%block%} to false
									set block at {_blockLoc} to {_originalType}
								
							loop {_blocks2::*}:
								set {_blockLoc2} to loop-value
								set {_originalType2} to {_blocks2::%{_blockLoc2}%}
								if {_originalType2} is not air:
									set {-unbreakable::%block%} to false
									set block at {_blockLoc2} to {_originalType2}
								
							loop {_blocks3::*}:
								set {_blockLoc3} to loop-value
								set {_originalType3} to {_blocks3::%{_blockLoc3}%}
								if {_originalType3} is not air:
									set {-unbreakable::%block%} to false
									set block at {_blockLoc3} to {_originalType3}
							loop {_blocks4::*}:
								set {_blockLoc4} to loop-value
								set {_originalType4} to {_blocks4::%{_blockLoc4}%}
								if {_originalType4} is not air:
									set {-unbreakable::%block%} to false
									set block at {_blockLoc4} to {_originalType4}

							loop {_blocks5::*}:
								set {_blockLoc5} to loop-value
								set {_originalType5} to {_blocks5::%{_blockLoc4}%}
								if {_originalType5} is not air:
									set {-unbreakable::%block%} to false
									set block at {_blockLoc5} to {_originalType5}
							set {Fire.Crisp.Location::%player%} to false
							set {-crispActive} to false

on right click:
	if player's off hand item is {Bliss.Fire.T2.%player%}:
		if {Tag..%player%} < 1:
			if {Bliss.Energy.%player%} > 1:
				if player's held item is a sword or air or an axe:
					if {fire.cooldown4.%player%} is true:
						send "&6🔮 &cYour §6Crisp &cskill is on cooldown for &6%{Fire4.%player%}%" to player
					if {fire.cooldown4.%player%} is not true:
						if {-DoubleClick::%player's uuid%} is not set:
							set {-DoubleClick::%player's uuid%} to true
						else:
							delete {-DoubleClick::%player's uuid%}
							send "&6🔮 &cYou have activated §6Crisp" to player
							set {FireMin4.%player%} to 0
							set {FireSec4.%player%} to 42
							set {fire.cooldown4.%player%} to true
							set {Fire.Crisp.Location::%player%} to player's location
							set {_fccircles::circle} to a circle of radius 0.75
							set {_fccircles::smallcircle} to a circle of radius 1
							set {_fccircles::smallcircle1} to a circle of radius 1.25
							set {_fccircles::smallcircle2} to a circle of radius 1.5
							set {_fccircles::smallcircle3} to a circle of radius 1.75
							set {_fccircles::mediumcircle} to a circle of radius 2
							set {_fccircles::mediumcircle1} to a circle of radius 2.25
							set {_fccircles::mediumcircle2} to a circle of radius 2.5
							set {_fccircles::mediumcircle3} to a circle of radius 2.75
							set {_fccircles::largecircle} to a circle of radius 3
							set {_fccircles::largecircle1} to a circle of radius 3.5
							set {_fccircles::largecircle2} to a circle of radius 4
							set {_fccircles::largecircle3} to a circle of radius 4.5
							set {_fccircles::finalcircle} to a circle of radius 5
							set particle of {_fccircles::*} to dust particle using dustOption(rgb(255, 119, 0), 1) with force
							draw shapes {_fccircles::circle} at {Fire.Crisp.Location::%player%}
							draw shapes {_fccircles::smallcircle} at {Fire.Crisp.Location::%player%}
							wait 1 tick
							draw shapes {_fccircles::smallcircle1} at {Fire.Crisp.Location::%player%}
							draw shapes {_fccircles::smallcircle2} at {Fire.Crisp.Location::%player%}
							wait 1 tick
							draw shapes {_fccircles::smallcircle3} at {Fire.Crisp.Location::%player%}
							draw shapes {_fccircles::mediumcircle} at {Fire.Crisp.Location::%player%}
							wait 1 tick
							draw shapes {_fccircles::mediumcircle1} at {Fire.Crisp.Location::%player%}
							draw shapes {_fccircles::mediumcircle2} at {Fire.Crisp.Location::%player%}
							wait 1 tick
							draw shapes {_fccircles::mediumcircle3} at {Fire.Crisp.Location::%player%}
							draw shapes {_fccircles::largecircle} at {Fire.Crisp.Location::%player%}
							wait 1 tick
							draw shapes {_fccircles::largecircle1} at {Fire.Crisp.Location::%player%}
							draw shapes {_fccircles::largecircle2} at {Fire.Crisp.Location::%player%}
							wait 1 tick
							draw shapes {_fccircles::largecircle3} at {Fire.Crisp.Location::%player%}
							draw shapes {_fccircles::finalcircle} at {Fire.Crisp.Location::%player%}
							wait 1 tick
							draw shapes {_fccircles::finalcircle} at {Fire.Crisp.Location::%player%}
							set {_loc} to location of player
							set {_radius} to 5
							set {_blocks::*} to air
							set {_blocks2::*} to air
							set {_blocks3::*} to air
							set {-crispActive} to true
							set {-CrispLoc::%player's uuid%} to location of player

							loop blocks in radius {_radius} around {_loc}:
								set {-unbreakable::%loop-block%} to true
								if loop-block is short grass:
									set {_originalType4} to loop-block's type
									set {_blockLoc4} to loop-block's location
									add {_blockLoc4} to {_blocks4::*}
									set {_blocks4::%{_blockLoc4}%} to {_originalType4}
									set loop-block to crimson root or warped root
								
								if loop-block is tall grass:
									set {_originalType5} to loop-block's type
									set {_blockLoc5} to loop-block's location
									add {_blockLoc5} to {_blocks5::*}
									set {_blocks5::%{_blockLoc5}%} to {_originalType5}
									set loop-block to twisting vine or weeping vine

							loop blocks in radius {_radius} around {_loc}:
								set {-unbreakable::%loop-block%} to true
								if loop-block is oak leaves or spruce leaves or birch leaves or acacia leaves or cherry leaves or mangrove leaves or jungle leaves or dark oak leaves:
									set {_originalType3} to loop-block's type
									set {_blockLoc3} to loop-block's location
									add {_blockLoc3} to {_blocks3::*}
									set {_blocks3::%{_blockLoc3}%} to {_originalType3}
									set loop-block to nether wart block or warped wart block
							
								if loop-block is grass block or stone or dirt:
									set {_originalType} to loop-block's type
									set {_blockLoc} to loop-block's location
									add {_blockLoc} to {_blocks::*}
									set {_blocks::%{_blockLoc}%} to {_originalType}
									set loop-block to netherrack or magma or basalt
								
								if loop-block is oak log or spruce log or acacia log or dark oak log or cherry log or birch log or jungle log or mangrove log:
									set {_originalType2} to loop-block's type
									set {_blockLoc2} to loop-block's location
									add {_blockLoc2} to {_blocks2::*}
									set {_blocks2::%{_blockLoc2}%} to {_originalType2}
									set loop-block to crimson stem or warped stem

							loop 10 times: # 10 seconds
								loop 2 times:
									wait 10 ticks
									loop all blocks in radius 5 around {Fire.Crisp.Location::%player%}:
										if loop-block is stationary water or water:
											set loop-block to air
											chance of 30%:
												play sound "BLOCK_FIRE_EXTINGUISH" with volume 0.2 and pitch 1 at loop-block's location
												draw 2 cloud at loop-block's location with offset vector(0.1, 0.1, 0.1) with extra 0

							loop {_blocks::*}:
								set {_blockLoc} to loop-value
								set {_originalType} to {_blocks::%{_blockLoc}%}
								if {_originalType} is not air:
									set {-unbreakable::%block%} to false
									set block at {_blockLoc} to {_originalType}
								
							loop {_blocks2::*}:
								set {_blockLoc2} to loop-value
								set {_originalType2} to {_blocks2::%{_blockLoc2}%}
								if {_originalType2} is not air:
									set {-unbreakable::%block%} to false
									set block at {_blockLoc2} to {_originalType2}
								
							loop {_blocks3::*}:
								set {_blockLoc3} to loop-value
								set {_originalType3} to {_blocks3::%{_blockLoc3}%}
								if {_originalType3} is not air:
									set {-unbreakable::%block%} to false
									set block at {_blockLoc3} to {_originalType3}
							loop {_blocks4::*}:
								set {_blockLoc4} to loop-value
								set {_originalType4} to {_blocks4::%{_blockLoc4}%}
								if {_originalType4} is not air:
									set {-unbreakable::%block%} to false
									set block at {_blockLoc4} to {_originalType4}

							loop {_blocks5::*}:
								set {_blockLoc5} to loop-value
								set {_originalType5} to {_blocks5::%{_blockLoc4}%}
								if {_originalType5} is not air:
									set {-unbreakable::%block%} to false
									set block at {_blockLoc5} to {_originalType5}
							set {Fire.Crisp.Location::%player%} to false
							set {-crispActive} to false

on death:
	loop all players:
		if victim is within 5 blocks around {Fire.Crisp.Location::%loop-player%}:
			set death message to "%victim% was set ablaze by %loop-player%"

on break:
	if {-unbreakable::%event-block%} is true:
		if {-crispActive} is true:
			cancel event
		else:
			set {-unbreakable::%event-block%} to false
	
	if {-unbreakable2::%event-block%} is true:
		if {-lifeActive} is true:
			cancel event
		else:
			set {-unbreakable2::%event-block%} to false
			
	if {-unbreakable3::%event-block%} is true:
		if {-lifeActive} is true:
			cancel event
		else:
			set {-unbreakable3::%event-block%} to false

on right click:
	if {Tag..%player%} < 1:
		if {Bliss.Energy.%player%} > 1:
			if player's held item is {Bliss.Fire.T2.%player%}:
				if {fire.cooldown2.%player%} is true:
					send "&6🔮 &cYour §6🥾Cozy Campfire &cis on cooldown for &6%{Fire2.%player%}%" to player
				if {fire.cooldown2.%player%} is false:
					if clicked block is not air:
						if block above clicked block is air:
							send "&6🔮 &bYou have used &6🥾Cozy Campfire &bskill!" to player
							set block above clicked block to soul campfire
							set {Fire.Cozy.Location::%player%} to block above clicked block
							set {Fire.Cozy.Location::%player%} to location 0.5 blocks below {Fire.Cozy.Location::%player%}
							if {dragonegg.%player%} is not true:
								set {FireMin2.%player%} to 9
								set {FireSec2.%player%} to 59
							else:
								set {FireMin2.%player%} to 4
								set {FireSec2.%player%} to 59
							set {fire.cooldown2.%player%} to true
							set {_fcircles::circle} to a circle of radius 0.75
							set {_fcircles::smallcircle} to a circle of radius 1
							set {_fcircles::smallcircle1} to a circle of radius 1.25
							set {_fcircles::smallcircle2} to a circle of radius 1.5
							set {_fcircles::smallcircle3} to a circle of radius 1.75
							set {_fcircles::mediumcircle} to a circle of radius 2
							set {_fcircles::mediumcircle1} to a circle of radius 2.25
							set {_fcircles::mediumcircle2} to a circle of radius 2.5
							set {_fcircles::mediumcircle3} to a circle of radius 2.75
							set {_fcircles::largecircle} to a circle of radius 3
							set {_fcircles::largecircle1} to a circle of radius 3.25
							set {_fcircles::largecircle2} to a circle of radius 3.5
							set {_fcircles::largecircle3} to a circle of radius 3.75
							set {_fcircles::finalcircle} to a circle of radius 4
							set particle of {_fcircles::*} to dust particle using dustOption(rgb(255, 119, 0), 1) with force
							draw shapes {_fcircles::circle} at {Fire.Cozy.Location::%player%}
							draw shapes {_fcircles::smallcircle} at {Fire.Cozy.Location::%player%}
							wait 1 tick
							draw shapes {_fcircles::smallcircle1} at {Fire.Cozy.Location::%player%}
							draw shapes {_fcircles::smallcircle2} at {Fire.Cozy.Location::%player%}
							wait 1 tick
							draw shapes {_fcircles::smallcircle3} at {Fire.Cozy.Location::%player%}
							draw shapes {_fcircles::mediumcircle} at {Fire.Cozy.Location::%player%}
							wait 1 tick
							draw shapes {_fcircles::mediumcircle1} at {Fire.Cozy.Location::%player%}
							draw shapes {_fcircles::mediumcircle2} at {Fire.Cozy.Location::%player%}
							wait 1 tick
							draw shapes {_fcircles::mediumcircle3} at {Fire.Cozy.Location::%player%}
							draw shapes {_fcircles::largecircle} at {Fire.Cozy.Location::%player%}
							wait 1 tick
							draw shapes {_fcircles::largecircle1} at {Fire.Cozy.Location::%player%}
							draw shapes {_fcircles::largecircle2} at {Fire.Cozy.Location::%player%}
							wait 1 tick
							draw shapes {_fcircles::largecircle3} at {Fire.Cozy.Location::%player%}
							draw shapes {_fcircles::finalcircle} at {Fire.Cozy.Location::%player%}
							wait 1 tick
							draw shapes {_fcircles::finalcircle} at {Fire.Cozy.Location::%player%}
							loop 600 times:
								draw shapes {_fcircles::finalcircle} at {Fire.Cozy.Location::%player%}
								wait 20 ticks
							set block above clicked block to air
							set {Fire.Cozy.Location::%player%} to false


on break soul campfire:
	loop all players:
		if event-location is within 0.8 blocks around {Fire.Cozy.Location::%loop-player%}:
			set {Fire.Cozy.Location::%loop-player%} to false
			if {dragonegg.%loop-player%} is not true:
				if {FireMin2.%loop-player%} is 9:
					set {FireMin2.%loop-player%} to 1
				else if {FireMin2.%loop-player%} is 8:
					set {FireMin2.%loop-player%} to 0
				else if {FireMin2.%loop-player%} < 8:
					set {FireMin2.%loop-player%} to -1
					set {FireSec2.%loop-player%} to -1
					set {Fire.cooldown2.%player%} to false
			else:
				if {FireMin2.%loop-player%} is 4:
					set {FireMin2.%loop-player%} to 1
				else if {FireMin2.%loop-player%} < 4:
					set {FireMin2.%loop-player%} to -1
					set {FireSec2.%loop-player%} to -1
					set {Fire.cooldown2.%player%} to false



on damage:
	if {Tag..%attacker%} < 1:
		if {Bliss.Energy.%attacker%} > 1:
			if attacker's held item is {Bliss.Fire.T2.%attacker%}:
				if {fire.cooldown3.%attacker%} is true:
					send "<##FE8120>🔮 <##FF686F>Your &f🧨<##FE8120>Meteor Shower &cis on cooldown for &e%{Fire3.%attacker%}%" to attacker
				if {fire.cooldown3.%attacker%} is not true:
					send "<##FE8120>🔮 <##B8FFFB>You have summoned a <##FE8120>Meteor Shower <##B8FFFB>on %victim%!" to attacker
					set {Fire.cooldown3.%attacker%} to true
					if {dragonegg.%attacker%} is not true:
						set {FireMin3.%attacker%} to 1
						set {FireSec3.%attacker%} to 12
					else:
						set {FireMin3.%attacker%} to 0
						set {FireSec3.%attacker%} to 36

					loop 60 times:
						if victim is alive:
							set {_rand1} to a random number between -2 and 2
							set {_rand2} to a random number between -2 and 2
									
							set {-MeteorShowerLoc.%attacker%} to location 10 blocks above and {_rand1} left and {_rand2} infront of victim
							set {fireball.%attacker%} to false
							#set {-MeteorShowerLoc.%attacker%} to location 10 blocks above victim
							spawn large fireball at {-MeteorShowerLoc.%attacker%} with nbt from "{ExplosionPower:1.3}"
							set {fireballShower::%attacker%} to last spawned entity
							push {fireballShower::%attacker%} downwards at force 2
							wait 10 ticks
						else:
							stop

on left click:
	if {Tag..%player%} < 1:
		if {Bliss.Energy.%player%} > 1:
			if player's held item is {Bliss.Fire.T2.%player%}:
				if {fire.cooldown3.%player%} is true:
					send "&6🔮 &cYour §6🧨Fireball &cis on cooldown for &6%{Fire3.%player%}%" to player
				if {fireball.%player%} is 1:
					set {fireball.%player%} to 0
					spawn large fireball 1 block above player with nbt from "{ExplosionPower:1.25}"
					set {fireball::%player%} to last spawned entity
					push {fireball::%player%} in player's direction at force 3
					kill {fireball.armorstand.%player%}
					set {zerodamage..%player%} to true
					send "&6🔮 &bYou have launched a &6fireball!" to player
					set {Fire.cooldown3.%player%} to true
					remove bossbar "fireball.%uuid of player%"
					remove bossbar "fireball2.%uuid of player%"
					if {dragonegg.%player%} is not true:
						set {FireMin3.%player%} to 1
						set {FireSec3.%player%} to 0
					else:
						set {FireMin3.%player%} to 0
						set {FireSec3.%player%} to 30
					wait 4 second
					set {zerodamage..%player%} to false
				if {fireball.%player%} is 2:
					set {fireball.%player%} to 0
					spawn large fireball 1 block above player with nbt from "{ExplosionPower:1.5}"
					set {fireball::%player%} to last spawned entity
					push {fireball::%player%} in player's direction at force 3
					kill {fireball.armorstand.%player%}
					set {zerodamage..%player%} to true
					send "&6🔮 &bYou have launched a &6fireball!" to player
					set {Fire.cooldown3.%player%} to true
					remove bossbar "fireball.%uuid of player%"
					remove bossbar "fireball2.%uuid of player%"
					if {dragonegg.%player%} is not true:
						set {FireMin3.%player%} to 1
						set {FireSec3.%player%} to 0
					else:
						set {FireMin3.%player%} to 0
						set {FireSec3.%player%} to 30
					wait 4 second
					set {zerodamage..%player%} to false
				if {fireball.%player%} is 3:
					set {fireball.%player%} to 0
					spawn large fireball 1 block above player with nbt from "{ExplosionPower:1.75}"
					set {fireball::%player%} to last spawned entity
					push {fireball::%player%} in player's direction at force 3
					kill {fireball.armorstand.%player%}
					set {zerodamage..%player%} to true
					send "&6🔮 &bYou have launched a &6fireball!" to player
					set {Fire.cooldown3.%player%} to true
					remove bossbar "fireball.%uuid of player%"
					remove bossbar "fireball2.%uuid of player%"
					if {dragonegg.%player%} is not true:
						set {FireMin3.%player%} to 1
						set {FireSec3.%player%} to 0
					else:
						set {FireMin3.%player%} to 0
						set {FireSec3.%player%} to 30
					wait 4 second
					set {zerodamage..%player%} to false
				if {fireball.%player%} is 4:
					set {fireball.%player%} to 0
					spawn large fireball 1 block above player with nbt from "{ExplosionPower:2}"
					set {fireball::%player%} to last spawned entity
					push {fireball::%player%} in player's direction at force 3
					kill {fireball.armorstand.%player%}
					set {zerodamage..%player%} to true
					send "&6🔮 &bYou have launched a &6fireball!" to player
					set {Fire.cooldown3.%player%} to true
					remove bossbar "fireball.%uuid of player%"
					remove bossbar "fireball2.%uuid of player%"
					if {dragonegg.%player%} is not true:
						set {FireMin3.%player%} to 1
						set {FireSec3.%player%} to 0
					else:
						set {FireMin3.%player%} to 0
						set {FireSec3.%player%} to 30
					wait 4 second
					set {zerodamage..%player%} to false
				if {fireball.%player%} is 5:
					set {fireball.%player%} to 0
					spawn large fireball 1 block above player with nbt from "{ExplosionPower:2.25}"
					set {fireball::%player%} to last spawned entity
					push {fireball::%player%} in player's direction at force 3
					kill {fireball.armorstand.%player%}
					set {zerodamage..%player%} to true
					send "&6🔮 &bYou have launched a &6fireball!" to player
					set {Fire.cooldown3.%player%} to true
					remove bossbar "fireball.%uuid of player%"
					remove bossbar "fireball2.%uuid of player%"
					if {dragonegg.%player%} is not true:
						set {FireMin3.%player%} to 1
						set {FireSec3.%player%} to 0
					else:
						set {FireMin3.%player%} to 0
						set {FireSec3.%player%} to 30
					wait 4 second
					set {zerodamage..%player%} to false
				if {fireball.%player%} is 6:
					set {fireball.%player%} to 0
					spawn large fireball 1 block above player with nbt from "{ExplosionPower:2.5}"
					set {fireball::%player%} to last spawned entity
					push {fireball::%player%} in player's direction at force 3
					kill {fireball.armorstand.%player%}
					set {zerodamage..%player%} to true
					send "&6🔮 &bYou have launched a &6fireball!" to player
					set {Fire.cooldown3.%player%} to true
					remove bossbar "fireball.%uuid of player%"
					remove bossbar "fireball2.%uuid of player%"
					if {dragonegg.%player%} is not true:
						set {FireMin3.%player%} to 1
						set {FireSec3.%player%} to 0
					else:
						set {FireMin3.%player%} to 0
						set {FireSec3.%player%} to 30
					wait 4 second
					set {zerodamage..%player%} to false
				if {fireball.%player%} is 7:
					set {fireball.%player%} to 0
					spawn large fireball 1 block above player with nbt from "{ExplosionPower:2.75}"
					set {fireball::%player%} to last spawned entity
					push {fireball::%player%} in player's direction at force 3
					kill {fireball.armorstand.%player%}
					set {zerodamage..%player%} to true
					send "&6🔮 &bYou have launched a &6fireball!" to player
					set {Fire.cooldown3.%player%} to true
					remove bossbar "fireball.%uuid of player%"
					remove bossbar "fireball2.%uuid of player%"
					if {dragonegg.%player%} is not true:
						set {FireMin3.%player%} to 1
						set {FireSec3.%player%} to 0
					else:
						set {FireMin3.%player%} to 0
						set {FireSec3.%player%} to 30
					wait 4 second
					set {zerodamage..%player%} to false
				if {fireball.%player%} is 8:
					set {fireball.%player%} to 0
					spawn large fireball 1 block above player with nbt from "{ExplosionPower:3}"
					set {fireball::%player%} to last spawned entity
					push {fireball::%player%} in player's direction at force 3
					kill {fireball.armorstand.%player%}
					set {zerodamage..%player%} to true
					send "&6🔮 &bYou have launched a &6fireball!" to player
					set {Fire.cooldown3.%player%} to true
					remove bossbar "fireball.%uuid of player%"
					remove bossbar "fireball2.%uuid of player%"
					if {dragonegg.%player%} is not true:
						set {FireMin3.%player%} to 1
						set {FireSec3.%player%} to 0
					else:
						set {FireMin3.%player%} to 0
						set {FireSec3.%player%} to 30
					wait 4 second
					set {zerodamage..%player%} to false
				if {fireball.%player%} is 9:
					set {fireball.%player%} to 0
					spawn large fireball 1 block above player with nbt from "{ExplosionPower:3.5}"
					set {fireball::%player%} to last spawned entity
					push {fireball::%player%} in player's direction at force 3
					kill {fireball.armorstand.%player%}
					set {zerodamage..%player%} to true
					send "&6🔮 &bYou have launched a &6fireball!" to player
					set {Fire.cooldown3.%player%} to true
					remove bossbar "fireball.%uuid of player%"
					remove bossbar "fireball2.%uuid of player%"
					if {dragonegg.%player%} is not true:
						set {FireMin3.%player%} to 1
						set {FireSec3.%player%} to 0
					else:
						set {FireMin3.%player%} to 0
						set {FireSec3.%player%} to 30
					wait 4 second
					set {zerodamage..%player%} to false
				if {fireball.%player%} is 10:
					set {fireball.%player%} to 0
					spawn large fireball 1 block above player with nbt from "{ExplosionPower:4}"
					set {fireball::%player%} to last spawned entity
					push {fireball::%player%} in player's direction at force 3
					kill {fireball.armorstand.%player%}
					set {zerodamage..%player%} to true
					send "&6🔮 &bYou have launched a &6fireball!" to player
					set {Fire.cooldown3.%player%} to true
					remove bossbar "fireball.%uuid of player%"
					remove bossbar "fireball2.%uuid of player%"
					if {dragonegg.%player%} is not true:
						set {FireMin3.%player%} to 1
						set {FireSec3.%player%} to 0
					else:
						set {FireMin3.%player%} to 0
						set {FireSec3.%player%} to 30
					wait 4 second
					set {zerodamage..%player%} to false
				if {fire.cooldown3.%player%} is not true: 
					wait 1 tick
					create bossbar titled "&fFireball Power" and id "fireball.%uuid of player%" for player with progress 0 with colors red
					set {fire.fireball.bar.%player%} to value of bossbar "fireball.%uuid of player%"
					set {fire.fireball.bar.%player%} to 10
					set bossbar "fireball.%uuid of player%" value to {fire.fireball.bar.%player%}
					send "&6🔮 &bCharging &6🧨fireball" to player
					spawn armor stand at player with nbt from "{Tags:[""5%player%""],Invisible:1b,ArmorItems:[{},{},{},{id:fire_charge,Count:1}],ArmorDropChances:[0f,0f,0f,0f]}"
					set {fireball.armorstand.%player%} to last spawned armor stand
					make {fireball.armorstand.%player%} ride player
					set {fireball.%player%} to 1
					set {fire.cooldown3.%player%} to true
					loop 10 times:
						add 1 to {fire.fireball.bar.%player%}
						set bossbar "fireball.%uuid of player%" value to {fire.fireball.bar.%player%}
						wait 3 ticks
					if {fireball.%player%} is 1:
						set {fireball.%player%} to 2
					loop 10 times:
						add 1 to {fire.fireball.bar.%player%}
						set bossbar "fireball.%uuid of player%" value to {fire.fireball.bar.%player%}
						wait 3 ticks
					if {fireball.%player%} is 2:
						set {fireball.%player%} to 3
					loop 10 times:
						add 1 to {fire.fireball.bar.%player%}
						set bossbar "fireball.%uuid of player%" value to {fire.fireball.bar.%player%}
						wait 3 ticks
					if {fireball.%player%} is 3:
						set {fireball.%player%} to 4
					loop 10 times:
						add 1 to {fire.fireball.bar.%player%}
						set bossbar "fireball.%uuid of player%" value to {fire.fireball.bar.%player%}
						wait 3 ticks
					if {fireball.%player%} is 4:
						set {fireball.%player%} to 5
					loop 10 times:
						add 1 to {fire.fireball.bar.%player%}
						set bossbar "fireball.%uuid of player%" value to {fire.fireball.bar.%player%}
						wait 3 ticks
					if {fireball.%player%} is 5:
						set {fireball.%player%} to 6
					loop 10 times:
						add 1 to {fire.fireball.bar.%player%}
						set bossbar "fireball.%uuid of player%" value to {fire.fireball.bar.%player%}
						wait 3 ticks
					if {fireball.%player%} is 6:
						set {fireball.%player%} to 7
					loop 10 times:
						add 1 to {fire.fireball.bar.%player%}
						set bossbar "fireball.%uuid of player%" value to {fire.fireball.bar.%player%}
						wait 3 ticks
					if {fireball.%player%} is 7:
						set {fireball.%player%} to 8
					loop 10 times:
						add 1 to {fire.fireball.bar.%player%}
						set bossbar "fireball.%uuid of player%" value to {fire.fireball.bar.%player%}
						wait 3 ticks
					if {fireball.%player%} is 8:
						set {fireball.%player%} to 9
					loop 10 times:
						add 1 to {fire.fireball.bar.%player%}
						set bossbar "fireball.%uuid of player%" value to {fire.fireball.bar.%player%}
						wait 3 ticks
					if {fireball.%player%} is 9:
						set {fireball.%player%} to 10
					if {fireball.%player%} is 10:
						remove bossbar "fireball.%uuid of player%"
						create bossbar titled "&4Fireball Timer" and id "fireball2.%uuid of player%" for player with progress 100 with colors red
						set {fire.fireball2.bar.%player%} to value of bossbar "fireball2.%uuid of player%"
						set {fire.fireball2.bar.%player%} to 100
						set bossbar "fireball2.%uuid of player%" value to {fire.fireball2.bar.%player%}
						loop 50 times:
							loop 4 times: #1 second, 4 points removed
								loop 5 times:
									remove 0.2 from {fire.fireball2.bar.%player%}
									set bossbar "fireball2.%uuid of player%" value to {fire.fireball2.bar.%player%}
									wait 1 ticks
						if {fireball.%player%} is 10:
							kill {fireball.armorstand.%player%}
							set {fireball.%player%} to 0
							remove bossbar "fireball.%uuid of player%"
							remove bossbar "fireball2.%uuid of player%"
							set {Fire.cooldown3.%player%} to true
							if {dragonegg.%player%} is not true:
								set {FireMin3.%player%} to 1
								set {FireSec3.%player%} to 0
							else:
								set {FireMin3.%player%} to 0
								set {FireSec3.%player%} to 30

			

on damage:
	if {Tag..%attacker%} < 1:
		if {Bliss.Energy.%attacker%} > 1:
			if attacker's offhand item is {Bliss.Fire.T2.%attacker%}:
				chance of 8%:
					light the victim on fire
			if attacker's offhand item is {Bliss.Fire.T1.%attacker%}:
				chance of 5%:
					light the victim on fire
	if damage cause is entity explosion:
		if {zerodamage..%victim%} is true:
			cancel event

on shoot:
	if {Tag..%shooter%} < 1:
		if {Bliss.Energy.%shooter%} > 1:
			if shooter's offhand item is {Bliss.Fire.T2.%shooter%}:
				chance of 8%:
					ignite the event-projectile
			if shooter's offhand item is {Bliss.Fire.T1.%shooter%}:
				chance of 5%:
					ignite the event-projectile



		

#Chad Strength 

on right click on entity:
	if {Tag..%player%} < 1:
		if {Bliss.Energy.%player%} > 1:
			if player's held item is {Bliss.Strength.T2.%player%}:
				if {strength.cooldown3.%player%} is true:
					send "&4🔮 &cYour §4⚔Chad Strength &cskill is on cooldown for &4%{Strength3.%player%}%" to player
				if {strength.cooldown3.%player%} is false:
					send "&4🔮 &bYou have used &4⚔Chad Strength &bGroup" to player
					set {Test.DoubleGroup.%player%} to 0
					if {dragonegg.%player%} is not true:
						set {StrengthMin3.%player%} to 2
						set {StrengthSec3.%player%} to 30
					else:
						set {StrengthMin3.%player%} to 1
						set {StrengthSec3.%player%} to 15
					set {strength.cooldown3.%player%} to true
					set {ChadStrengthGroup..%player%} to true
					set {ChadStrength..%player%} to false
					set {_scircles::circle} to a circle of radius 0.75
					set {_scircles::smallcircle} to a circle of radius 1
					set {_scircles::smallcircle1} to a circle of radius 1.25
					set {_scircles::smallcircle2} to a circle of radius 1.5
					set {_scircles::smallcircle3} to a circle of radius 1.75
					set {_scircles::mediumcircle} to a circle of radius 2
					set {_scircles::mediumcircle1} to a circle of radius 2.25
					set {_scircles::mediumcircle2} to a circle of radius 2.5
					set {_scircles::mediumcircle3} to a circle of radius 2.75
					set {_scircles::largecircle} to a circle of radius 3
					set {_scircles::largecircle1} to a circle of radius 3.25
					set {_scircles::largecircle2} to a circle of radius 3.5
					set {_scircles::largecircle3} to a circle of radius 3.75
					set {_scircles::finalcircle} to a circle of radius 4
					set particle of {_scircles::*} to dust particle using dustOption(rgb(199, 0, 10), 1.5) with force
					draw shapes {_scircles::circle} at player's location
					draw shapes {_scircles::smallcircle} at player's location
					wait 1 tick
					draw shapes {_scircles::smallcircle1} at player's location
					draw shapes {_scircles::smallcircle2} at player's location
					wait 1 tick
					draw shapes {_scircles::smallcircle3} at player's location
					draw shapes {_scircles::mediumcircle} at player's location
					wait 1 tick
					draw shapes {_scircles::mediumcircle1} at player's location
					draw shapes {_scircles::mediumcircle2} at player's location
					wait 1 tick
					draw shapes {_scircles::mediumcircle3} at player's location
					draw shapes {_scircles::largecircle} at player's location
					wait 1 tick
					draw shapes {_scircles::largecircle1} at player's location
					draw shapes {_scircles::largecircle2} at player's location
					wait 1 tick
					draw shapes {_scircles::largecircle3} at player's location
					draw shapes {_scircles::finalcircle} at player's location
					wait 1 tick
					draw shapes {_scircles::finalcircle} at player's location
					loop all players within 4 blocks around player:
						if {Trusted.%player%.%loop-player%} is true:
							set {ChadStrengthGroup..%loop-player%} to true
							set {ChadStrength..%loop-player%} to false
							set {Test.DoubleGroup.%loop-player%} to 0
							wait 15 seconds
							set {ChadStrengthGroup..%loop-player%} to false
					wait 30 seconds
					set {ChadStrengthGroup..%player%} to false
on right click:
	if {Tag..%player%} < 1:
		if {Bliss.Energy.%player%} > 1:
			if player's held item is {Bliss.Strength.T2.%player%}:
				if {strength.cooldown3.%player%} is true:
					send "&4🔮 &cYour §4⚔Chad Strength &cskill is on cooldown for &4%{Strength3.%player%}%" to player
				if {strength.cooldown3.%player%} is false:
					set {Test.Double.%player%} to 0
					send "&4🔮 &bYou have activated &4⚔Chad Strength" to player
					set {ChadStrength..%player%} to true
					if {dragonegg.%player%} is not true:
						set {StrengthMin3.%player%} to 2
						set {StrengthSec3.%player%} to 30
					else:
						set {StrengthMin3.%player%} to 1
						set {StrengthSec3.%player%} to 15
					set {strength.cooldown3.%player%} to true
					wait 30 seconds
					set {ChadStrength..%player%} to false




#[<-----------------Life----------------->]



# Vitality Vortex

on right click:
	if player's off hand item is {Bliss.Life.T2.%player%}:
		if {Tag..%player%} < 1:
			if {Bliss.Energy.%player%} > 1:
				if player's held item is a sword or air or an axe:
					if {life.cooldown4.%player%} is true:
						send "<##FE04B4>🔮 &cYour <##FE04B4>Vitality Vortex &cskill is on cooldown for &6%{Life4.%player%}%" to player
					if {life.cooldown4.%player%} is not true:
						if {-DoubleClick::%player's uuid%} is not set:
							set {-DoubleClick::%player's uuid%} to true
						else:
							delete {-DoubleClick::%player's uuid%}
							send "<##FE04B4>🔮 &cYou have activated <##FE04B4>Vitality Vortex" to player
							set {LifeMin4.%player%} to 0
							set {LifeSec4.%player%} to 45
							set {life.cooldown4.%player%} to true
							set {-lifeActive} to true
							set {_loc} to location of player
							set {_radius} to 1
							set {_blocks::*} to air
							set {_blocks2::*} to air
							set {_blocks3::*} to air
							set {_blocks4::*} to air
							set the player's food level to 10
							set saturation of player to 20
							loop 5 times:
								loop blocks in radius {_radius} around {_loc}:
									set {-unbreakable2::%loop-block%} to true
									if loop-block is cornflower or poppy or sunflower or dandelion or blue orchid or allium or azure bluet or red tulip or orange tulip or white tulip or pink tulip or oxeye daisy or lily of the valley or torch flower or pink petals or lilac or rose bush or peony or brown mushroom or red mushroom:
										set {_originalType4} to loop-block's type
										set {_block} to loop-block
										set {_blockLoc4} to loop-block's location
										add {_blockLoc4} to {_blocks4::*}
										set {_blocks4::%{_blockLoc4}%} to {_originalType4}
										apply regeneration 2 without particles whilst hiding the potion icon to player for 1 seconds
										set loop-block to dead bubble coral fan or dead tube coral or dead brain coral or dead bubble coral or dead fire coral or dead horn coral or dead tube coral fan or dead brain coral fan or dead fire coral fan or dead horn coral fan
										unwaterlog loop-block
										
								loop blocks in radius {_radius} around {_loc}:
									set {-unbreakable3::%loop-block%} to true  
									if loop-block is oak leaves or spruce leaves or birch leaves or acacia leaves or cherry leaves or mangrove leaves or jungle leaves or dark oak leaves:
										set {_originalType3} to loop-block's type
										set {_blockLoc3} to loop-block's location
										add {_blockLoc3} to {_blocks3::*}
										set {_blocks3::%{_blockLoc3}%} to {_originalType3}
										apply absorption 2 without particles whilst hiding the potion icon to player for 1 seconds
										set loop-block to tuff or dead tube coral block or dead bubble coral block or dead brain coral block or dead fire coral block or dead horn coral block
									
									if loop-block is grass block or stone or dirt:
										set {_originalType} to loop-block's type
										set {_blockLoc} to loop-block's location
										add {_blockLoc} to {_blocks::*}
										set {_blocks::%{_blockLoc}%} to {_originalType}
										set loop-block to tuff or dead tube coral block or dead bubble coral block or dead brain coral block or dead fire coral block or dead horn coral block
										
									if loop-block is oak log or spruce log or acacia log or dark oak log or cherry log or birch log or jungle log or mangrove log:
										set {_originalType2} to loop-block's type
										set {_blockLoc2} to loop-block's location
										add {_blockLoc2} to {_blocks2::*}
										set {_blocks2::%{_blockLoc2}%} to {_originalType2}
										set loop-block to acacia log
										apply resistance 1 without particles whilst hiding the potion icon to player for 1 seconds
								add 1 to {_radius}

								set {_loc2} to location 0.3 blocks above {_loc}
								wait 4 ticks
								loop all blocks in radius 5 around {_loc}:
									if loop-block is stationary water or water:
										set loop-block to air
							wait 9 seconds
							
							set {-lifeActive} to false
							loop {_blocks::*}:
								set {_blockLoc} to loop-value
								set {_originalType} to {_blocks::%{_blockLoc}%}
								if {_originalType} is not air:
									set {-unbreakable::%block%} to false
									set block at {_blockLoc} to {_originalType}
									
							loop {_blocks2::*}:
								set {_blockLoc2} to loop-value
								set {_originalType2} to {_blocks2::%{_blockLoc2}%}
								if {_originalType2} is not air:
									set {-unbreakable::%block%} to false
									set block at {_blockLoc2} to {_originalType2}
									
							loop {_blocks3::*}:
								set {_blockLoc3} to loop-value
								set {_originalType3} to {_blocks3::%{_blockLoc3}%}
								if {_originalType3} is not air:
									set {-unbreakable::%block%} to false
									set block at {_blockLoc3} to {_originalType3}
									
							loop {_blocks4::*}:
								set {_blockLoc4} to loop-value
								set {_originalType4} to {_blocks4::%{_blockLoc4}%}
								if {_originalType4} is not air:
									set {-unbreakable::%block%} to false
									set block at {_blockLoc4} to {_originalType4}
							set {-lifeActive} to false


on right click:
	if player's off hand item is {Bliss.Life.T1.%player%}:
		if {Tag..%player%} < 1:
			if {Bliss.Energy.%player%} > 1:
				if player's held item is a sword or air or an axe:
					if {life.cooldown4.%player%} is true:
						send "<##FE04B4>🔮 &cYour <##FE04B4>Vitality Vortex &cskill is on cooldown for &6%{Life4.%player%}%" to player
					if {life.cooldown4.%player%} is not true:
						if {-DoubleClick::%player's uuid%} is not set:
							set {-DoubleClick::%player's uuid%} to true
						else:
							delete {-DoubleClick::%player's uuid%}
							send "<##FE04B4>🔮 &cYou have activated <##FE04B4>Vitality Vortex" to player
							set {LifeMin4.%player%} to 0
							set {LifeSec4.%player%} to 45
							set {life.cooldown4.%player%} to true
							set {-lifeActive} to true
							set {_loc} to location of player
							set {_radius} to 1
							set {_blocks::*} to air
							set {_blocks2::*} to air
							set {_blocks3::*} to air
							set {_blocks4::*} to air
							set the player's food level to 10
							set saturation of player to 20
							loop 5 times:
								loop blocks in radius {_radius} around {_loc}:
									set {-unbreakable2::%loop-block%} to true
									if loop-block is cornflower or poppy or sunflower or dandelion or blue orchid or allium or azure bluet or red tulip or orange tulip or white tulip or pink tulip or oxeye daisy or lily of the valley or torch flower or pink petals or lilac or rose bush or peony or brown mushroom or red mushroom:
										set {_originalType4} to loop-block's type
										set {_block} to loop-block
										set {_blockLoc4} to loop-block's location
										add {_blockLoc4} to {_blocks4::*}
										set {_blocks4::%{_blockLoc4}%} to {_originalType4}
										apply regeneration 2 without particles whilst hiding the potion icon to player for 1 seconds
										set loop-block to dead bubble coral fan or dead tube coral or dead brain coral or dead bubble coral or dead fire coral or dead horn coral or dead tube coral fan or dead brain coral fan or dead fire coral fan or dead horn coral fan
										unwaterlog loop-block
										
								loop blocks in radius {_radius} around {_loc}:
									set {-unbreakable3::%loop-block%} to true  
									if loop-block is oak leaves or spruce leaves or birch leaves or acacia leaves or cherry leaves or mangrove leaves or jungle leaves or dark oak leaves:
										set {_originalType3} to loop-block's type
										set {_blockLoc3} to loop-block's location
										add {_blockLoc3} to {_blocks3::*}
										set {_blocks3::%{_blockLoc3}%} to {_originalType3}
										apply absorption 2 without particles whilst hiding the potion icon to player for 1 seconds
										set loop-block to tuff or dead tube coral block or dead bubble coral block or dead brain coral block or dead fire coral block or dead horn coral block
									
									if loop-block is grass block or stone or dirt:
										set {_originalType} to loop-block's type
										set {_blockLoc} to loop-block's location
										add {_blockLoc} to {_blocks::*}
										set {_blocks::%{_blockLoc}%} to {_originalType}
										set loop-block to tuff or dead tube coral block or dead bubble coral block or dead brain coral block or dead fire coral block or dead horn coral block
										
									if loop-block is oak log or spruce log or acacia log or dark oak log or cherry log or birch log or jungle log or mangrove log:
										set {_originalType2} to loop-block's type
										set {_blockLoc2} to loop-block's location
										add {_blockLoc2} to {_blocks2::*}
										set {_blocks2::%{_blockLoc2}%} to {_originalType2}
										set loop-block to acacia log
										apply resistance 1 without particles whilst hiding the potion icon to player for 1 seconds
								add 1 to {_radius}

								set {_loc2} to location 0.3 blocks above {_loc}
								wait 4 ticks
								loop all blocks in radius 5 around {_loc}:
									if loop-block is stationary water or water:
										set loop-block to air
							wait 9 seconds
							
							set {-lifeActive} to false
							loop {_blocks::*}:
								set {_blockLoc} to loop-value
								set {_originalType} to {_blocks::%{_blockLoc}%}
								if {_originalType} is not air:
									set {-unbreakable::%block%} to false
									set block at {_blockLoc} to {_originalType}
									
							loop {_blocks2::*}:
								set {_blockLoc2} to loop-value
								set {_originalType2} to {_blocks2::%{_blockLoc2}%}
								if {_originalType2} is not air:
									set {-unbreakable::%block%} to false
									set block at {_blockLoc2} to {_originalType2}
									
							loop {_blocks3::*}:
								set {_blockLoc3} to loop-value
								set {_originalType3} to {_blocks3::%{_blockLoc3}%}
								if {_originalType3} is not air:
									set {-unbreakable::%block%} to false
									set block at {_blockLoc3} to {_originalType3}
									
							loop {_blocks4::*}:
								set {_blockLoc4} to loop-value
								set {_originalType4} to {_blocks4::%{_blockLoc4}%}
								if {_originalType4} is not air:
									set {-unbreakable::%block%} to false
									set block at {_blockLoc4} to {_originalType4}
							set {-lifeActive} to false


on damage:
	if {Tag..%attacker%} < 1:
		if {Bliss.Energy.%attacker%} > 1:
			if attacker's held item is {Bliss.Life.T2.%attacker%}:
				if {life.cooldown3.%attacker%} is true:
					send "&d🔮 &cYour <##FE04B4>💘Heart Lock &cskill is on cooldown for &d%{Life3.%attacker%}%" to attacker
				if {life.cooldown3.%attacker%} is not true:
					send "<##FE04B4>🔮 <##B8FFFB>You used &8💘<##FE04B4>Heart Lock <##B8FFFB>on <##FE04B4>%victim%" to attacker
					send "<##FE04B4>🔮 <##B8FFFB>Your heart count has been locked for <##FE04B4>20 seconds <##B8FFFB>by <##FE04B4>%attacker%" to victim
					set {HeartLocked.%victim%} to true
					if {dragonegg.%attacker%} is not true:
						set {LifeSec3.%attacker%} to 0
						set {LifeMin3.%attacker%} to 2
					else:
						set {LifeSec3.%attacker%} to 0
						set {LifeMin3.%attacker%} to 1
					set {life.cooldown3.%attacker%} to true
					if victim's health > 3:
						set victim's max health to victim's health
					else:
						set victim's max health to 3
					loop 5 times:
						loop 10 times:
							set {_attacker} to location 0.5 metres above attacker
							set {_victim} to location 0.5 metres above victim
							set {_trail} to a line from {_victim} to {_attacker}
							set particle of {_trail} to dust particle using dustOption(rgb(255, 0, 180), 1.5) with force
							draw shapes {_trail} at {_victim}
							wait 0.1 seconds	

					wait 15 seconds
					set victim's max health to 10
					set {HeartLocked.%victim%} to false
					
on left click:
	if {Tag..%player%} < 1:
		if {Bliss.Energy.%player%} > 1:
			if player's held item is {Bliss.Life.T2.%player%}:
				if {life.cooldown3.%player%} is true:
					send "&d🔮 &cYour <##FE04B4>💘Heart Drainer &cskill is on cooldown for &d%{Life3.%player%}%" to player
				if {life.cooldown3.%player%} is not true:
					send "&d🔮 &bYou have used <##FE04B4>💘Heart Drainer" to player
					if {dragonegg.%player%} is not true:
						set {LifeSec3.%player%} to 0
						set {LifeMin3.%player%} to 2
					else:
						set {LifeSec3.%player%} to 0
						set {LifeMin3.%player%} to 1
					set {life.cooldown3.%player%} to true
					set {_lcircles.%player%::location} to player's location
					set {_lcircles::circle} to a circle of radius 0.75
					set {_lcircles::smallcircle} to a circle of radius 1
					set {_lcircles::smallcircle1} to a circle of radius 1.25
					set {_lcircles::smallcircle2} to a circle of radius 1.5
					set {_lcircles::smallcircle3} to a circle of radius 1.75
					set {_lcircles::mediumcircle} to a circle of radius 2
					set {_lcircles::mediumcircle1} to a circle of radius 2.25
					set {_lcircles::mediumcircle2} to a circle of radius 2.5
					set {_lcircles::mediumcircle3} to a circle of radius 2.75
					set {_lcircles::largecircle} to a circle of radius 3
					set particle of {_lcircles::*} to dust particle using dustOption(rgb(255, 0, 180), 1.5) with force
					draw shapes {_lcircles::circle} at {_lcircles.%player%::location}
					draw shapes {_lcircles::smallcircle} at {_lcircles.%player%::location}
					wait 1 tick
					draw shapes {_lcircles::smallcircle1} at {_lcircles.%player%::location}
					draw shapes {_lcircles::smallcircle2} at {_lcircles.%player%::location}
					wait 1 tick
					draw shapes {_lcircles::smallcircle3} at {_lcircles.%player%::location}
					draw shapes {_lcircles::mediumcircle} at {_lcircles.%player%::location}
					wait 1 tick
					draw shapes {_lcircles::mediumcircle1} at {_lcircles.%player%::location}
					draw shapes {_lcircles::mediumcircle2} at {_lcircles.%player%::location}
					wait 1 tick
					draw shapes {_lcircles::mediumcircle3} at {_lcircles.%player%::location}
					draw shapes {_lcircles::largecircle} at {_lcircles.%player%::location}
					set {life.no.%player%} to true
					set {Trusted.%player%.%player%} to true
					loop players in radius 3 of player:
						if {Trusted.%player%.%loop-player%} is false:
							send "&d🔮 &bYou have been affected with §d💘Heart Drainer &bby &d%player%" to loop-player
							set {Life.Drained.Group.Time.%loop-player%} to 20
							add 0 to {Life.Drained.Solo.Time.%loop-player%}
							add 0 to {Life.CoL.Group.Time.%loop-player%}

on consume of golden apple:
	if {Tag..%player%} < 1:
		if {Bliss.Energy.%player%} > 1:
			if player's off hand item is {Bliss.Life.T2.%player%}:
				apply absorption 2 without particles whilst hiding the potion icon to player for 2 minutes replacing the existing effect
on consume of enchanted golden apple:
	if {Tag..%player%} < 1:
		if {Bliss.Energy.%player%} > 1:
			if player's off hand item is {Bliss.Life.T2.%player%}:
				apply absorption 5 without particles whilst hiding the potion icon to player for 2 minutes replacing the existing effect
on consume of golden apple:
	if {Tag..%player%} < 1:
		if {Bliss.Energy.%player%} > 1:
			if player's off hand item is {Bliss.Life.T1.%player%}:
				apply absorption 2 without particles whilst hiding the potion icon to player for 2 minutes replacing the existing effect
on consume of enchanted golden apple:
	if {Tag..%player%} < 1:
		if {Bliss.Energy.%player%} > 1:
			if player's off hand item is {Bliss.Life.T1.%player%}:
				apply absorption 5 without particles whilst hiding the potion icon to player for 2 minutes replacing the existing effect

#Life Circle

on right click:
	if {Tag..%player%} < 1:
		if {Bliss.Energy.%player%} > 1:
			if player's held item is {Bliss.Life.T2.%player%}:
				if {life.cooldown2.%player%} is true:
					send "&d🔮 &cYour §d💖Circle of Life &cskill is on cooldown for &d%{Life2.%player%}%" to player
				if {life.cooldown2.%player%} is not true:
					send "&d🔮 &bYou have summoned the §d💖Circle of Life" to player
					if {dragonegg.%player%} is not true:
						set {LifeSec2.%player%} to 59
						set {LifeMin2.%player%} to 2
					else:
						set {LifeSec2.%player%} to 30
						set {LifeMin2.%player%} to 1
					set {life.cooldown2.%player%} to true
					set {Life.CoL.Group.Time.%player%} to 2
					set player's max health to 15
					set player's health to 15
					set {_lcircles::circle} to a circle of radius 0.75
					set {_lcircles::smallcircle} to a circle of radius 1
					set {_lcircles::smallcircle1} to a circle of radius 1.25
					set {_lcircles::smallcircle2} to a circle of radius 1.5
					set {_lcircles::smallcircle3} to a circle of radius 1.75
					set {_lcircles::mediumcircle} to a circle of radius 2
					set {_lcircles::mediumcircle1} to a circle of radius 2.25
					set {_lcircles::mediumcircle2} to a circle of radius 2.5
					set {_lcircles::mediumcircle3} to a circle of radius 2.75
					set {_lcircles::largecircle} to a circle of radius 3
					set {_lcircles::largecircle1} to a circle of radius 3.25
					set {_lcircles::largecircle2} to a circle of radius 3.5
					set {_lcircles::largecircle3} to a circle of radius 3.75
					set {_lcircles::finalcircle} to a circle of radius 4
					set particle of {_lcircles::*} to dust particle using dustOption(rgb(255, 0, 179), 1) with force
					draw shapes {_lcircles::circle} at player's location
					draw shapes {_lcircles::smallcircle} at player's location
					wait 1 tick
					draw shapes {_lcircles::smallcircle1} at player's location
					draw shapes {_lcircles::smallcircle2} at player's location
					wait 1 tick
					draw shapes {_lcircles::smallcircle3} at player's location
					draw shapes {_lcircles::mediumcircle} at player's location
					wait 1 tick
					draw shapes {_lcircles::mediumcircle1} at player's location
					draw shapes {_lcircles::mediumcircle2} at player's location
					wait 1 tick
					draw shapes {_lcircles::mediumcircle3} at player's location
					draw shapes {_lcircles::largecircle} at player's location
					wait 1 tick
					draw shapes {_lcircles::largecircle1} at player's location
					draw shapes {_lcircles::largecircle2} at player's location
					wait 1 tick
					draw shapes {_lcircles::largecircle3} at player's location
					draw shapes {_lcircles::finalcircle} at player's location
					wait 1 tick
					draw shapes {_lcircles::finalcircle} at player's location
					loop 15 times:
						loop 8 times: # 2 seconds
							draw shapes {_lcircles::finalcircle} at player's location
							set {Trusted.%player%.%player%} to true
							loop all players within 4 blocks around player:
								if {Trusted.%player%.%loop-player%} is not true:
									if {Life.Drained.Solo.Time.%loop-player%} < 1:
										set {Life.Drained.Solo.Time.%loop-player%} to 2
									if {Life.Drained.Solo.Time.%loop-player%} is not set:
										set {Life.Drained.Solo.Time.%loop-player%} to 2
									add 0 to {Life.CoL.Group.Time.%loop-player%}
									add 0 to {Life.Drained.Solo.Time.%loop-player%}
								if {Trusted.%player%.%loop-player%} is true:
									if {Life.CoL.Group.Time.%loop-player%} < 1:
										set {Life.CoL.Group.Time.%loop-player%} to 2
									if {Life.CoL.Group.Time.%loop-player%} is not set:
										set {Life.CoL.Group.Time.%loop-player%} to 2
									add 0 to {Life.Drained.Solo.Time.%loop-player%}
									add 0 to {Life.Drained.Group.Time.%loop-player%}

							wait 0.25 seconds		


on right click on entity:
	if {Tag..%player%} < 1:
		if {Bliss.Energy.%player%} > 1:
			if player's held item is {Bliss.Life.T2.%player%}:
				if {life.cooldown2.%player%} is true:
					send "&d🔮 &cYour §d💖Circle of Life &cskill is on cooldown for &d%{Life2.%player%}%" to player
				if {life.cooldown2.%player%} is not true:
					send "&d🔮 &bYou have summoned the §d💖Circle of Life" to player
					if {dragonegg.%player%} is not true:
						set {LifeSec2.%player%} to 59
						set {LifeMin2.%player%} to 2
					else:
						set {LifeSec2.%player%} to 30
						set {LifeMin2.%player%} to 1
					set {life.cooldown2.%player%} to true
					set {_lcircles::circle} to a circle of radius 0.75
					set {_lcircles::smallcircle} to a circle of radius 1
					set {_lcircles::smallcircle1} to a circle of radius 1.25
					set {_lcircles::smallcircle2} to a circle of radius 1.5
					set {_lcircles::smallcircle3} to a circle of radius 1.75
					set {_lcircles::mediumcircle} to a circle of radius 2
					set {_lcircles::mediumcircle1} to a circle of radius 2.25
					set {_lcircles::mediumcircle2} to a circle of radius 2.5
					set {_lcircles::mediumcircle3} to a circle of radius 2.75
					set {_lcircles::largecircle} to a circle of radius 3
					set {_lcircles::largecircle1} to a circle of radius 3.25
					set {_lcircles::largecircle2} to a circle of radius 3.5
					set {_lcircles::largecircle3} to a circle of radius 3.75
					set {_lcircles::finalcircle} to a circle of radius 4
					set particle of {_lcircles::*} to dust particle using dustOption(rgb(255, 0, 179), 1) with force
					draw shapes {_lcircles::circle} at player's location
					draw shapes {_lcircles::smallcircle} at player's location
					wait 1 tick
					draw shapes {_lcircles::smallcircle1} at player's location
					draw shapes {_lcircles::smallcircle2} at player's location
					wait 1 tick
					draw shapes {_lcircles::smallcircle3} at player's location
					draw shapes {_lcircles::mediumcircle} at player's location
					wait 1 tick
					draw shapes {_lcircles::mediumcircle1} at player's location
					draw shapes {_lcircles::mediumcircle2} at player's location
					wait 1 tick
					draw shapes {_lcircles::mediumcircle3} at player's location
					draw shapes {_lcircles::largecircle} at player's location
					wait 1 tick
					draw shapes {_lcircles::largecircle1} at player's location
					draw shapes {_lcircles::largecircle2} at player's location
					wait 1 tick
					draw shapes {_lcircles::largecircle3} at player's location
					draw shapes {_lcircles::finalcircle} at player's location
					wait 1 tick
					draw shapes {_lcircles::finalcircle} at player's location
					loop 15 times:
						set durability of player's helmet to durability of player's helmet + 2
						set durability of player's chestplate to durability of player's chestplate + 2
						set durability of player's leggings to durability of player's leggings + 2
						set durability of player's boots to durability of player's boots + 2
						loop 8 times:
							draw shapes {_lcircles::finalcircle} at player's location
							set {Trusted.%player%.%player%} to true
							loop all players within 4 blocks around player:
								if {Trusted.%player%.%loop-player%} is not true:
									if {Life.Drained.Solo.Time.%loop-player%} < 1:
										set {Life.Drained.Solo.Time.%loop-player%} to 2
									if {Life.Drained.Solo.Time.%loop-player%} is not set:
										set {Life.Drained.Solo.Time.%loop-player%} to 2
									add 0 to {Life.CoL.Group.Time.%loop-player%}
									add 0 to {Life.Drained.Solo.Time.%loop-player%}

							wait 0.25 seconds		


#[<-----------------Puff----------------->]


#Functions
function blissPuffAutoEnchantT2(p: player):
	if {puff.cooldown.%{_p}%} is false:
		#send "&f🔮 &bAuto Enchanting" to {_p}
		set {PuffMin.%{_p}%} to 1
		set {PuffSec.%{_p}%} to 0
		set {puff.cooldown.%{_p}%} to true
		loop all items in {_p}'s inventory:
			loop-item is not enchanted with power:
				if loop-item is a bow:
					enchant the loop-item with power 5
			loop-item is not enchanted with punch:
				if loop-item is a bow:
					enchant the loop-item with punch 2
			loop-item is not enchanted with feather falling:
				if loop-item is any boots:
					enchant the loop-item with feather falling 4
function blissPuffAutoEnchantT1(p: player):
	if {puff.cooldown.%{_p}%} is false:
		#send "&f🔺 &bAuto Enchanting" to {_p}
		set {PuffMin.%{_p}%} to 1
		set {PuffSec.%{_p}%} to 0
		set {puff.cooldown.%{_p}%} to true
		loop all items in {_p}'s inventory:
			loop-item is not enchanted with power:
				if loop-item is a bow:
					enchant the loop-item with power 3
			loop-item is not enchanted with punch:
				if loop-item is a bow:
					enchant the loop-item with punch 1
			loop-item is not enchanted with feather falling:
				if loop-item is any boots:
					enchant the loop-item with feather falling 2
function blissPuffActionBarT2(p: player):
	if {Bliss.Energy.%{_p}%} > 1:
		send action bar "&f☁ &b%{Puff3.%{_p}%}%  &f🔮 &b%{Puff4.%{_p}%}% &f⏫ &b%{Puff2.%{_p}%}%" to {_p}
function blissPuffActionBarT1(p: player):
	if {Bliss.Energy.%{_p}%} > 1:
		send action bar "&f🔺 &b%{Puff4.%{_p}%}%" to {_p} 



on flight toggle:
	if player's gamemode is not creative:
		cancel event
		disallow flight to player
		if player's off hand item is {Bliss.Puff.T1.%player%}:
			if {puffDJ.cooldown.%player%} is not true:
				send "&f🔺 &fYou have used Double Jump" to player
				push player forward at speed 0.6
				draw 5 cloud at player with offset vector(0.1, 0.1, 0.1) with extra 0
				push player up at speed 0.5
				set {PuffDJSec.%player%} to 6
				set {puffDJ.cooldown.%player%} to true
				loop 6 times:
					wait 1 ticks
					draw 2 cloud at player with offset vector(0.1, 0.1, 0.1) with extra 0
					wait 1 ticks
					draw 3 cloud at player with offset vector(0.1, 0.1, 0.1) with extra 0
				wait 94 ticks
				allow flight to player
		if player is holding {Bliss.Puff.T1.%player%}:
			if {puffDJ.cooldown.%player%} is not true:
				send "&f🔺 &fYou have used Double Jump" to player
				push player forward at speed 0.6
				draw 5 cloud at player with offset vector(0.1, 0.1, 0.1) with extra 0
				push player up at speed 0.6
				set {PuffDJSec.%player%} to 6
				set {puffDJ.cooldown.%player%} to true
				loop 6 times:
					wait 1 ticks
					draw 2 cloud at player with offset vector(0.1, 0.1, 0.1) with extra 0
					wait 1 ticks
					draw 3 cloud at player with offset vector(0.1, 0.1, 0.1) with extra 0
				wait 94 ticks
				allow flight to player
		if player's off hand item is {Bliss.Puff.T2.%player%}:
			if {puffDJ.cooldown.%player%} is not true:
				cancel event
				send "&f🔮 &fYou have used Double Jump" to player
				push player forward at speed 0.8
				draw 5 cloud at player with offset vector(0.1, 0.1, 0.1) with extra 0
				push player up at speed 0.7
				set {PuffDJSec.%player%} to 6
				set {puffDJ.cooldown.%player%} to true
				loop 6 times:
					wait 1 ticks
					draw 2 cloud at player with offset vector(0.1, 0.1, 0.1) with extra 0
					wait 1 ticks
					draw 3 cloud at player with offset vector(0.1, 0.1, 0.1) with extra 0
				wait 94 ticks
				allow flight to player
		if player is holding {Bliss.Puff.T2.%player%}:
			if {puffDJ.cooldown.%player%} is not true:
				cancel event
				send "&f🔮 &fYou have used Double Jump" to player
				push player forward at speed 0.8
				draw 5 cloud at player with offset vector(0.1, 0.1, 0.1) with extra 0
				push player up at speed 0.7
				set {PuffDJSec.%player%} to 6
				set {puffDJ.cooldown.%player%} to true
				loop 6 times:
					wait 1 ticks
					draw 2 cloud at player with offset vector(0.1, 0.1, 0.1) with extra 0
					wait 1 ticks
					draw 3 cloud at player with offset vector(0.1, 0.1, 0.1) with extra 0
				wait 94 ticks
				allow flight to player

on damage:
	if damage cause is fall:
		if victim's held item is {Bliss.Puff.T1.%victim%}:
			cancel event
		if victim's off hand item is {Bliss.Puff.T1.%victim%}:
			cancel event
		if victim's offhand item is {Bliss.Puff.T2.%victim%}:
			cancel event
		if victim's held item is {Bliss.Puff.T2.%victim%}:
			cancel event

on block trample:
	if event-entity is a player:
		if {Tag..%player%} < 1:
			if {Bliss.Energy.%player%} > 1:
				if player's held item is {Bliss.Puff.T1.%player%}:
					cancel event
				if player's off hand item is {Bliss.Puff.T1.%player%}:
					cancel event
				if player's offhand item is {Bliss.Puff.T2.%player%}:
					cancel event
				if player's held item is {Bliss.Puff.T2.%player%}:
					cancel event

on game event sculk_sensor_tendrils_clicking:
	if {Tag..%player%} < 1:
		if {Bliss.Energy.%player%} > 1:
			if player's held item is {Bliss.Puff.T1.%player%}:
				cancel event
				set block at event-location to air
				wait 1 tick
				set block at event-location to sculk sensor
			if player's off hand item is {Bliss.Puff.T1.%player%}:
				cancel event
				set block at event-location to air
				wait 1 tick
				set block at event-location to sculk sensor
			if player's offhand item is {Bliss.Puff.T2.%player%}:
				cancel event
				set block at event-location to air
				wait 1 tick
				set block at event-location to sculk sensor
			if player's held item is {Bliss.Puff.T2.%player%}:
				cancel event
				set block at event-location to air
				wait 1 tick
				set block at event-location to sculk sensor

#Breezy Bash

on damage:
	if {Tag..%attacker%} < 1:
		if {Bliss.Energy.%attacker%} > 1:
			if attacker's held item is {Bliss.Puff.T2.%attacker%}:
				if {puff.cooldown3.%attacker%} is true:
					send "&f🔮 &cYour &f☁Breezy Bash &cskill is on cooldown for &f%{Puff3.%attacker%}%" to attacker
				if {puff.cooldown3.%attacker%} is not true:
					wait 1 tick
					send "&f🔮 &bYou used &f☁Breezy Bash &bon %victim%" to attacker
					send "&f🔮 &bYou have been affected by &f☁Breezy Bash &bby %attacker%" to victim
					if {dragonegg.%attacker%} is not true:
						set {PuffMin3.%attacker%} to 1
						set {PuffSec3.%attacker%} to 15
					else:
						set {PuffMin3.%attacker%} to 0
						set {PuffSec3.%attacker%} to 40
					set {puff.cooldown3.%attacker%} to true
					push victim up at speed 16
					loop 5 times:
						set {_attacker} to location 0.5 metres above attacker
						set {_victim} to location 0.5 metres above victim
						set {_trail} to a line from {_victim} to {_attacker}
						set particle of {_trail} to dust particle using dustOption(rgb(255, 255, 255), 1.5) with force
						draw shapes {_trail} at {_victim}
						wait 0.1 seconds
					push victim down at speed 24
					loop 2 times:
						loop 10 times:
							set {_attacker} to location 0.5 metres above attacker
							set {_victim} to location 0.5 metres above victim
							set {_trail} to a line from {_victim} to {_attacker}
							set particle of {_trail} to dust particle using dustOption(rgb(255, 255, 255), 1.5) with force
							draw shapes {_trail} at {_victim}
							wait 0.1 seconds
on left click:
	if {Tag..%player%} < 1:
		if {Bliss.Energy.%player%} > 1:
			if player's held item is {Bliss.Puff.T2.%player%}:
				if {puff.cooldown3.%player%} is true:
					send "&f🔮 &cYour &f☁Breezy Bash &cskill is on cooldown for &f%{Puff3.%player%}%" to player
				if {puff.cooldown3.%player%} is not true:
					send "&f🔮 &bYou used &f☁Breezy Bash &bGroup" to player
					if {dragonegg.%player%} is not true:
						set {PuffMin3.%player%} to 1
						set {PuffSec3.%player%} to 15
					else:
						set {PuffMin3.%player%} to 0
						set {PuffSec3.%player%} to 40
					set {puff.cooldown3.%player%} to true
					set {_puff2circles.%player%::location} to player's location
					set {_puffcircles::circle} to a circle of radius 0.75
					set {_puffcircles::smallcircle} to a circle of radius 1
					set {_puffcircles::smallcircle1} to a circle of radius 1.25
					set {_puffcircles::smallcircle2} to a circle of radius 1.5
					set {_puffcircles::smallcircle3} to a circle of radius 1.75
					set {_puffcircles::mediumcircle} to a circle of radius 2
					set {_puffcircles::mediumcircle1} to a circle of radius 2.25
					set {_puffcircles::mediumcircle2} to a circle of radius 2.5
					set {_puffcircles::mediumcircle3} to a circle of radius 2.75
					set {_puffcircles::largecircle} to a circle of radius 3
					set {_puffcircles::largecircle1} to a circle of radius 3.5
					set {_puffcircles::largecircle2} to a circle of radius 4
					set {_puffcircles::largecircle3} to a circle of radius 4.5
					set {_puffcircles::finalcircle} to a circle of radius 5
					set particle of {_puffcircles::*} to dust particle using dustOption(rgb(255, 255, 255), 1.5) with force
					draw shapes {_puffcircles::circle} at {_puff2circles.%player%::location}
					draw shapes {_puffcircles::smallcircle} at {_puff2circles.%player%::location}
					wait 1 tick
					draw shapes {_puffcircles::smallcircle1} at {_puff2circles.%player%::location}
					draw shapes {_puffcircles::smallcircle2} at {_puff2circles.%player%::location}
					wait 1 tick
					draw shapes {_puffcircles::smallcircle3} at {_puff2circles.%player%::location}
					draw shapes {_puffcircles::mediumcircle} at {_puff2circles.%player%::location}
					wait 1 tick
					draw shapes {_puffcircles::mediumcircle1} at {_puff2circles.%player%::location}
					draw shapes {_puffcircles::mediumcircle2} at {_puff2circles.%player%::location}
					wait 1 tick
					draw shapes {_puffcircles::mediumcircle3} at {_puff2circles.%player%::location}
					draw shapes {_puffcircles::largecircle} at {_puff2circles.%player%::location}
					wait 1 tick
					draw shapes {_puffcircles::largecircle1} at {_puff2circles.%player%::location}
					draw shapes {_puffcircles::largecircle2} at {_puff2circles.%player%::location}
					wait 1 tick
					draw shapes {_puffcircles::largecircle3} at {_puff2circles.%player%::location}
					draw shapes {_puffcircles::finalcircle} at {_puff2circles.%player%::location}
					wait 1 tick
					loop 3 times:
						draw shapes {_puffcircles::finalcircle} at {_puff2circles.%player%::location}
					loop all entities within 5 blocks of {_puff2circles.%player%::location}:
						if {Trusted.%player%.%loop-entity%} is not true:
							set {_direction} to vector between {_location} and {_player}
							set {_v} to vector between player and loop-entity
							push loop-entity up at speed 1.25
							push loop-entity {_v} at speed 2.5
					loop 3 times:
						draw shapes {_puffcircles::finalcircle} at {_puff2circles.%player%::location}
#Dash

on right click:
	if {Tag..%player%} < 1:
		if {Bliss.Energy.%player%} > 1:
			if player's held item is {Bliss.Puff.T2.%player%}:
				if {puff.cooldown2.%player%} is true:
					send "&f🔮 &cYour &f⏫Dash &cskill is on cooldown for &f%{Puff2.%player%}%" to player
				if {puff.cooldown2.%player%} is not true:
					send "&f🔮 &bYou have activated &f⏫Dash &bskill" to player
					push player forward at speed 3
					if {dragonegg.%player%} is not true:
						set {PuffMin2.%player%} to 0
						set {PuffSec2.%player%} to 40
					else:
						set {PuffMin2.%player%} to 0
						set {PuffSec2.%player%} to 20
					set {puff.cooldown2.%player%} to true
					loop 2 times:
						loop 12 times:
							loop all entities within 1.5 blocks of the player:
								if {Trusted.%player%.%loop-entity%} is not true:
									damage loop-entity by 5 hearts
							wait 1 ticks
							draw 3 cloud at player with offset vector(0.1, 0.1, 0.1) with extra 0

on damage:
	if attacker's offhand item is {Bliss.Puff.T2.%attacker%}:
		chance of 1%
		apply levitation 1 without particles whilst hiding the potion icon to victim for 2 seconds replacing the existing effect
		
on damage:
	if attacker's offhand item is {Bliss.Puff.T2.%attacker%}:
		chance of 1%
		apply slow falling 1 without particles whilst hiding the potion icon to victim for 2 seconds replacing the existing effect
			
on damage:
	if attacker's offhand item is {Bliss.Puff.T1.%attacker%}:
		chance of 1%
		apply levitation 1 without particles whilst hiding the potion icon to victim for 30 ticks replacing the existing effect					


#[<-----------------Speed----------------->]



#Functions
function blissSpeedAutoEnchantT2(p: player):
	if {speed.cooldown.%{_p}%} is false:
		set {SpeedMin.%{_p}%} to 1
		set {SpeedSec.%{_p}%} to 0
		set {speed.cooldown.%{_p}%} to true
		#send "&e🔮 &bAuto Enchanting" to {_p}
		loop all items in {_p}'s inventory:
			loop-item is not enchanted with efficiency:
				if loop-item is any pickaxe:
					enchant the loop-item with efficiency 5
				if loop-item is any axe:
					enchant the loop-item with efficiency 5
				if loop-item is any hoe:
					enchant the loop-item with efficiency 5
				if loop-item is any shovel:
					enchant the loop-item with efficiency 5
function blissSpeedAutoEnchantT1(p: player):
	if {speed.cooldown.%{_p}%} is false:
		set {SpeedMin.%{_p}%} to 1
		set {SpeedSec.%{_p}%} to 0
		set {speed.cooldown.%{_p}%} to true
		#send "&e🔺 &bAuto Enchanting" to {_p}
		loop all items in {_p}'s inventory:
			loop-item is not enchanted with efficiency:
				if loop-item is any pickaxe:
					enchant the loop-item with efficiency 2
				if loop-item is any axe:
					enchant the loop-item with efficiency 2
				if loop-item is any hoe:
					enchant the loop-item with efficiency 2
				if loop-item is any shovel:
					enchant the loop-item with efficiency 2
function blissSpeedActionBarT2(p: player):
	if {Bliss.Energy.%{_p}%} > 1:
		if boots of {_p} are not enchanted with depth strider:
			if {_p} is not in water:
				remove dolphins grace from potion effects of {_p}
				apply speed 2 without particles whilst hiding the potion icon to {_p} for 2 seconds replacing the existing effect
			else:
				#remove speed from potion effects of {_p}
				apply speed 2 without particles whilst hiding the potion icon to {_p} for 2 seconds replacing the existing effect
				apply dolphins grace 1 without particles whilst hiding the potion icon to {_p} for 2 seconds replacing the existing effect
				if {_p} is sprinting:
					draw 1 of dust particle using dustOption(rgb(244, 255, 28), 1) at location 0.5 blocks below {_p}
		else:
			remove dolphins grace from potion effects of {_p}
			apply speed 2 without particles whilst hiding the potion icon to {_p} for 2 seconds replacing the existing effect
		send action bar "&e🎯 &b%{Speed2.%{_p}%}%  &e🔮 &b%{Speed4.%{_p}%}% &e🌩 &b%{Speed3.%{_p}%}%" to {_p}
function blissSpeedActionBarT1(p: player):
	if {Bliss.Energy.%{_p}%} > 1:
		send action bar "&e🔺 &b%{Speed4.%{_p}%}%" to {_p}
		apply speed 1 without particles whilst hiding the potion icon to {_p} for 2 seconds replacing the existing effect


every 1 second:
	loop all players:
		if block at location of loop-player is soul sand:
			if loop-player's off hand item is {Bliss.Speed.T1.%loop-player%}:
				if {Tag..%loop-player%} < 1:
					if {Bliss.Energy.%loop-player%} > 1:
						apply speed 4 without particles whilst hiding the potion icon to loop-player for 30 ticks replacing the existing effect
			else if loop-player is holding {Bliss.Speed.T1.%loop-player%}:
				if {Tag..%loop-player%} < 1:
					if {Bliss.Energy.%loop-player%} > 1:
						apply speed 4 without particles whilst hiding the potion icon to loop-player for 30 ticks replacing the existing effect
			else if loop-player's off hand item is {Bliss.Speed.T2.%loop-player%}:
				if {Tag..%loop-player%} < 1:
					if {Bliss.Energy.%loop-player%} > 1:
						apply speed 5 without particles whilst hiding the potion icon to loop-player for 30 ticks replacing the existing effect
			else if loop-player is holding {Bliss.Speed.T2.%loop-player%}:
				if {Tag..%loop-player%} < 1:
					if {Bliss.Energy.%loop-player%} > 1:
						apply speed 5 without particles whilst hiding the potion icon to loop-player for 30 ticks replacing the existing effect



# Terminal Velocity

on right click:
	if player's off hand item is {Bliss.Speed.T1.%player%}:
		if {Tag..%player%} < 1:
			if {Bliss.Energy.%player%} > 1:
				if player's held item is a sword or air or an axe:
					if {speed.cooldown4.%player%} is true:
						send "&e🔮 &cYour §eTerminal Velocity &cskill is on cooldown for &e%{Speed4.%player%}%" to player
					if {speed.cooldown4.%player%} is not true:
						if {-DoubleClick::%player's uuid%} is not set:
							set {-DoubleClick::%player's uuid%} to true
						else:
							delete {-DoubleClick::%player's uuid%}
							send "&e🔮 &cYou have activated §eTerminal Velocity" to player
							set {TerminalVelocity.%player%} to true
							apply speed 4 to player for 10 seconds replacing the existing effect
							apply haste 2 to player for 10 seconds replacing the existing effect
							set {SpeedMin4.%player%} to 0
							set {SpeedSec4.%player%} to 40
							set {speed.cooldown4.%player%} to true
							wait 10 seconds
							set {TerminalVelocity.%player%} to false

on right click:
	if player's off hand item is {Bliss.Speed.T2.%player%}:
		if {Tag..%player%} < 1:
			if {Bliss.Energy.%player%} > 1:
				if player's held item is a sword or air or an axe:
					if {speed.cooldown4.%player%} is true:
						send "&e🔮 &cYour §eTerminal Velocity &cskill is on cooldown for &e%{Speed4.%player%}%" to player
					if {speed.cooldown4.%player%} is not true:
						if {-DoubleClick::%player's uuid%} is not set:
							set {-DoubleClick::%player's uuid%} to true
						else:
							delete {-DoubleClick::%player's uuid%}
							send "&e🔮 &cYou have activated §eTerminal Velocity" to player
							set {TerminalVelocity.%player%} to true
							apply speed 4 to player for 10 seconds replacing the existing effect
							apply haste 2 to player for 10 seconds replacing the existing effect
							set {SpeedMin4.%player%} to 0
							set {SpeedSec4.%player%} to 40
							set {speed.cooldown4.%player%} to true
							wait 10 seconds
							set {TerminalVelocity.%player%} to false


#on eat:
	#if {TerminalVelocity.%player%} is true:
		#if player's active tool is golden apple:
		#else if player's active tool is golden carrot:
		#else if player's active tool is cooked beef or cooked porkchop:

#on drop prismarine shard:
	#if event-item is {Bliss.Speed.T2.%player%}:
		#cancel event


# Blur


on damage:
	if {Tag..%attacker%} < 1:
		if {Bliss.Energy.%attacker%} > 1:
			if attacker's held item is {Bliss.Speed.T2.%attacker%}:
				if {speed.cooldown2.%attacker%} is true:
					send "&e🔮 &cYour <##FEFD17>Blur <##B8FFFB> is on cooldown for &e%{Speed2.%attacker%}%" to attacker
				if {speed.cooldown2.%attacker%} is not true:
					send "<##FEFD17>🔮 <##B8FFFB>You have used <##FEFD17>Blur <##B8FFFB>on <##FEFD17>%victim%" to attacker
					send "<##FEFD17>🔮 <##B8FFFB>You have been affected by <##FEFD17>Blur <##B8FFFB>by <##FEFD17>%attacker%" to victim
					if {dragonegg.%attacker%} is not true:
						set {SpeedMin2.%attacker%} to 1
						set {SpeedSec2.%attacker%} to 30
					else:
						set {SpeedMin2.%attacker%} to 0
						set {SpeedSec2.%attacker%} to 45
					set {speed.cooldown2.%attacker%} to true
					set {Blurring} to attacker
					set {Blurring::%victim's uuid%} to true
					set {_i} to attacker's offhand item
					loop 2 times:
						execute console command "/npc remove %attacker%"
						set {_loc} to location 2.5 blocks left of victim
						create citizen named "%attacker%" at {_loc}
						execute console command "/npc select %attacker%"
						execute console command "/npc lookclose"
						execute console command "/npc setequipment HAND diamond_sword"
						execute console command "/npc mirror %attacker% true"
						execute console command "/npc gravity"
						execute console command "/npc activationrange 5"
						execute console command "/npc target %victim% -aggressive"
						damage victim by 1.8 hearts
						strike lightning effect at {_loc}
						set {_direction} to vector between {_loc} and victim
						knock victim {_direction} with strength 0.3
						wait 0.5 seconds
								
						set {_loc} to location 2.5 blocks right and 1 above victim
						execute console command "/npc remove %attacker%"
						create citizen named "%attacker%" at {_loc}
						execute console command "/npc select %attacker%"
						execute console command "/npc lookclose"
						execute console command "/npc setequipment HAND %{_i}%"
						execute console command "/npc mirror %attacker% true"
						execute console command "/npc gravity"
						execute console command "/npc activationrange 5"
						execute console command "/npc target %victim% -aggressive"
						damage victim by 1.8 hearts
						strike lightning effect at {_loc}
						set {_direction} to vector between {_loc} and victim
						knock victim {_direction} with strength 0.3
						wait 0.5 seconds
								
						set {_loc} to location 2.5 infront and 1 right of victim
						execute console command "/npc remove %attacker%"
						create citizen named "%attacker%" at {_loc}
						execute console command "/npc select %attacker%"
						execute console command "/npc lookclose"
						execute console command "/npc setequipment HAND %{_i}%"
						execute console command "/npc mirror %attacker% true"
						execute console command "/npc gravity"
						execute console command "/npc activationrange 5"
						execute console command "/npc target %victim% -aggressive"
						damage victim by 1.8 hearts
						strike lightning effect at {_loc}
						set {_direction} to vector between {_loc} and victim
						knock victim {_direction} with strength 0.3
						wait 0.5 seconds
								
						set {_loc} to location 2 blocks behind and 1 left and 1 above victim
						execute console command "/npc remove %attacker%"
						create citizen named "%attacker%" at {_loc}
						execute console command "/npc select %attacker%"
						execute console command "/npc lookclose"
						execute console command "/npc setequipment HAND %{_i}%"
						execute console command "/npc mirror %attacker% true"
						execute console command "/npc gravity"
						execute console command "/npc activationrange 5"
						execute console command "/npc target %victim% -aggressive"
						damage victim by 1.8 hearts
						strike lightning effect at {_loc}
						set {_direction} to vector between {_loc} and victim
						knock victim {_direction} with strength 0.3
						wait 0.3 seconds
								
						set {_loc} to location 2.5 blocks right of victim
						execute console command "/npc remove %attacker%"
						create citizen named "%attacker%" at {_loc}
						execute console command "/npc select %attacker%"
						execute console command "/npc lookclose"
						execute console command "/npc setequipment HAND %{_i}%"
						execute console command "/npc mirror %attacker% true"
						execute console command "/npc gravity"
						execute console command "/npc activationrange 5"
						execute console command "/npc target %victim% -aggressive"
						damage victim by 1.8 hearts
						strike lightning effect at {_loc}
						set {_direction} to vector between {_loc} and victim
						knock victim {_direction} with strength 0.3
						wait 0.5 seconds

						set {_loc} to location 2 blocks infront and 1.5 left of victim
						execute console command "/npc remove %attacker%"
						create citizen named "%attacker%" at {_loc}
						execute console command "/npc select %attacker%"
						execute console command "/npc lookclose"
						execute console command "/npc setequipment HAND %{_i}%"
						execute console command "/npc mirror %attacker% true"
						execute console command "/npc gravity"
						execute console command "/npc activationrange 5"
						execute console command "/npc target %victim% -aggressive"
						damage victim by 1.8 hearts
						strike lightning effect at {_loc}
						set {_direction} to vector between {_loc} and victim
						knock victim {_direction} with strength 0.3
						wait 0.5 seconds

						set {_loc} to location 2.5 blocks left and 1 above victim
						execute console command "/npc remove %attacker%"
						create citizen named "%attacker%" at {_loc}
						execute console command "/npc select %attacker%"
						execute console command "/npc lookclose"
						execute console command "/npc setequipment HAND %{_i}%"
						execute console command "/npc mirror %attacker% true"
						execute console command "/npc gravity"
						execute console command "/npc activationrange 5"
						execute console command "/npc target %victim% -aggressive"
						damage victim by 1.8 hearts
						strike lightning effect at {_loc}
						set {_direction} to vector between {_loc} and victim
						knock victim {_direction} with strength 0.3
						wait 0.5 seconds
						execute console command "/npc remove %attacker%"
					delete {Blurring}
					delete {Blurring::%victim's uuid%}
						

on death:
	if {Blurring::%victim's uuid%} is true:
		if attacker is {Blurring}:
			if victim is not invisible:
				if {-Blurring} is not invisible:
					set death message to "%victim% couldn't keep up with %{-Blurring}%"

#Speed Storm

on right click on entity:
	if {Tag..%player%} < 1:
		if {Bliss.Energy.%player%} > 1:
			if player's held item is {Bliss.Speed.T2.%player%}:
				if {speed.cooldown3.%player%} is true:
					send "&e🔮 &cYour &e🌩Speed Storm &cskill is on cooldown for &e%{Speed3.%player%}%" to player
				if {speed.cooldown3.%player%} is not true:
					send "&e🔮 &bYou summoned a &e🌩speed storm" to player
					set {Speed.3.storm::%player%} to player's location
					set {Speed.3.storm.storm::%player%} to location 5 metres above player's location
					if {dragonegg.%player%} is not true:
						set {SpeedMin3.%player%} to 2
						set {SpeedSec3.%player%} to 30
					else:
						set {SpeedMin3.%player%} to 1
						set {SpeedSec3.%player%} to 15
					set {speed.cooldown3.%player%} to true
					set {_spcircles::circle} to a circle of radius 0.75
					set {_spcircles::smallcircle} to a circle of radius 1
					set {_spcircles::smallcircle1} to a circle of radius 1.25
					set {_spcircles::smallcircle2} to a circle of radius 1.5
					set {_spcircles::smallcircle3} to a circle of radius 1.75
					set {_spcircles::mediumcircle} to a circle of radius 2
					set {_spcircles::mediumcircle1} to a circle of radius 2.25
					set {_spcircles::mediumcircle2} to a circle of radius 2.5
					set {_spcircles::mediumcircle3} to a circle of radius 2.75
					set {_spcircles::largecircle} to a circle of radius 3
					set {_spcircles::largecircle1} to a circle of radius 3.5
					set {_spcircles::largecircle2} to a circle of radius 4
					set {_spcircles::largecircle3} to a circle of radius 4.5
					set {_spcircles::finalcircle} to a circle of radius 5
					set {_sapcircles::finalcircle} to a circle of radius 5
					set particle of {_spcircles::*} to dust particle using dustOption(rgb(244, 255, 28), 1) with force
					set particle of {_sapcircles::*} to 1 of happy_villager particle
					draw shapes {_spcircles::circle} at {Speed.3.storm::%player%}
					draw shapes {_spcircles::smallcircle} at {Speed.3.storm::%player%}
					wait 1 tick
					draw shapes {_spcircles::smallcircle1} at {Speed.3.storm::%player%}
					draw shapes {_spcircles::smallcircle2} at {Speed.3.storm::%player%}
					wait 1 tick
					draw shapes {_spcircles::smallcircle3} at {Speed.3.storm::%player%}
					draw shapes {_spcircles::mediumcircle} at {Speed.3.storm::%player%}
					wait 1 tick
					draw shapes {_spcircles::mediumcircle1} at {Speed.3.storm::%player%}
					draw shapes {_spcircles::mediumcircle2} at {Speed.3.storm::%player%}
					wait 1 tick
					draw shapes {_spcircles::mediumcircle3} at {Speed.3.storm::%player%}
					draw shapes {_spcircles::largecircle} at {Speed.3.storm::%player%}
					wait 1 tick
					draw shapes {_spcircles::largecircle1} at {Speed.3.storm::%player%}
					draw shapes {_spcircles::largecircle2} at {Speed.3.storm::%player%}
					wait 1 tick
					draw shapes {_spcircles::largecircle3} at {Speed.3.storm::%player%}
					draw shapes {_spcircles::finalcircle} at {Speed.3.storm::%player%}
					wait 1 tick
					draw shapes {_spcircles::finalcircle} at {Speed.3.storm::%player%}
					apply speed 4 without particles whilst hiding the potion icon to player for 15 seconds replacing the existing effect
					set {Bliss.Speed.Attack.Trusted.%player%} to 15
					loop all players within 5 blocks around {Speed.3.storm::%player%}:
						if {Trusted.%player%.%loop-player%} is true:
							send "&e🔮 🌩 &bYou have speed and faster crits" to loop-player
							apply speed 4 without particles whilst hiding the potion icon to loop-entity for 15 seconds replacing the existing effect
							set {Bliss.Speed.Attack.Trusted.%loop-player%} to 15
					set {Speed.3.storm.storm::%player%} to false
					set {Speed.3.storm::%player%} to false

on right click:
	if {Tag..%player%} < 1:
		if {Bliss.Energy.%player%} > 1:
			if player's held item is {Bliss.Speed.T2.%player%}:
				if {speed.cooldown3.%player%} is true:
					send "&e🔮 &cYour &e🌩Speed Storm &cskill is on cooldown for &e%{Speed3.%player%}%" to player
				if {speed.cooldown3.%player%} is not true:
					send "&e🔮 &bYou summoned a &e🌩speed storm" to player
					set {Speed.3.storm::%player%} to player's location
					set {Speed.3.storm.storm::%player%} to location 5 metres above player's location
					if {dragonegg.%player%} is not true:
						set {SpeedMin3.%player%} to 2
						set {SpeedSec3.%player%} to 30
					else:
						set {SpeedMin3.%player%} to 1
						set {SpeedSec3.%player%} to 15
					set {speed.cooldown3.%player%} to true
					set {_spcircles::circle} to a circle of radius 0.75
					set {_spcircles::smallcircle} to a circle of radius 1
					set {_spcircles::smallcircle1} to a circle of radius 1.25
					set {_spcircles::smallcircle2} to a circle of radius 1.5
					set {_spcircles::smallcircle3} to a circle of radius 1.75
					set {_spcircles::mediumcircle} to a circle of radius 2
					set {_spcircles::mediumcircle1} to a circle of radius 2.25
					set {_spcircles::mediumcircle2} to a circle of radius 2.5
					set {_spcircles::mediumcircle3} to a circle of radius 2.75
					set {_spcircles::largecircle} to a circle of radius 3
					set {_spcircles::largecircle1} to a circle of radius 3.5
					set {_spcircles::largecircle2} to a circle of radius 4
					set {_spcircles::largecircle3} to a circle of radius 4.5
					set {_spcircles::finalcircle} to a circle of radius 5
					set {_sapcircles::finalcircle} to a circle of radius 5
					set particle of {_spcircles::*} to dust particle using dustOption(rgb(244, 255, 28), 1) with force
					set particle of {_sapcircles::*} to 1 of happy_villager particle
					draw shapes {_spcircles::circle} at {Speed.3.storm::%player%}
					draw shapes {_spcircles::smallcircle} at {Speed.3.storm::%player%}
					wait 1 tick
					draw shapes {_spcircles::smallcircle1} at {Speed.3.storm::%player%}
					draw shapes {_spcircles::smallcircle2} at {Speed.3.storm::%player%}
					wait 1 tick
					draw shapes {_spcircles::smallcircle3} at {Speed.3.storm::%player%}
					draw shapes {_spcircles::mediumcircle} at {Speed.3.storm::%player%}
					wait 1 tick
					draw shapes {_spcircles::mediumcircle1} at {Speed.3.storm::%player%}
					draw shapes {_spcircles::mediumcircle2} at {Speed.3.storm::%player%}
					wait 1 tick
					draw shapes {_spcircles::mediumcircle3} at {Speed.3.storm::%player%}
					draw shapes {_spcircles::largecircle} at {Speed.3.storm::%player%}
					wait 1 tick
					draw shapes {_spcircles::largecircle1} at {Speed.3.storm::%player%}
					draw shapes {_spcircles::largecircle2} at {Speed.3.storm::%player%}
					wait 1 tick
					draw shapes {_spcircles::largecircle3} at {Speed.3.storm::%player%}
					draw shapes {_spcircles::finalcircle} at {Speed.3.storm::%player%}
					wait 1 tick
					draw shapes {_spcircles::finalcircle} at {Speed.3.storm::%player%}
					set {Trusted.%player%.%player%} to true
					set {Trusted.%player%.%player%} to false
					#apply speed 3 without particles whilst hiding the potion icon to player for 15 seconds replacing the existing effect
					set {Bliss.Speed.Attack.Trusted.%player%} to 15
					set {Trusted.%player%.%player%} to true
					loop all players within 5 blocks around {Speed.3.storm::%player%}:
						if {Trusted.%player%.%loop-player%} is not true:
							set {Speed.storm.striked::%uuid of loop-player%} to 2
					loop 30 times:
						set {speedlightingstorm} to {Speed.3.storm::%player%}
						set {_x} to random number between -4 and 4
						add {_x} to x coordinate of {speedlightingstorm}
						set {_z} to random number between -4 and 4
						add {_z} to z coordinate of {speedlightingstorm}
						strike lightning at {speedlightingstorm}
						#draw shapes {_spcircles::finalcircle} at {Speed.3.storm::%player%}
						#draw shapes {_spcircles::finalcircle} at {Speed.3.storm::%player%}
						#draw shapes {_sapcircles::finalcircle} at {Speed.3.storm::%player%}
						wait 5 tick
						#draw shapes {_spcircles::finalcircle} at {Speed.3.storm::%player%}
						#draw shapes {_spcircles::finalcircle} at {Speed.3.storm::%player%}
						#draw shapes {_sapcircles::finalcircle} at {Speed.3.storm::%player%}
						wait 5 tick
					set {Speed.3.storm.storm::%player%} to false
					set {Speed.3.storm::%player%} to false

every 1 second:
	loop all players:
		if loop-player is not within 5 blocks around {Speed.3.storm::*}:
			set {Speed.storm.striked::%uuid of loop-player%} to 0

on damage:
	if damage cause is lightning:
		if victim is a player:
			loop all players:
				if victim is within 5 blocks around {Speed.3.storm::%loop-player%}:
					if {Trusted.%loop-player%.%victim%} is not true:
						cancel event
						set {Speed.storm.striked::%uuid of victim%} to 2
					if {Trusted.%loop-player%.%victim%} is true:
						cancel event
						#apply speed 4 without particles whilst hiding the potion icon to victim for 6 seconds replacing the existing effect
						set {Bliss.Speed.Attack.Trusted.Storm.%victim%} to 4
on player walk:
	if {Speed.storm.striked::%uuid of player%} > 0:
		#teleport player to player
		cancel event

on player turn around:
	if {Speed.storm.striked::%uuid of player%} > 0:
		cancel event




#[<-----------------Strength----------------->]



#Frailer / Nullify

on damage:
	if {Tag..%damager%} < 1:
		if {Bliss.Energy.%damager%} > 1:
			if damager's held item is {Bliss.Strength.T2.%damager%}:
				if {strength.cooldown2.%damager%} is true:
					send "&4🔮 &cYour §4🤺Frailer &cskill is on cooldown for &4%{Strength2.%damager%}%" to damager
				if {strength.cooldown2.%damager%} is not true:
					send "&4🔮 &bYou used &4🤺Frailer &bskill on &4%victim%" to damager
					send "&4🔮 &bYou have been affected with &4🤺Frailer &bby &e%damager%" to victim
					#set {_strdur::%victim%} to duration of potion effect strength of victim
					#set {_spddur::%victim%} to duration of potion effect speed of victim
					#set {_regendur::%victim%} to duration of potion effect regeneration of victim
					#set {_regentier::%victim%} to potion tier of regeneration of victim
					#set {_absorpdur::%victim%} to duration of potion effect absorption of victim
					#set {_absorptier::%victim%} to tier of absorption of victim
					#set {_resdur::%victim%} to duration of potion effect resistance of victim
					#set {_restier::%victim%} to potion tier of resistance of victim
					#set {_firedur::%victim%} to duration of potion effect fire resistance of victim
					#set {_breathdur::%victim%} to duration of potion effect water breathing of victim
					#set {_dolphdur::%victim%} to duration of potion effect dolphins grace of victim
					#set {_hastedur::%victim%} to duration of potion effect haste of victim
					#set {_hastetier::%victim%} to potion tier of haste of victim
					#set {_invisdur::%victim%} to duration of potion effect invisibility of victim
					clear all the potion effects of victim
					apply weakness 1 to victim for 30 seconds replacing the existing effect
					if {dragonegg.%damager%} is not true:
						set {StrengthMin2.%damager%} to 2
						set {StrengthSec2.%damager%} to 0
					else:
						set {StrengthMin2.%damager%} to 1
						set {StrengthSec2.%damager%} to 0
					set {strength.cooldown2.%damager%} to true
					set {StrengthFrail::%victim%} to true
					set {StrengthFrail::Bar::%victim%} to boss bar with id "%damager%sfrailer" with title "&fFrailer" with color red with progress 100
					set bar progress of {StrengthFrail::Bar::%victim%} to 100
					set bar style of {StrengthFrail::Bar::%victim%} to solid bar
					add victim to bossbar players of {StrengthFrail::Bar::%victim%}
					loop 100 times:
						set {_attacker} to location 0.5 metres above attacker
						set {_victim} to location 0.5 metres above victim
						set {_trail} to a line from {_victim} to {_attacker}
						set particle of {_trail} to dust particle using dustOption(rgb(199, 0, 10), 1.5) with force
						draw shapes {_trail} at {_victim}
						remove 0.167 from bar progress of {StrengthFrail::Bar::%victim%}
						wait 1 tick
					loop 500 times:
						remove 0.167 from bar progress of {StrengthFrail::Bar::%victim%}
						wait 1 tick
			
					remove victim from bossbar players of {StrengthFrail::Bar::%victim%}
					set {StrengthFrail::%victim's uuid%} to false
						
on left click:
	if {Tag..%player%} < 1:
		if {Bliss.Energy.%player%} > 1:
			if player's held item is {Bliss.Strength.T2.%player%}:
				if {strength.cooldown2.%player%} is not true:
					send "<##F10303>🔮 <##B8FFFB>You have used &f🤺<##F10303>Nullify &7(radius 5)" to player
					if {dragonegg.%player%} is not true:
						set {StrengthMin2.%player%} to 2
						set {StrengthSec2.%player%} to 0
					else:
						set {StrengthMin2.%player%} to 1
						set {StrengthSec2.%player%} to 0
					set {strength.cooldown2.%player%} to true
					set {_scircles::circle} to a circle of radius 0.75
					set {_scircles::smallcircle} to a circle of radius 1
					set {_scircles::smallcircle1} to a circle of radius 1.25
					set {_scircles::smallcircle2} to a circle of radius 1.5
					set {_scircles::smallcircle3} to a circle of radius 1.75
					set {_scircles::mediumcircle} to a circle of radius 2
					set {_scircles::mediumcircle1} to a circle of radius 2.25
					set {_scircles::mediumcircle2} to a circle of radius 2.5
					set {_scircles::mediumcircle3} to a circle of radius 2.75
					set {_scircles::largecircle} to a circle of radius 3
					set {_scircles::largecircle1} to a circle of radius 3.25
					set {_scircles::largecircle2} to a circle of radius 3.5
					set {_scircles::largecircle3} to a circle of radius 3.75
					set {_scircles::finalcircle} to a circle of radius 4
					set particle of {_scircles::*} to dust particle using dustOption(rgb(199, 0, 10), 1.5) with force
					draw shapes {_scircles::circle} at player's location
					draw shapes {_scircles::smallcircle} at player's location
					wait 1 tick
					draw shapes {_scircles::smallcircle1} at player's location
					draw shapes {_scircles::smallcircle2} at player's location
					wait 1 tick
					draw shapes {_scircles::smallcircle3} at player's location
					draw shapes {_scircles::mediumcircle} at player's location
					wait 1 tick
					draw shapes {_scircles::mediumcircle1} at player's location
					draw shapes {_scircles::mediumcircle2} at player's location
					wait 1 tick
					draw shapes {_scircles::mediumcircle3} at player's location
					draw shapes {_scircles::largecircle} at player's location
					wait 1 tick
					draw shapes {_scircles::largecircle1} at player's location
					draw shapes {_scircles::largecircle2} at player's location
					wait 1 tick
					draw shapes {_scircles::largecircle3} at player's location
					draw shapes {_scircles::finalcircle} at player's location
					wait 1 tick
					draw shapes {_scircles::finalcircle} at player's location
					loop all players within 5 blocks of the player:
						if {Trusted.%player%.%loop-player%} is not true:
							send "&4🔮 &bYou have been affected with &f🤺<##F10303>Nullify &bby %player%" to loop-player
							set {StrengthNull::%loop-player%} to true
							set {StrengthNull::Bar::%loop-player%} to boss bar with id "%player%snullify" with title "&fNullify" with color red with progress 100
							set bar progress of {StrengthNull::Bar::%loop-player%} to 100
							set bar style of {StrengthNull::Bar::%loop-player%} to solid bar
							add loop-player to bossbar players of {StrengthNull::Bar::%loop-player%}
							delete {potions.%loop-player%::*}
							loop active potion effects of loop-player:
								add loop-value-2 to {potions.%loop-player%::*}
							clear all the potion effects of loop-player

							loop 600 times:
								remove 0.167 from bar progress of {StrengthNull::Bar::%loop-player%}
								wait 1 tick

							loop {potions.%loop-player%::*}:
								apply loop-value-2 to loop-player
					
							set {StrengthNull::%loop-player's uuid%} to false
							remove loop-player from bossbar players of {StrengthNull::Bar::%loop-player%}

on consume of potion:
	if {StrengthNull::%player%} is true:
		cancel event

on right click:
	if player's held item is a splash potion:
		if {StrengthNull::%player%} is true:
			cancel event

	if player's held item is a lingering potion:
		if {StrengthNull::%player%} is true:
			cancel event

	if player's offhand item is a splash potion:
		if {StrengthNull::%player%} is true:
			cancel event

	if player's offhand item is a lingering potion:
		if {StrengthNull::%player%} is true:
			cancel event

on death:
	remove victim from bossbar players of {StrengthNull::Bar::%victim%}
	set {StrengthNull::%victim%} to false
	remove victim from bossbar players of {StrengthFrail::Bar::%victim%}
	set {StrengthFrail::%victim%} to false


on damage:
	if hit is critical:
		if {ChadStrength..%attacker%} is true:
			if {Test.Double.%attacker%} is 3:
				set damage to damage * 1.6
				set {Test.Double.%attacker%} to 0
			add 1 to {Test.Double.%attacker%}
			if {Test.DoubleGroup.%attacker%} is 8:
				set damage to damage * 1.6
				set {Test.DoubleGroup.%attacker%} to 0
			add 1 to {Test.DoubleGroup.%attacker%}
		else if {ChadStrengthGroup..%attacker%} is true:
			if {Test.Double.%attacker%} is 3:
				set damage to damage * 1.6
				set {Test.Double.%attacker%} to 0
			add 1 to {Test.Double.%attacker%}
			if {Test.DoubleGroup.%attacker%} is 8:
				set damage to damage * 1.6
				set {Test.DoubleGroup.%attacker%} to 0
			add 1 to {Test.DoubleGroup.%attacker%}
	if attacker's off hand item is {Bliss.Strength.T2.%attacker%}:
		if attacker's health < 4:
			add 3 to damage
		else if attacker's health is 4.5:
			add 2.5 to damage
		else if attacker's health is 5:
			add 2.5 to damage
		else if attacker's health is 5.5:
			add 2 to damage
		else if attacker's health is 6:
			add 2 to damage
		else if attacker's health is 6.5:
			add 2 to damage
		else if attacker's health is 7:
			add 1.5 to damage
		else if attacker's health is 7.5:
			add 1.5 to damage
		else if attacker's health is 8:
			add 1 to damage
		else if attacker's health is 8.5:
			add 0.5 to damage
	else if attacker's off hand item is {Bliss.Strength.T1.%attacker%}:
		if attacker's health < 3:
			add 3 to damage
		else if attacker's health is 3.5:
			add 2.5 to damage
		else if attacker's health is 4:
			add 2 to damage
		else if attacker's health is 4.5:
			add 2 to damage
		else if attacker's health is 5:
			add 1.5 to damage
		else if attacker's health is 5.5:
			add 1.5 to damage
		else if attacker's health is 6:
			add 1 to damage
		else if attacker's health is 6.5:
			add 1 to damage
		else if attacker's health is 7:
			add 0.5 to damage
		else if attacker's health is 7.5:
			add 0.5 to damage
	#if {dmg..%attacker%} > 11:
		#set {dmg..%attacker%} to 12




#[<-----------------Wealth----------------->]



# Pockets

on right click:
	if player's off hand item is {Bliss.Wealth.T2.%player%}:
		if {Tag..%player%} < 1:
			if {Bliss.Energy.%player%} > 1:
				if player's held item is a sword or air or an axe:
					if {-DoubleClick::%player's uuid%} is not set:
						set {-DoubleClick::%player's uuid%} to true
					else:
						delete {-DoubleClick::%player's uuid%}
						if {wealthPockets::%player's uuid%} is not set:
							set {wealthPockets::%player's uuid%} to a dropper inventory named "Pockets" 
							open {wealthPockets::%player's uuid%} for player
						else:
							open {wealthPockets::%player's uuid%} for player
on right click:
	if player's off hand item is {Bliss.Wealth.T1.%player%}:
		if {Tag..%player%} < 1:
			if {Bliss.Energy.%player%} > 1:
				if player's held item is a sword or air or an axe:
					if {-DoubleClick::%player's uuid%} is not set:
						set {-DoubleClick::%player's uuid%} to true
					else:
						delete {-DoubleClick::%player's uuid%}
						if {wealthPockets::%player's uuid%} is not set:
							set {wealthPockets::%player's uuid%} to a dropper inventory named "Pockets" 
							open {wealthPockets::%player's uuid%} for player
						else:
							open {wealthPockets::%player's uuid%} for player

on death of player:
	if {wealthPockets::%victim's uuid%} is set:
		set {_inv} to {wealthPockets::%victim's uuid%}
		loop 5 times:
			set {_num} to a random integer between 0 and 8
			if slot {_num} of {_inv} is not air:
				set {_item} to slot {_num} of {_inv}
				if {_item} is not air:
					drop {_item} at victim's location
					set slot {_num} of {_inv} to air
			else:
				set {_num} to a random integer between 0 and 8

on damage:
	if {Tag..%attacker%} < 1:
		if {Bliss.Energy.%attacker%} > 1:
			if {Bliss.WealthDuraCd.%attacker%} < 1:
				if attacker's off hand item is {Bliss.Wealth.T2.%attacker%}:
					set  {Bliss.WealthDuraCd.%attacker%} to 3
					set durability of victim's helmet to durability of victim's helmet - 1
					set durability of victim's chestplate to durability of victim's chestplate - 1
					set durability of victim's leggings to durability of victim's leggings - 1
					set durability of victim's boots to durability of victim's boots - 1
				else if attacker's off hand item is {Bliss.Wealth.T1.%attacker%}:
					set  {Bliss.WealthDuraCd.%attacker%} to 3
					set durability of victim's helmet to durability of victim's helmet - 1
					set durability of victim's chestplate to durability of victim's chestplate - 1
					set durability of victim's leggings to durability of victim's leggings - 1
					set durability of victim's boots to durability of victim's boots - 1


every 1 second:
	loop all players:
		remove 1 from {Bliss.WealthDuraCd.%loop-player%}



on player pickup xp:
	if {Tag..%player%} < 1:
		if {Bliss.Energy.%player%} > 1:
			if player's off hand item is {Bliss.Wealth.T2.%player%}:
				add spawned experience to spawned experience
			else if player's off hand item is {Bliss.Wealth.T1.%player%}:
				add spawned experience to spawned experience
	

#RichRush / Amplification

on right click on entity:
	if {Tag..%player%} < 1:
		if {Bliss.Energy.%player%} > 1:
			if player's held item is {Bliss.Wealth.T2.%player%}:
				if {wealth.cooldown2.%player%} is not true:
					send "<##0EC912>🔮 <##B8FFFB>You have used <##0EC912>Amplification <##B8FFFB>on <##0EC912>%event-entity%" to player
					set {_loc} to location of event-entity
					if {dragonegg.%player%} is not true:
						set {WealthMin2.%player%} to 9
						set {WealthSec2.%player%} to 59
					else:
						set {WealthMin2.%player%} to 4
						set {WealthSec2.%player%} to 59
					set {wealth.cooldown2.%player%} to true
					set {_num} to 1
					set {Wealth.Part.4::%player%} to player's location
					set {_ampcircles::circle} to a circle of radius 0.75
					set {_ampcircles::smallcircle} to a circle of radius 1
					set {_ampcircles::smallcircle1} to a circle of radius 1.5
					set {_ampcircles::smallcircle2} to a circle of radius 2
					set {_ampcircles::smallcircle3} to a circle of radius 2.5
					set {_ampcircles::mediumcircle} to a circle of radius 2
					set particle of {_ampcircles::*} to dust particle using dustOption(rgb(0, 166, 44), 1.5) with force
					draw shapes {_ampcircles::smallcircle} at {Wealth.Part.4::%player%}
					wait 1 tick
					draw shapes {_ampcircles::smallcircle1} at {Wealth.Part.4::%player%}
					draw shapes {_ampcircles::smallcircle2} at {Wealth.Part.4::%player%}
					wait 1 tick
					draw shapes {_ampcircles::smallcircle3} at {Wealth.Part.4::%player%}
					draw shapes {_ampcircles::mediumcircle} at {Wealth.Part.4::%player%}
					if {Prog2} is not true:
						loop all players within 2 blocks of {_loc}:
							if {Trusted.%player%.%loop-player%} is true:
								send "<##0EC912>🔮 <##B8FFFB>You have been affected with <##0EC912>Amplification <##B8FFFB>by <##0EC912>%player%" to loop-player
								loop all items in loop-player's inventory:
									if loop-item is enchanted with sharpness 5:
										enchant loop-item with sharpness 6
									if loop-item is enchanted with unbreaking 3:
										enchant loop-item with unbreaking 4
									if loop-item is enchanted with protection 4:
										enchant loop-item with protection 5
									if loop-item is enchanted with projectile protection 4:
										enchant loop-item with projectile protection 5
									if loop-item is enchanted with fire protection 4:
										enchant loop-item with fire protection 5
									if loop-item is enchanted with blast protection 4:
										enchant loop-item with blast protection 5
									if loop-item is enchanted with looting 3:
										enchant loop-item with looting 4
									if loop-item is enchanted with sweeping edge 3:
										enchant loop-item with sweeping edge 4
									if loop-item is enchanted with fire aspect 2:
										enchant loop-item with fire aspect 3
									if loop-item is enchanted with depth strider 3:
										enchant loop-item with depth strider 4
									if loop-item is enchanted with feather falling 4:
										enchant loop-item with feather falling 5
									if loop-item is enchanted with swift sneak 3:
										enchant loop-item with swift sneak 4
									if loop-item is enchanted with soul speed 3:
										enchant loop-item with soul speed 4
									if loop-item is enchanted with respiration 3:
										enchant loop-item with respiration 4
									if loop-item is enchanted with aqua affinity:
										enchant loop-item with aqua affinity 2
									if loop-item is enchanted with thorns 3:
										enchant loop-item with thorns 4
									if loop-item is enchanted with efficiency 5:
										enchant loop-item with efficiency 6
									if loop-item is enchanted with fortune 3:
										enchant loop-item with fortune 4
									if loop-item is enchanted with silk touch:
										enchant loop-item with silk touch 2
									if loop-item is enchanted with power 5:
										enchant loop-item with power 6
									if loop-item is enchanted with infinity:
										enchant loop-item with infinity 2
									if loop-item is enchanted with flame:
										enchant loop-item with flame 2
									if loop-item is enchanted with multishot:
										enchant loop-item with multishot 2
									if loop-item is enchanted with punch 2:
										enchant loop-item with punch 3
									if loop-item is enchanted with quick charge 3:
										enchant loop-item with quick charge 4
									if loop-item is enchanted with lure 3:
										enchant loop-item with lure 4
									if loop-item is enchanted with luck of the sea 3:
										enchant loop-item with luck of the sea 4
									if loop-item is enchanted with loyalty 3:
										enchant loop-item with loyalty 4
									if loop-item is enchanted with impaling 5:
										enchant loop-item with impaling 6
									if loop-item is enchanted with riptide 3:
										enchant loop-item with riptide 4
									if loop-item is enchanted with channeling:
										enchant loop-item with channeling 2
									if loop-item is enchanted with piercing 4:
										enchant loop-item with piercing 5
								
						loop all items in player's inventory:
							if loop-item is enchanted with sharpness 5:
								enchant loop-item with sharpness 6
								set {Wealth.Amplif} to true
							if loop-item is enchanted with unbreaking 3:
								enchant loop-item with unbreaking 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with protection 4:
								enchant loop-item with protection 5
								set {Wealth.Amplif} to true
							if loop-item is enchanted with projectile protection 4:
								enchant loop-item with projectile protection 5
								set {Wealth.Amplif} to true
							if loop-item is enchanted with fire protection 4:
								enchant loop-item with fire protection 5
								set {Wealth.Amplif} to true
							if loop-item is enchanted with blast protection 4:
								enchant loop-item with blast protection 5
								set {Wealth.Amplif} to true
							if loop-item is enchanted with looting 3:
								enchant loop-item with looting 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with sweeping edge 3:
								enchant loop-item with sweeping edge 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with fire aspect 2:
								enchant loop-item with fire aspect 3
								set {Wealth.Amplif} to true
							if loop-item is enchanted with depth strider 3:
								enchant loop-item with depth strider 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with feather falling 4:
								enchant loop-item with feather falling 5
								set {Wealth.Amplif} to true
							if loop-item is enchanted with swift sneak 3:
								enchant loop-item with swift sneak 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with soul speed 3:
								enchant loop-item with soul speed 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with respiration 3:
								enchant loop-item with respiration 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with aqua affinity:
								enchant loop-item with aqua affinity 2
								set {Wealth.Amplif} to true
							if loop-item is enchanted with thorns 3:
								enchant loop-item with thorns 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with efficiency 5:
								enchant loop-item with efficiency 6
								set {Wealth.Amplif} to true
							if loop-item is enchanted with fortune 3:
								enchant loop-item with fortune 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with silk touch:
								enchant loop-item with silk touch 2
								set {Wealth.Amplif} to true
							if loop-item is enchanted with power 5:
								enchant loop-item with power 6
								set {Wealth.Amplif} to true
							if loop-item is enchanted with infinity:
								enchant loop-item with infinity 2
								set {Wealth.Amplif} to true
							if loop-item is enchanted with flame:
								enchant loop-item with flame 2
								set {Wealth.Amplif} to true
							if loop-item is enchanted with multishot:
								enchant loop-item with multishot 2
								set {Wealth.Amplif} to true
							if loop-item is enchanted with punch 2:
								enchant loop-item with punch 3
								set {Wealth.Amplif} to true
							if loop-item is enchanted with quick charge 3:
								enchant loop-item with quick charge 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with lure 3:
								enchant loop-item with lure 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with luck of the sea 3:
								enchant loop-item with luck of the sea 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with loyalty 3:
								enchant loop-item with loyalty 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with impaling 5:
								enchant loop-item with impaling 6
								set {Wealth.Amplif} to true
							if loop-item is enchanted with riptide 3:
								enchant loop-item with riptide 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with channeling:
								enchant loop-item with channeling 2
								set {Wealth.Amplif} to true
							if loop-item is enchanted with piercing 4:
								enchant loop-item with piercing 5
								set {Wealth.Amplif} to true
						wait 30 seconds
						set {Wealth.Amplif} to false
					else if {Prog2} is true:
						loop all players within 2 blocks of {_loc}:
							if {Trusted.%player%.%loop-player%} is true:
								send "<##0EC912>🔮 <##B8FFFB>You have been affected with <##0EC912>Amplification <##B8FFFB>by <##0EC912>%player%" to loop-player
								loop all items in loop-player's inventory:
									if loop-item is enchanted with sharpness 4:
										enchant loop-item with sharpness 5
									if loop-item is enchanted with unbreaking 3:
										enchant loop-item with unbreaking 4
									if loop-item is enchanted with protection 3:
										enchant loop-item with protection 4
									if loop-item is enchanted with projectile protection 4:
										enchant loop-item with projectile protection 5
									if loop-item is enchanted with fire protection 4:
										enchant loop-item with fire protection 5
									if loop-item is enchanted with blast protection 4:
										enchant loop-item with blast protection 5
									if loop-item is enchanted with looting 3:
										enchant loop-item with looting 4
									if loop-item is enchanted with sweeping edge 3:
										enchant loop-item with sweeping edge 4
									if loop-item is enchanted with fire aspect 2:
										enchant loop-item with fire aspect 3
									if loop-item is enchanted with depth strider 3:
										enchant loop-item with depth strider 4
									if loop-item is enchanted with feather falling 4:
										enchant loop-item with feather falling 5
									if loop-item is enchanted with swift sneak 3:
										enchant loop-item with swift sneak 4
									if loop-item is enchanted with soul speed 3:
										enchant loop-item with soul speed 4
									if loop-item is enchanted with respiration 3:
										enchant loop-item with respiration 4
									if loop-item is enchanted with aqua affinity:
										enchant loop-item with aqua affinity 2
									if loop-item is enchanted with thorns 3:
										enchant loop-item with thorns 4
									if loop-item is enchanted with efficiency 4:
										enchant loop-item with efficiency 5
									if loop-item is enchanted with fortune 3:
										enchant loop-item with fortune 4
									if loop-item is enchanted with silk touch:
										enchant loop-item with silk touch 2
									if loop-item is enchanted with power 3:
										enchant loop-item with power 4
									if loop-item is enchanted with infinity:
										enchant loop-item with infinity 2
									if loop-item is enchanted with multishot:
										enchant loop-item with multishot 2
									if loop-item is enchanted with punch 2:
										enchant loop-item with punch 3
									if loop-item is enchanted with quick charge 3:
										enchant loop-item with quick charge 4
									if loop-item is enchanted with lure 3:
										enchant loop-item with lure 4
									if loop-item is enchanted with luck of the sea 3:
										enchant loop-item with luck of the sea 4
									if loop-item is enchanted with loyalty 3:
										enchant loop-item with loyalty 4
									if loop-item is enchanted with impaling 5:
										enchant loop-item with impaling 6
									if loop-item is enchanted with riptide 3:
										enchant loop-item with riptide 4
									if loop-item is enchanted with channeling:
										enchant loop-item with channeling 2
									if loop-item is enchanted with piercing 4:
										enchant loop-item with piercing 5
								
						loop all items in player's inventory:
							if loop-item is enchanted with sharpness 4:
								enchant loop-item with sharpness 5
								set {Wealth.Amplif} to true
							if loop-item is enchanted with unbreaking 3:
								enchant loop-item with unbreaking 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with protection 3:
								enchant loop-item with protection 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with projectile protection 3:
								enchant loop-item with projectile protection 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with fire protection 4:
								enchant loop-item with fire protection 5
								set {Wealth.Amplif} to true
							if loop-item is enchanted with blast protection 4:
								enchant loop-item with blast protection 5
								set {Wealth.Amplif} to true
							if loop-item is enchanted with looting 3:
								enchant loop-item with looting 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with sweeping edge 3:
								enchant loop-item with sweeping edge 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with fire aspect 2:
								enchant loop-item with fire aspect 3
								set {Wealth.Amplif} to true
							if loop-item is enchanted with depth strider 3:
								enchant loop-item with depth strider 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with feather falling 4:
								enchant loop-item with feather falling 5
								set {Wealth.Amplif} to true
							if loop-item is enchanted with swift sneak 3:
								enchant loop-item with swift sneak 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with soul speed 3:
								enchant loop-item with soul speed 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with respiration 3:
								enchant loop-item with respiration 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with aqua affinity:
								enchant loop-item with aqua affinity 2
								set {Wealth.Amplif} to true
							if loop-item is enchanted with thorns 3:
								enchant loop-item with thorns 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with efficiency 4:
								enchant loop-item with efficiency 5
								set {Wealth.Amplif} to true
							if loop-item is enchanted with fortune 3:
								enchant loop-item with fortune 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with silk touch:
								enchant loop-item with silk touch 2
								set {Wealth.Amplif} to true
							if loop-item is enchanted with power 3:
								enchant loop-item with power 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with infinity:
								enchant loop-item with infinity 2
								set {Wealth.Amplif} to true
							if loop-item is enchanted with flame:
								enchant loop-item with flame 2
								set {Wealth.Amplif} to true
							if loop-item is enchanted with multishot:
								enchant loop-item with multishot 2
								set {Wealth.Amplif} to true
							if loop-item is enchanted with punch 2:
								enchant loop-item with punch 3
								set {Wealth.Amplif} to true
							if loop-item is enchanted with quick charge 3:
								enchant loop-item with quick charge 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with lure 3:
								enchant loop-item with lure 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with luck of the sea 3:
								enchant loop-item with luck of the sea 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with loyalty 3:
								enchant loop-item with loyalty 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with impaling 5:
								enchant loop-item with impaling 6
								set {Wealth.Amplif} to true
							if loop-item is enchanted with riptide 3:
								enchant loop-item with riptide 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with channeling:
								enchant loop-item with channeling 2
								set {Wealth.Amplif} to true
							if loop-item is enchanted with piercing 4:
								enchant loop-item with piercing 5
								set {Wealth.Amplif} to true
						wait 30 seconds
						set {Wealth.Amplif} to false
					else if {Prog3} is true:
						loop all players within 2 blocks of {_loc}:
							if {Trusted.%player%.%loop-player%} is true:
								send "<##0EC912>🔮 <##B8FFFB>You have been affected with <##0EC912>Amplification <##B8FFFB>by <##0EC912>%player%" to loop-player
								loop all items in loop-player's inventory:
									if loop-item is enchanted with sharpness 4:
										enchant loop-item with sharpness 5
									if loop-item is enchanted with unbreaking 3:
										enchant loop-item with unbreaking 4
									if loop-item is enchanted with protection 3:
										enchant loop-item with protection 4
									if loop-item is enchanted with projectile protection 4:
										enchant loop-item with projectile protection 5
									if loop-item is enchanted with fire protection 4:
										enchant loop-item with fire protection 5
									if loop-item is enchanted with blast protection 4:
										enchant loop-item with blast protection 5
									if loop-item is enchanted with looting 3:
										enchant loop-item with looting 4
									if loop-item is enchanted with sweeping edge 3:
										enchant loop-item with sweeping edge 4
									if loop-item is enchanted with fire aspect 2:
										enchant loop-item with fire aspect 3
									if loop-item is enchanted with depth strider 3:
										enchant loop-item with depth strider 4
									if loop-item is enchanted with feather falling 4:
										enchant loop-item with feather falling 5
									if loop-item is enchanted with swift sneak 3:
										enchant loop-item with swift sneak 4
									if loop-item is enchanted with soul speed 3:
										enchant loop-item with soul speed 4
									if loop-item is enchanted with respiration 3:
										enchant loop-item with respiration 4
									if loop-item is enchanted with aqua affinity:
										enchant loop-item with aqua affinity 2
									if loop-item is enchanted with thorns 3:
										enchant loop-item with thorns 4
									if loop-item is enchanted with efficiency 4:
										enchant loop-item with efficiency 5
									if loop-item is enchanted with fortune 3:
										enchant loop-item with fortune 4
									if loop-item is enchanted with silk touch:
										enchant loop-item with silk touch 2
									if loop-item is enchanted with power 3:
										enchant loop-item with power 4
									if loop-item is enchanted with infinity:
										enchant loop-item with infinity 2
									if loop-item is enchanted with multishot:
										enchant loop-item with multishot 2
									if loop-item is enchanted with punch 2:
										enchant loop-item with punch 3
									if loop-item is enchanted with quick charge 3:
										enchant loop-item with quick charge 4
									if loop-item is enchanted with lure 3:
										enchant loop-item with lure 4
									if loop-item is enchanted with luck of the sea 3:
										enchant loop-item with luck of the sea 4
									if loop-item is enchanted with loyalty 3:
										enchant loop-item with loyalty 4
									if loop-item is enchanted with impaling 5:
										enchant loop-item with impaling 6
									if loop-item is enchanted with riptide 3:
										enchant loop-item with riptide 4
									if loop-item is enchanted with channeling:
										enchant loop-item with channeling 2
									if loop-item is enchanted with piercing 4:
										enchant loop-item with piercing 5
								
						loop all items in player's inventory:
							if loop-item is enchanted with sharpness 4:
								enchant loop-item with sharpness 5
								set {Wealth.Amplif} to true
							if loop-item is enchanted with unbreaking 3:
								enchant loop-item with unbreaking 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with protection 3:
								enchant loop-item with protection 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with projectile protection 3:
								enchant loop-item with projectile protection 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with fire protection 4:
								enchant loop-item with fire protection 5
								set {Wealth.Amplif} to true
							if loop-item is enchanted with blast protection 4:
								enchant loop-item with blast protection 5
								set {Wealth.Amplif} to true
							if loop-item is enchanted with looting 3:
								enchant loop-item with looting 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with sweeping edge 3:
								enchant loop-item with sweeping edge 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with fire aspect 2:
								enchant loop-item with fire aspect 3
								set {Wealth.Amplif} to true
							if loop-item is enchanted with depth strider 3:
								enchant loop-item with depth strider 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with feather falling 4:
								enchant loop-item with feather falling 5
								set {Wealth.Amplif} to true
							if loop-item is enchanted with swift sneak 3:
								enchant loop-item with swift sneak 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with soul speed 3:
								enchant loop-item with soul speed 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with respiration 3:
								enchant loop-item with respiration 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with aqua affinity:
								enchant loop-item with aqua affinity 2
								set {Wealth.Amplif} to true
							if loop-item is enchanted with thorns 3:
								enchant loop-item with thorns 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with efficiency 4:
								enchant loop-item with efficiency 5
								set {Wealth.Amplif} to true
							if loop-item is enchanted with fortune 3:
								enchant loop-item with fortune 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with silk touch:
								enchant loop-item with silk touch 2
								set {Wealth.Amplif} to true
							if loop-item is enchanted with power 3:
								enchant loop-item with power 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with infinity:
								enchant loop-item with infinity 2
								set {Wealth.Amplif} to true
							if loop-item is enchanted with flame:
								enchant loop-item with flame 2
								set {Wealth.Amplif} to true
							if loop-item is enchanted with multishot:
								enchant loop-item with multishot 2
								set {Wealth.Amplif} to true
							if loop-item is enchanted with punch 2:
								enchant loop-item with punch 3
								set {Wealth.Amplif} to true
							if loop-item is enchanted with quick charge 3:
								enchant loop-item with quick charge 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with lure 3:
								enchant loop-item with lure 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with luck of the sea 3:
								enchant loop-item with luck of the sea 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with loyalty 3:
								enchant loop-item with loyalty 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with impaling 5:
								enchant loop-item with impaling 6
								set {Wealth.Amplif} to true
							if loop-item is enchanted with riptide 3:
								enchant loop-item with riptide 4
								set {Wealth.Amplif} to true
							if loop-item is enchanted with channeling:
								enchant loop-item with channeling 2
								set {Wealth.Amplif} to true
							if loop-item is enchanted with piercing 4:
								enchant loop-item with piercing 5
								set {Wealth.Amplif} to true
						wait 30 seconds
						set {Wealth.Amplif} to false
				
every 5 seconds:
	loop all players:
		#if loop-player is not an operator:
			#disallow flight to loop-player
		if {Wealth.Amplif} is not true: # Unenchanting
			loop all items in loop-player's inventory:
				if {Prog2} is true:
					if loop-item is enchanted with fire aspect 2:
						enchant loop-item with fire aspect 0
					if loop-item is enchanted with fire aspect 1:
						enchant loop-item with fire aspect 0
					if loop-item is enchanted with flame:
						enchant loop-item with flame 0

				if loop-item is enchanted with sharpness 6:
					enchant loop-item with sharpness 5

				if loop-item is enchanted with unbreaking 4:
					enchant loop-item with unbreaking 3
					
				if loop-item is enchanted with protection 5:
					enchant loop-item with protection 4

				if loop-item is enchanted with projectile protection 5:
					enchant loop-item with projectile protection 4

				if loop-item is enchanted with fire protection 5:
					enchant loop-item with fire protection 4

				if loop-item is enchanted with blast protection 5:
					enchant loop-item with blast protection 4

				if loop-item is enchanted with looting 4:
					enchant loop-item with looting 3

				if loop-item is enchanted with sweeping edge 4:
					enchant loop-item with sweeping edge 3

				if loop-item is enchanted with fire aspect 3:
					enchant loop-item with fire aspect 2 

				if loop-item is enchanted with depth strider 4:
					enchant loop-item with depth strider 3

				if loop-item is enchanted with feather falling 5:
					enchant loop-item with feather falling 4

				if loop-item is enchanted with swift sneak 4:
					enchant loop-item with swift sneak 3

				if loop-item is enchanted with soul speed 4:
					enchant loop-item with soul speed 3

				if loop-item is enchanted with respiration 4:
					enchant loop-item with respiration 3

				if loop-item is enchanted with aqua affinity 2:
					enchant loop-item with aqua affinity

				if loop-item is enchanted with thorns 4:
					enchant loop-item with thorns 3

				if loop-item is enchanted with efficiency 6:
					enchant loop-item with efficiency 5

				if loop-item is enchanted with fortune 4:
					enchant loop-item with fortune 3

				if loop-item is enchanted with silk touch 2:
					enchant loop-item with silk touch

				if loop-item is enchanted with power 6:
					enchant loop-item with power 5

				if loop-item is enchanted with infinity 2:
					enchant loop-item with infinity

				if loop-item is enchanted with flame 2:
					enchant loop-item with flame

				if loop-item is enchanted with multishot 2:
					enchant loop-item with multishot

				if loop-item is enchanted with punch 3:
					enchant loop-item with punch 2

				if loop-item is enchanted with quick charge 4:
					enchant loop-item with quick charge 3

				if loop-item is enchanted with lure 4:
					enchant loop-item with lure 3

				if loop-item is enchanted with luck of the sea 4:
					enchant loop-item with luck of the sea 3

				if loop-item is enchanted with loyalty 4:
					enchant loop-item with loyalty 3

				if loop-item is enchanted with impaling 6:
					enchant loop-item with impaling 5
					
				if loop-item is enchanted with riptide 4:
					enchant loop-item with riptide 3
					
				if loop-item is enchanted with channeling 2:
					enchant loop-item with channeling
					
				if loop-item is enchanted with piercing 5:
					enchant loop-item with piercing 4


on right click:
	if {Tag..%player%} < 1:
		if {Bliss.Energy.%player%} > 1:
			if player's held item is {Bliss.Wealth.T2.%player%}:
				#if event-entity is not set:
				if {wealth.cooldown2.%player%} is not true:
					send "<##0EC912>🔮 <##B8FFFB>You have used <##0EC912>Rich Rush" to player
					set {RichRush..%player%} to true
					if {dragonegg.%player%} is not true:
						set {WealthMin2.%player%} to 9
						set {WealthSec2.%player%} to 59
					else:
						set {WealthMin2.%player%} to 4
						set {WealthSec2.%player%} to 59
					set {wealth.cooldown2.%player%} to true
					wait 5 minutes
					set {RichRush..%player%} to false
on break deepslate iron ore:
	if player's off hand item is {Bliss.Wealth.T2.%player%}:
		if {Bliss.Energy.%player%} > 1:
			if {orePerMine.%player%} < 4:
				add 1 to {orePerMine.%player%}
			if {orePerMine.%player%} is 3:
				set {orePerMine.%player%} to 0
				drop raw iron
on break deepslate iron ore:
	if {RichRush..%player%} is true:
		if player's tool is not enchanted with silk touch:
			drop 1 raw iron
on break iron ore:
	if player's off hand item is {Bliss.Wealth.T2.%player%}:
		if {Bliss.Energy.%player%} > 1:
			if {orePerMine.%player%} < 4:
				add 1 to {orePerMine.%player%}
			if {orePerMine.%player%} is 3:
				set {orePerMine.%player%} to 0
				drop raw iron
on break iron ore:
	if {RichRush..%player%} is true:
		if player's tool is not enchanted with silk touch:
			drop 1 raw iron
on break deepslate gold ore:
	if player's off hand item is {Bliss.Wealth.T2.%player%}:
		if {Bliss.Energy.%player%} > 1:
			if {orePerMine.%player%} < 4:
				add 1 to {orePerMine.%player%}
			if {orePerMine.%player%} is 3:
				set {orePerMine.%player%} to 0
				drop raw gold
on break deepslate gold ore:
	if {RichRush..%player%} is true:
		if player's tool is not enchanted with silk touch:
			drop 1 raw gold
on break gold ore:
	if player's off hand item is {Bliss.Wealth.T2.%player%}:
		if {Bliss.Energy.%player%} > 1:
			if {orePerMine.%player%} < 4:
				add 1 to {orePerMine.%player%}
			if {orePerMine.%player%} is 3:
				set {orePerMine.%player%} to 0
				drop raw gold
on break gold ore:
	if {RichRush..%player%} is true:
		if player's tool is not enchanted with silk touch:
			drop 1 raw gold
on break deepslate diamond ore:
	if player's off hand item is {Bliss.Wealth.T2.%player%}:
		if {Bliss.Energy.%player%} > 1:
			if {orePerMine.%player%} < 4:
				add 1 to {orePerMine.%player%}
			if {orePerMine.%player%} is 3:
				set {orePerMine.%player%} to 0
				drop diamond
on break deepslate diamond ore:
	if {RichRush..%player%} is true:
		if player's tool is not enchanted with silk touch:
			drop 1 diamond
on break diamond ore:
	if player's off hand item is {Bliss.Wealth.T2.%player%}:
		if {Bliss.Energy.%player%} > 1:
			if {orePerMine.%player%} < 4:
				add 1 to {orePerMine.%player%}
			if {orePerMine.%player%} is 3:
				set {orePerMine.%player%} to 0
				drop diamond
on break diamond ore:
	if {RichRush..%player%} is true:
		if player's tool is not enchanted with silk touch:
			drop 1 diamond
on break lapis ore:
	if player's off hand item is {Bliss.Wealth.T2.%player%}:
		if {Bliss.Energy.%player%} > 1:
			if {orePerMine.%player%} < 4:
				add 1 to {orePerMine.%player%}
			if {orePerMine.%player%} is 3:
				set {orePerMine.%player%} to 0
				drop 3 lapis
on break lapis ore:
	if {RichRush..%player%} is true:
		if player's tool is not enchanted with silk touch:
			drop 3 lapis
on break deepslate lapis ore:
	if player's off hand item is {Bliss.Wealth.T2.%player%}:
		if {Bliss.Energy.%player%} > 1:
			if {orePerMine.%player%} < 4:
				add 1 to {orePerMine.%player%}
			if {orePerMine.%player%} is 3:
				set {orePerMine.%player%} to 0
				drop 3 lapis
on break deepslate lapis ore:
	if {RichRush..%player%} is true:
		if player's tool is not enchanted with silk touch:
			drop 3 lapis
on break emerald ore:
	if player's off hand item is {Bliss.Wealth.T2.%player%}:
		if {Bliss.Energy.%player%} > 1:
			if {orePerMine.%player%} < 4:
				add 1 to {orePerMine.%player%}
			if {orePerMine.%player%} is 3:
				set {orePerMine.%player%} to 0
				drop 1 emerald
on break emerald ore:
	if {RichRush..%player%} is true:
		if player's tool is not enchanted with silk touch:
			drop 1 emerald
on break deepslate emerald ore:
	if player's off hand item is {Bliss.Wealth.T2.%player%}:
		if {Bliss.Energy.%player%} > 1:
			if {orePerMine.%player%} < 4:
				add 1 to {orePerMine.%player%}
			if {orePerMine.%player%} is 3:
				set {orePerMine.%player%} to 0
				drop 1 emerald
on break deepslate emerald ore:
	if {RichRush..%player%} is true:
		if player's tool is not enchanted with silk touch:
			drop 1 emerald
on break deepslate redstone ore:
	if player's off hand item is {Bliss.Wealth.T2.%player%}:
		if {Bliss.Energy.%player%} > 1:
			if {orePerMine.%player%} < 4:
				add 1 to {orePerMine.%player%}
			if {orePerMine.%player%} is 3:
				set {orePerMine.%player%} to 0
				drop 3 redstone
on break redstone ore:
	if {RichRush..%player%} is true:
		if player's tool is not enchanted with silk touch:
			drop 3 redstone
on break deepslate redstone ore:
	if player's off hand item is {Bliss.Wealth.T2.%player%}:
		if {Bliss.Energy.%player%} > 1:
			if {orePerMine.%player%} < 4:
				add 1 to {orePerMine.%player%}
			if {orePerMine.%player%} is 3:
				set {orePerMine.%player%} to 0
				drop 3 redstone
on break deepslate redstone ore:
	if {RichRush..%player%} is true:
		if player's tool is not enchanted with silk touch:
			drop 3 redstone
on break copper ore:
	if player's off hand item is {Bliss.Wealth.T2.%player%}:
		if {Bliss.Energy.%player%} > 1:
			if {orePerMine.%player%} < 4:
				add 1 to {orePerMine.%player%}
			if {orePerMine.%player%} is 3:
				set {orePerMine.%player%} to 0
				drop 1 raw copper
on break copper ore:
	if {RichRush..%player%} is true:
		if player's tool is not enchanted with silk touch:
			drop 1 raw copper
on break deepslate copper ore:
	if player's off hand item is {Bliss.Wealth.T2.%player%}:
		if {Bliss.Energy.%player%} > 1:
			if {orePerMine.%player%} < 4:
				add 1 to {orePerMine.%player%}
			if {orePerMine.%player%} is 3:
				set {orePerMine.%player%} to 0
				drop 1 raw copper
on break deepslate copper ore:
	if {RichRush..%player%} is true:
		if player's tool is not enchanted with silk touch:
			drop 1 raw copper
on break coal ore:
	if player's off hand item is {Bliss.Wealth.T2.%player%}:
		if {Bliss.Energy.%player%} > 1:
			if {orePerMine.%player%} < 4:
				add 1 to {orePerMine.%player%}
			if {orePerMine.%player%} is 3:
				set {orePerMine.%player%} to 0
				drop 1 coal
on break coal ore:
	if {RichRush..%player%} is true:
		if player's tool is not enchanted with silk touch:
			drop 1 coal
on break deepslate coal ore:
	if player's off hand item is {Bliss.Wealth.T2.%player%}:
		if {Bliss.Energy.%player%} > 1:
			if {orePerMine.%player%} < 4:
				add 1 to {orePerMine.%player%}
			if {orePerMine.%player%} is 3:
				set {orePerMine.%player%} to 0
				drop 1 coal
on break deepslate coal ore:
	if {RichRush..%player%} is true:
		if player's tool is not enchanted with silk touch:
			drop 1 coal
on break ancient debris:
	if player's off hand item is {Bliss.Wealth.T2.%player%}:
		if {Bliss.Energy.%player%} > 1:
			clear drops
			drop 2 netherite scrap
	else if player's off hand item is {Bliss.Wealth.T1.%player%}:
		if {Bliss.Energy.%player%} > 1:
			clear drops
			drop 2 netherite scrap


#Unfortunate

		
on damage:
	if {Tag..%attacker%} < 1:
		if {Bliss.Energy.%attacker%} > 1:
			if attacker's held item is {Bliss.Wealth.T2.%attacker%}:
				if {wealth.cooldown3.%attacker%} is true:
					send "&2🔮 &cYour §a🍀§2Unfortunate &cskill is on cooldown for &2%{WealthMin3.%attacker%}%m &2%{WealthSec3.%attacker%}%s" to attacker
				if {wealth.cooldown3.%attacker%} is not true:
					set {unfortunate...%victim%} to true
					send "&2🔮 &bYou used §a🍀§2Unfortunate &bskill on &2%victim%" to attacker
					send "&2🔮 &bYou have been affected with §a🍀§2Unfortunate &bby &e%attacker%" to victim
					set {wealth.cooldown3.%attacker%} to true
					if {dragonegg.%attacker%} is not true:
						set {WealthMin3.%attacker%} to 3
						set {WealthSec3.%attacker%} to 20
					else:
						set {WealthMin3.%attacker%} to 1
						set {WealthSec3.%attacker%} to 40
					set bar progress of {-Unfortunate::Bar::%attacker's uuid%} to 100
					set {-Unfortunate::Bar::%attacker's uuid%} to boss bar with id "%attacker's uuid%sunforunate" with title "&fUnfortunate" with color green with progress 100
					set bar style of {-Unfortunate::Bar::%attacker's uuid%} to solid bar
					add victim to bossbar players of {-Unfortunate::Bar::%attacker's uuid%}
							
					#loop 800 times:
						#remove 0.125 from bar progress of {-Unfortunate::Bar::%attacker's uuid%}
						#wait 1 tick
					loop 5 times: # 5 seconds, 100 times total
						loop 10 times: # 1 second, 20 times total
							set {_attacker} to location 0.5 metres above attacker
							set {_victim} to location 0.5 metres above victim
							set {_trail} to a line from {_victim} to {_attacker}
							set particle of {_trail} to dust particle using dustOption(rgb(0, 166, 44), 1.5) with force
							draw shapes {_trail} at {_victim}
							loop 2 times:
								remove 0.125 from bar progress of {-Unfortunate::Bar::%attacker's uuid%}
								wait 1 tick
					loop 700 times: # 35 seconds
						remove 0.125 from bar progress of {-Unfortunate::Bar::%attacker's uuid%}
						wait 1 tick
					remove victim from bossbar players of {-Unfortunate::Bar::%attacker's uuid%}
					#wait 40 seconds
					set {unfortunate...%victim%} to false		

on left click:
	if {Tag..%player%} < 1:
		if {Bliss.Energy.%player%} > 1:
			if player's held item is {Bliss.Wealth.T2.%player%}:
				if {wealth.cooldown3.%player%} is not true:
					set {wealth.cooldown3.%player%} to true
					if {dragonegg.%player%} is not true:
						set {WealthMin3.%player%} to 3
						set {WealthSec3.%player%} to 20
					else:
						set {WealthMin3.%player%} to 1
						set {WealthSec3.%player%} to 40
					send "<##0EC912>🔮 <##B8FFFB>You have used &f🍀<##0EC912>Item Lock" to player
					set {Wealth.Part.5::%player%} to player's location
					set {_lockcircles::circle} to a circle of radius 0.75
					set {_lockcircles::smallcircle} to a circle of radius 1
					set {_lockcircles::smallcircle1} to a circle of radius 1.25
					set {_lockcircles::smallcircle2} to a circle of radius 1.5
					set {_lockcircles::smallcircle3} to a circle of radius 1.75
					set {_lockcircles::mediumcircle} to a circle of radius 2
					set particle of {_lockcircles::*} to dust particle using dustOption(rgb(0, 166, 44), 1.5) with force
					draw shapes {_lockcircles::circle} at {Wealth.Part.5::%player%}
					draw shapes {_lockcircles::smallcircle} at {Wealth.Part.5::%player%}
					wait 1 tick
					draw shapes {_lockcircles::smallcircle1} at {Wealth.Part.5::%player%}
					draw shapes {_lockcircles::smallcircle2} at {Wealth.Part.5::%player%}
					wait 1 tick
					draw shapes {_lockcircles::smallcircle3} at {Wealth.Part.5::%player%}
					draw shapes {_lockcircles::mediumcircle} at {Wealth.Part.5::%player%}
					loop all players within 2 blocks of player's location:
						if loop-player is not player:
							if {Trusted.%player%.%loop-player%} is not true:
								if loop-player's held item is not a prismarine shard or an amethyst shard:
									set item cooldown of loop-player's held item for loop-player to 30 seconds
									send "<##0EC912>🔮 <##B8FFFB>Your held item has been locked for <##0EC912>30 seconds <##B8FFFB>by <##0EC912>%player%" to loop-player
									set bar progress of {Wealth.LockBar::%player%} to 100
									set {Wealth.LockBar::%player%} to boss bar with id "%player%sitemlock" with title "&fItem Lock" with color green with progress 100
									set bar style of {Wealth.LockBar::%player%} to solid bar
									add loop-player to bossbar players of {Wealth.LockBar::%player%}
								
									loop 600 times:
										remove 0.167 from bar progress of {Wealth.LockBar::%player%}
										wait 1 tick
							
									remove loop-player from bossbar players of {Wealth.LockBar::%player%}

on damage:
	if attacker has attacker's tool on cooldown:
		cancel event

on left click:
	if player has player's tool on cooldown:
		cancel event

on right click:
	if player has player's tool on cooldown:
		cancel event


on damage:
	if {unfortunate...%attacker%} is true:
		chance of 50%
		cancel event
		play sound "block.anvil.land" with volume 0.2 and pitch 1 at attacker's location
on eat:
	if {unfortunate...%player%} is true:
		chance of 50%
		play sound "block.anvil.land" with volume 0.2 and pitch 1 at player's location
		cancel event
on shoot:
	if {unfortunate...%shooter%} is true:
		chance of 50%
		play sound "block.anvil.land" with volume 0.2 and pitch 1 at shooter's location
		cancel event
on place:
	if {unfortunate...%player%} is true:
		chance of 50%
		play sound "block.anvil.land" with volume 0.2 and pitch 1 at player's location
		cancel event

#[<-----------------Flux----------------->]

on player move:
	if {Flux.Freeze.%player%} > 0:
		teleport player to player


on shoot:
	if {Tag..%shooter%} < 1:
		if {Bliss.Energy.%shooter%} > 1:
			if shooter's off hand item is {Bliss.Flux.T2.%shooter%}:
				if event-projectile is an arrow:
					chance of 20%
					set {-fluxShot1::%shooter's uuid%} to true
					set {-fluxShot::%event-projectile%} to true
			else if shooter's off hand item is {Bliss.Flux.T1.%shooter%}:
				if event-projectile is an arrow:
					chance of 20%
					set {-fluxShot1::%shooter's uuid%} to true
					set {-fluxShot::%event-projectile%} to true

on projectile hit:
	if event-projectile is an arrow:
		set {-fluxShot::%event-projectile%} to false

on shoot:
	if {Tag..%shooter%} < 1:
		if {Bliss.Energy.%shooter%} > 1:
			if shooter's off hand item is {Bliss.Flux.T2.%shooter%}:
				if event-projectile is an arrow:
					loop 100 times:
						wait 1 tick
						if {-fluxShot::%event-projectile%} is true:
							draw 1 of dust using dustOption(rgb(94, 215, 255), 1) at location of event-projectile with extra 0.000000001 with force
						else:
							stop loop
			else if shooter's off hand item is {Bliss.Flux.T1.%shooter%}:
				if event-projectile is an arrow:
					loop 100 times:
						wait 1 tick
						if {-fluxShot::%event-projectile%} is true:
							draw 1 of dust using dustOption(rgb(94, 215, 255), 1) at location of event-projectile with extra 0.000000001 with force
						else:
							stop loop

on damage:
	if {Tag..%attacker%} < 1:
		if {Bliss.Energy.%attacker%} > 1:
			if event-projectile is an arrow:
				if {-fluxShot1::%attacker's uuid%} is true:
					strike lightning at victim
					play sound "block.beacon.activate" with volume 10 at victim
					set {-fluxPlayerShot::%victim's uuid%} to true
					wait 1 tick
					set {-fluxShot::%event-projectile%} to false
					set {-fluxShot1::%attacker's uuid%} to false
					wait 1.5 seconds
					set {-fluxPlayerShot::%victim's uuid%} to false
	
on player move:
	if {-fluxPlayerShot::%player's uuid%} is true:
		cancel event


on damage:
	if {Tag..%attacker%} < 1:
		if {Bliss.Energy.%attacker%} > 1:
			set {-fluxMoved::%victim's uuid%} to 0
			set {-fluxDamaged::%victim's uuid%} to 0
			set the victim's walk speed to 0.2
			if attacker's off hand item is {Bliss.Flux.T2.%attacker%}:
				set {-fluxDamagedTimer::%attacker's uuid%} to 3
				add 1 to {-fluxDamaged::%attacker's uuid%}
				
				if {-fluxDamaged::%attacker's uuid%} is between 0 and 3:
					add 0.3 to damage
						
				if {-fluxDamaged::%attacker's uuid%} is between 3 and 6:
					add 0.4 to damage
						
				if {-fluxDamaged::%attacker's uuid%} is between 6 and 9:
					add 0.6 to damage
					
				if {-fluxDamaged::%attacker's uuid%} is between 9 and 12:
					add 0.8 to damage
						
				if {-fluxDamaged::%attacker's uuid%} is between 12 and 15:
					add 1 to damage
						
				if {-fluxDamaged::%attacker's uuid%} is between 15 and 99:
					add 1.5 to damage
			if attacker's off hand item is {Bliss.Flux.T1.%attacker%}:
				set {-fluxDamagedTimer::%attacker's uuid%} to 3
				add 1 to {-fluxDamaged::%attacker's uuid%}
				
				if {-fluxDamaged::%attacker's uuid%} is between 0 and 3:
					add 0.3 to damage
						
				if {-fluxDamaged::%attacker's uuid%} is between 3 and 6:
					add 0.4 to damage
						
				if {-fluxDamaged::%attacker's uuid%} is between 6 and 9:
					add 0.6 to damage
					
				if {-fluxDamaged::%attacker's uuid%} is between 9 and 12:
					add 0.8 to damage
						
				if {-fluxDamaged::%attacker's uuid%} is between 12 and 15:
					add 1 to damage
						
				if {-fluxDamaged::%attacker's uuid%} is between 15 and 99:
					add 1.5 to damage
			

on break:
	if {Tag..%player%} < 1:
		if {Bliss.Energy.%player%} > 1:
			if player's off hand item is {Bliss.Flux.T2.%player%}:
				set {-fluxBrokenTimer::%player's uuid%} to 3
				add 1 to {-fluxBroken::%player's uuid%}
			if player's off hand item is {Bliss.Flux.T1.%player%}:
				set {-fluxBrokenTimer::%player's uuid%} to 3
				add 1 to {-fluxBroken::%player's uuid%}

on player walk:
	if {Tag..%player%} < 1:
		if {Bliss.Energy.%player%} > 1:
			if player's off hand item is {Bliss.Flux.T2.%player%}:
				set {-fluxMovedTimer::%player's uuid%} to 3
				add 1 to {-fluxMoved::%player's uuid%}
				
				if {-fluxMoved::%player's uuid%} is between 0 and 100:
					set the player's walk speed to 0.2
					
				if {-fluxMoved::%player's uuid%} is between 100 and 200:
					set the player's walk speed to 0.22
					if {-fluxSpeed1::%player's uuid%} is not true:
						send "&7Now moving at +10%% speed!" to player
						set {-fluxSpeed1::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 200 and 300:
					set the player's walk speed to 0.24
					if {-fluxSpeed2::%player's uuid%} is not true:
						send "&7Now moving at +20%% speed!" to player
						set {-fluxSpeed2::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 300 and 400:
					set the player's walk speed to 0.26
					if {-fluxSpeed3::%player's uuid%} is not true:
						send "&7Now moving at +30%% speed!" to player
						set {-fluxSpeed3::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 400 and 500:
					set the player's walk speed to 0.28
					if {-fluxSpeed4::%player's uuid%} is not true:
						send "&7Now moving at +40%% speed!" to player
						set {-fluxSpeed4::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 500 and 600:
					set the player's walk speed to 0.3
					if {-fluxSpeed5::%player's uuid%} is not true:
						send "&7Now moving at +50%% speed!" to player
						set {-fluxSpeed5::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 600 and 700:
					set the player's walk speed to 0.32
					if {-fluxSpeed6::%player's uuid%} is not true:
						send "&7Now moving at +60%% speed!" to player
						set {-fluxSpeed6::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 700 and 800:
					set the player's walk speed to 0.34
					if {-fluxSpeed7::%player's uuid%} is not true:
						send "&7Now moving at +70%% speed!" to player
						set {-fluxSpeed7::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 900 and 1000:
					set the player's walk speed to 0.36
					if {-fluxSpeed8::%player's uuid%} is not true:
						send "&7Now moving at +80%% speed!" to player
						set {-fluxSpeed8::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 1000 and 1100:
					set the player's walk speed to 0.38
					if {-fluxSpeed9::%player's uuid%} is not true:
						send "&7Now moving at +90%% speed!" to player
						set {-fluxSpeed9::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 1100 and 1200:
					set the player's walk speed to 0.4
					if {-fluxSpeed10::%player's uuid%} is not true:
						send "&7Now moving at +100%% speed!" to player
						set {-fluxSpeed10::%player's uuid%} to true

				if {-fluxMoved::%player's uuid%} is between 1200 and 1300:
					set the player's walk speed to 0.42
					if {-fluxSpeed11::%player's uuid%} is not true:
						send "&7Now moving at +110%% speed!" to player
						set {-fluxSpeed11::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 1300 and 1400:
					set the player's walk speed to 0.44
					if {-fluxSpeed12::%player's uuid%} is not true:
						send "&7Now moving at +120%% speed!" to player
						set {-fluxSpeed12::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 1400 and 1500:
					set the player's walk speed to 0.46
					if {-fluxSpeed13::%player's uuid%} is not true:
						send "&7Now moving at +130%% speed!" to player
						set {-fluxSpeed13::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 1500 and 1600:
					set the player's walk speed to 0.48
					if {-fluxSpeed14::%player's uuid%} is not true:
						send "&7Now moving at +140%% speed!" to player
						set {-fluxSpeed14::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 1600 and 1700:
					set the player's walk speed to 0.5
					if {-fluxSpeed15::%player's uuid%} is not true:
						send "&7Now moving at +150%% speed!" to player
						set {-fluxSpeed15::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 1700 and 1800:
					set the player's walk speed to 0.52
					if {-fluxSpeed16::%player's uuid%} is not true:
						send "&7Now moving at +160%% speed!" to player
						set {-fluxSpeed16::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 1800 and 1900:
					set the player's walk speed to 0.54
					if {-fluxSpeed17::%player's uuid%} is not true:
						send "&7Now moving at +170%% speed!" to player
						set {-fluxSpeed17::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 1900 and 2000:
					set the player's walk speed to 0.56
					if {-fluxSpeed18::%player's uuid%} is not true:
						send "&7Now moving at +180%% speed!" to player
						set {-fluxSpeed18::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 2000 and 2100:
					set the player's walk speed to 0.58
					if {-fluxSpeed19::%player's uuid%} is not true:
						send "&7Now moving at +190%% speed!" to player
						set {-fluxSpeed19::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 2100 and 2200:
					set the player's walk speed to 0.6
					if {-fluxSpeed20::%player's uuid%} is not true:
						send "&7Now moving at +200%% speed!" to player
						set {-fluxSpeed20::%player's uuid%} to true

			else if player's off hand item is {Bliss.Flux.T1.%player%}:
				set {-fluxMovedTimer::%player's uuid%} to 3
				add 1 to {-fluxMoved::%player's uuid%}
				
				if {-fluxMoved::%player's uuid%} is between 0 and 100:
					set the player's walk speed to 0.2
					
				if {-fluxMoved::%player's uuid%} is between 100 and 200:
					set the player's walk speed to 0.22
					if {-fluxSpeed1::%player's uuid%} is not true:
						send "&7Now moving at +10%% speed!" to player
						set {-fluxSpeed1::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 200 and 300:
					set the player's walk speed to 0.24
					if {-fluxSpeed2::%player's uuid%} is not true:
						send "&7Now moving at +20%% speed!" to player
						set {-fluxSpeed2::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 300 and 400:
					set the player's walk speed to 0.26
					if {-fluxSpeed3::%player's uuid%} is not true:
						send "&7Now moving at +30%% speed!" to player
						set {-fluxSpeed3::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 400 and 500:
					set the player's walk speed to 0.28
					if {-fluxSpeed4::%player's uuid%} is not true:
						send "&7Now moving at +40%% speed!" to player
						set {-fluxSpeed4::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 500 and 600:
					set the player's walk speed to 0.3
					if {-fluxSpeed5::%player's uuid%} is not true:
						send "&7Now moving at +50%% speed!" to player
						set {-fluxSpeed5::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 600 and 700:
					set the player's walk speed to 0.32
					if {-fluxSpeed6::%player's uuid%} is not true:
						send "&7Now moving at +60%% speed!" to player
						set {-fluxSpeed6::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 700 and 800:
					set the player's walk speed to 0.34
					if {-fluxSpeed7::%player's uuid%} is not true:
						send "&7Now moving at +70%% speed!" to player
						set {-fluxSpeed7::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 900 and 1000:
					set the player's walk speed to 0.36
					if {-fluxSpeed8::%player's uuid%} is not true:
						send "&7Now moving at +80%% speed!" to player
						set {-fluxSpeed8::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 1000 and 1100:
					set the player's walk speed to 0.38
					if {-fluxSpeed9::%player's uuid%} is not true:
						send "&7Now moving at +90%% speed!" to player
						set {-fluxSpeed9::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 1100 and 1200:
					set the player's walk speed to 0.4
					if {-fluxSpeed10::%player's uuid%} is not true:
						send "&7Now moving at +100%% speed!" to player
						set {-fluxSpeed10::%player's uuid%} to true

				if {-fluxMoved::%player's uuid%} is between 1200 and 1300:
					set the player's walk speed to 0.42
					if {-fluxSpeed11::%player's uuid%} is not true:
						send "&7Now moving at +110%% speed!" to player
						set {-fluxSpeed11::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 1300 and 1400:
					set the player's walk speed to 0.44
					if {-fluxSpeed12::%player's uuid%} is not true:
						send "&7Now moving at +120%% speed!" to player
						set {-fluxSpeed12::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 1400 and 1500:
					set the player's walk speed to 0.46
					if {-fluxSpeed13::%player's uuid%} is not true:
						send "&7Now moving at +130%% speed!" to player
						set {-fluxSpeed13::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 1500 and 1600:
					set the player's walk speed to 0.48
					if {-fluxSpeed14::%player's uuid%} is not true:
						send "&7Now moving at +140%% speed!" to player
						set {-fluxSpeed14::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 1600 and 1700:
					set the player's walk speed to 0.5
					if {-fluxSpeed15::%player's uuid%} is not true:
						send "&7Now moving at +150%% speed!" to player
						set {-fluxSpeed15::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 1700 and 1800:
					set the player's walk speed to 0.52
					if {-fluxSpeed16::%player's uuid%} is not true:
						send "&7Now moving at +160%% speed!" to player
						set {-fluxSpeed16::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 1800 and 1900:
					set the player's walk speed to 0.54
					if {-fluxSpeed17::%player's uuid%} is not true:
						send "&7Now moving at +170%% speed!" to player
						set {-fluxSpeed17::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 1900 and 2000:
					set the player's walk speed to 0.56
					if {-fluxSpeed18::%player's uuid%} is not true:
						send "&7Now moving at +180%% speed!" to player
						set {-fluxSpeed18::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 2000 and 2100:
					set the player's walk speed to 0.58
					if {-fluxSpeed19::%player's uuid%} is not true:
						send "&7Now moving at +190%% speed!" to player
						set {-fluxSpeed19::%player's uuid%} to true
						
				if {-fluxMoved::%player's uuid%} is between 2100 and 2200:
					set the player's walk speed to 0.6
					if {-fluxSpeed20::%player's uuid%} is not true:
						send "&7Now moving at +200%% speed!" to player
						set {-fluxSpeed20::%player's uuid%} to true
						
			else:
				set {-fluxMoved::%player's uuid%} to 0
				set the player's walk speed to 0.2
				set {-fluxSpeed1::%player's uuid%} to false
				set {-fluxSpeed2::%player's uuid%} to false
				set {-fluxSpeed3::%player's uuid%} to false
				set {-fluxSpeed4::%player's uuid%} to false
				set {-fluxSpeed5::%player's uuid%} to false
				set {-fluxSpeed6::%player's uuid%} to false
				set {-fluxSpeed7::%player's uuid%} to false
				set {-fluxSpeed8::%player's uuid%} to false
				set {-fluxSpeed9::%player's uuid%} to false
				set {-fluxSpeed10::%player's uuid%} to false

				set {-fluxSpeed11::%player's uuid%} to false
				set {-fluxSpeed12::%player's uuid%} to false
				set {-fluxSpeed13::%player's uuid%} to false
				set {-fluxSpeed14::%player's uuid%} to false
				set {-fluxSpeed15::%player's uuid%} to false
				set {-fluxSpeed16::%player's uuid%} to false
				set {-fluxSpeed17::%player's uuid%} to false
				set {-fluxSpeed18::%player's uuid%} to false
				set {-fluxSpeed19::%player's uuid%} to false
				set {-fluxSpeed20::%player's uuid%} to false
	
on damage:
	if {Tag..%victim%} < 1:
		if {Bliss.Energy.%victim%} > 1:
			if attacker is charged creeper:
				if victim's off hand item is {Bliss.Flux.T2.%victim%}:
					cancel event

				if victim is holding {Bliss.Flux.T2.%victim%}:
					cancel event
